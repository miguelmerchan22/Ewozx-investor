{"version":3,"sources":["components/TronLinkGuide/TronLinkLogo.png","utils/index.js","cons.js","components/Contract/index.js","components/CrowdFunding/index.js","components/Historial/index.js","components/Oficina/index.js","components/Oficina2/index.js","components/TronLinkGuide/index.js","components/PanelOwner/index.js","components/App/index.js","index.js"],"names":["module","exports","utils","tronWeb","contract","setTronWeb","this","setContract","contractAddress","at","cons","delay","ms","Promise","res","setTimeout","exchange","ccxt","bithumb","nonce","milliseconds","proxy","apiKey","secret","amountTrx","ratetrx","ratewozx","tantoTrx","tantoWozx","minimo_usd","rango_minimo","walletSponsor","pry","pru","TRONGRID_API","console","log","tronApp","TronWeb2","WozxInvestor","Component","constructor","props","super","state","direccionTRX","informacionCuenta","usdtrx","min","texto","tronEnApp","priceUSDTRON","deposit","bind","rateWozx","comprarWozx","rateTRX","venderTRX","minDepo","rateT","saldoApp","consultarTodosUsuarios","registrarUsuario","consultarUsuario","actualizarUsuario","actualizarDireccion","consultarTransaccion","componentDidMount","Utils","window","setInterval","document","getElementById","innerHTML","trx","getAccount","account","address","fromHex","setState","id","proxyUrl","apiUrl","fetch","catch","error","response","json","result","market_data","current_price","usd","otro","datos","token","method","headers","body","JSON","stringify","mini","parseInt","MIN_DEPOSIT","call","mindepo","_hex","nuevoMinDeposit","send","COMISION_TRON","nuevaComisionTron","COMISION_WOZX","nuevaComisionWozx","COSTO_REGISTRO","nuevoCostoRegistro","registered","value","fetchBalance","consulta","balance","parseFloat","free","loadMarkets","closing_price","precio","toFixed","depomin","getBalance","walletApp","fromSun","balanceInSun","balanceInTRX","investors","investor","tronEntrante","tronDisponible","tronRetirado","wozxEntrante","wozxDisponible","wozxRetirado","isNaN","alert","confirm","sponsor","loc","location","href","indexOf","getString","split","GET","get","i","l","length","tmp","unescape","decodeURI","amount","pago","miRegistro","callValue","balanceTrx","investedWozx","withdrawnTrx","withdrawnWozx","t","reload","cositas","krw","createLimitBuyOrder","orden","info","status","params","fetchOrder","monto","depositoTron","sendTransaction","historial","push","tiempo","Date","now","valor","moneda","accion","link","render","className","type","placeholder","style","onClick","verHistorial","direccion","usuario","o","ver","evento","key","_id","target","rel","fontSize","title","splice","width","height","overflow","rango","ganancia","refe","wozxPe","wozxCa","miPrecioWozx","priceUSDWOZX","Investors","enviarWozx","Link","Wozx","rateW","syncBlockChain","then","data","err","mydireccion","range","prof","nivel","cantidad","accountAddress","isAddress","informacionDestino","text","aria-describedby","cursor","descuento","tipo","auth","texto3","texto4","fee","feetrx","funcion","alerta","balanceRef","totalRef","invested","paidAt","my","withdrawn","withdraw","venderWozx","comprarTRX","enviarTron","vereth","reset","withdrawETH","enviarEth","Tron","amountTrxsindescuento","COMISION_RETIRO","retirarTron","createLimitSellOrder","cost","orden2","params2","aumentar","recompensa","contractApp","depositoWozx","informacionSponsor","precioUsdTron","amountpararefer","depositoTronUsuario","id2","ope","retirarWozx","amountWozxDescuento","costo","c","w","wozx","wallet","ownerContrato","undefined","currency","versacado","withdrawableWozx","My","mywithdrawableWozx","withdrawableTrx","hay","minre","InContract","balanceContract","balanceTrxYo","tag2","sacado","amountsinfee","toString","ethereum","web3","escribireth","boton","cosa","eth","atuh","dirETH","walleteth","texto2","dirwozx","action","name","WEBSTORE_URL","logo","src","TronLinkLogo","alt","openTronLink","open","TronLinkGuide","installed","isowner","retiros","saldo","isOwner","pararRetiros","owner","ownerTronlink","sal","Do","stopWithdrawl","sacarSaldo","withdrawAll","App","loggedIn","resolve","tronWebState","ready","tries","timer","TronWeb","clearInterval","defaultAddress","hex","toHex","base58","on","root","ReactDOM"],"mappings":"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","file":"static/js/main.f40a4dee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/TronLinkLogo.f8e7d99a.png\";","const utils = {\r\n  tronWeb: false,\r\n  contract: false,\r\n\r\n  setTronWeb(tronWeb) {\r\n    this.tronWeb = tronWeb;\r\n  },\r\n\r\n  async setContract(tronWeb, contractAddress) {\r\n    this.contract = await tronWeb.contract().at(contractAddress);\r\n  }\r\n};\r\n\r\nexport default utils;\r\n","import {APP_AK, APP_SK, APP_WO, APP_MT} from \"@env\";\r\n\r\nconst AK = APP_AK;\r\nconst SK = APP_SK;\r\nconst WO = APP_WO;\r\nconst proxy = \"https://proxy-ewozx.herokuapp.com/\";\r\nconst mongo = \"https://ewozx-mdb.herokuapp.com/\";\r\nconst MT = APP_MT;\r\nconst PRU = \"shasta.\";// shasta1. para inhabilitar red de pruebas\r\nconst WS = \"TB7RTxBPY4eMvKjceXj8SWjVnZCrWr4XvF\";//T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb recibe los huerfanos por defecto\r\nconst descuento = 0.002;// 0.24 o 24% queda en la plataforma el restante se usa para comprar el 76% en wozx para los usuarios\r\nconst WOZX = 0.07; // para que el WOZX se Compre de inmediato\r\nconst TRX = 0.035; // para que el TRX se Venda de inmediato\r\nconst SC = \"TJjJ6jDvBoCXLnJw1ebdZRx7R4zRmuYHfE\";// direccion del contrato\r\nconst USD = 1; // minimo de inversion en dolares USD (100)\r\nconst SD = 0.1; // 10% de sensibilidad para modificar el precio minimo de inversion\r\nconst EX = \"TB7RTxBPY4eMvKjceXj8SWjVnZCrWr4XvF\"; //wallet de of exchange\r\n\r\nconst MA = 100; //cantidad minima de tron permitida en la wallet de la aplicación\r\n\r\nconst CR = 50; // costo de registro en la plataforma trx\r\n\r\nconst CE = 40; // Cantidad extra de tron que hay que tener para cubrir gastos de energia\r\n\r\nconst FEEW = 0.025; //fee de retiro del wozx por la platafora de ethereum\r\nconst FEET = 10; //fee de retiro del Tron por medio del contrato\r\n\r\nexport default {AK, SK, WO, proxy, PRU, WS, descuento, MA, WOZX, TRX, SC, USD, SD, EX, FEEW, FEET, mongo, MT, CR, CE};\r\n","\r\nimport cons from \"../../cons.js\";\r\n\r\nconst contractAddress = cons.SC;\r\n\r\nexport default contractAddress;","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport TronWeb2 from 'tronweb';\r\nimport ccxt from 'ccxt';\r\n\r\nimport contractAddress from \"../Contract\";\r\nimport cons from \"../../cons.js\";\r\n\r\nconst delay = ms => new Promise(res => setTimeout(res, ms));\r\n\r\nconst exchange = new ccxt.bithumb({\r\n    nonce () { return this.milliseconds () }\r\n});\r\n\r\nexchange.proxy = cons.proxy;\r\nexchange.apiKey = cons.AK;\r\nexchange.secret = cons.SK;\r\n\r\nvar amountTrx = 0;\r\nvar ratetrx = 0;\r\nvar ratewozx = 0;\r\n\r\nvar tantoTrx = cons.TRX;\r\nvar tantoWozx = cons.WOZX;\r\nvar minimo_usd = cons.USD;\r\nvar rango_minimo = cons.SD;\r\nvar walletSponsor = cons.WS;\r\n\r\n//console.log(contractAddress);\r\n\r\nconst pry = cons.WO;\r\n\r\nvar pru = \"\";\r\nif (cons.PRU === \"shasta.\") {\r\n  pru = cons.PRU;\r\n\r\n}\r\n\r\nconst TRONGRID_API = \"https://api.\"+pru+\"trongrid.io\";\r\nconsole.log(TRONGRID_API);\r\n\r\nconst tronApp = new TronWeb2(\r\n  TRONGRID_API,\r\n  TRONGRID_API,\r\n  TRONGRID_API,\r\n  pry\r\n);\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      direccionTRX: \"\",\r\n      informacionCuenta: {},\r\n      amountTrx: \"\",\r\n      usdtrx: \"\",\r\n      min: 3000,\r\n      texto: \"Deposit TRX\",\r\n      tronEnApp: 0,\r\n      priceUSDTRON: 0\r\n\r\n    };\r\n\r\n    this.deposit = this.deposit.bind(this);\r\n    this.rateWozx = this.rateWozx.bind(this);\r\n    this.comprarWozx = this.comprarWozx.bind(this);\r\n    this.rateTRX = this.rateTRX.bind(this);\r\n    this.venderTRX = this.venderTRX.bind(this);\r\n\r\n    this.minDepo = this.minDepo.bind(this);\r\n    this.rateT = this.rateT.bind(this);\r\n    this.saldoApp = this.saldoApp.bind(this);\r\n\r\n    this.consultarTodosUsuarios = this.consultarTodosUsuarios.bind(this);\r\n    this.registrarUsuario = this.registrarUsuario.bind(this);\r\n    this.consultarUsuario = this.consultarUsuario.bind(this);\r\n    this.actualizarUsuario = this.actualizarUsuario.bind(this);\r\n\r\n    this.actualizarDireccion = this.actualizarDireccion.bind(this);\r\n    this.consultarTransaccion = this.consultarTransaccion.bind(this);\r\n\r\n\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    this.minDepo();\r\n    setInterval(() => this.minDepo(),30*1000);\r\n    setInterval(() => this.actualizarDireccion(),3*1000);\r\n    await this.actualizarDireccion();\r\n    var { direccionTRX } = this.state;\r\n    await this.consultarUsuario(direccionTRX,false);\r\n    setInterval(() => this.consultarUsuario(direccionTRX,false),3*1000);\r\n\r\n  };\r\n\r\n  async actualizarDireccion() {\r\n\r\n    document.getElementById(\"linkContrato\").innerHTML = \"<a class='smoothscroll'   href='https://\"+pru+\"tronscan.org/#/contract/\"+contractAddress+\"/code' target='_blank' rel='noopener noreferrer'>Contract</a>\";\r\n\r\n    var account =  await window.tronWeb.trx.getAccount();\r\n    account = window.tronWeb.address.fromHex(account.address);\r\n\r\n    this.setState({\r\n      direccionTRX: account\r\n    });\r\n\r\n  };\r\n\r\n  async consultarTransaccion(id){\r\n\r\n    this.setState({\r\n      texto: \"Updating balance...\"\r\n    });\r\n    await delay(3000);\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'consultar/transaccion/'+id;\r\n\r\n    const response = await fetch(proxyUrl+apiUrl)\r\n    .catch(error =>{console.error(error)});\r\n    const json = await response.json();\r\n\r\n    return json.result;\r\n\r\n  };\r\n\r\n  async rateT(){\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = 'https://api.coingecko.com/api/v3/coins/tron';\r\n    const response = await fetch(proxyUrl+apiUrl)\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n    console.log(json.market_data.current_price.usd);\r\n    this.setState({\r\n      priceUSDTRON: json.market_data.current_price.usd\r\n    });\r\n    return json.market_data.current_price.usd;\r\n\r\n\r\n  };\r\n\r\n  async consultarTodosUsuarios(){\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'consultar/todos';\r\n    const response = await fetch(proxyUrl+apiUrl)\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n\r\n    return json;\r\n\r\n  };\r\n\r\n  async consultarUsuario(direccionTRX, otro){\r\n\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'consultar/'+direccionTRX;\r\n    const response = await fetch(proxyUrl+apiUrl)\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n\r\n    if (!otro) {\r\n      this.setState({\r\n        informacionCuenta: json\r\n      });\r\n      return json;\r\n    }else{\r\n      return json;\r\n    }\r\n\r\n  };\r\n\r\n  async actualizarUsuario( datos, otro ){\r\n    //Asegura que es el usuario conectado con tronlink\r\n    await this.actualizarDireccion();\r\n    var { direccionTRX } = this.state;\r\n    //encaso de recibir otro usiario se escoge el uasuario enviado para ser actualizado\r\n    if ( otro ) {\r\n      direccionTRX = otro;\r\n    }\r\n\r\n    datos.token = cons.MT;\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'actualizar/'+direccionTRX;\r\n    const response = await fetch(proxyUrl+apiUrl, {\r\n       method: 'POST',\r\n       headers: {\r\n        'Content-Type': 'application/json'\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n       body: JSON.stringify(datos)\r\n    })\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n\r\n    return json;\r\n\r\n  };\r\n\r\n  async registrarUsuario(datos){\r\n    //Asegura que es el usuario conectado\r\n    var { direccionTRX } = this.state;\r\n    //console.log(direccionTRX);\r\n    datos.token = cons.MT;\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'registrar/'+direccionTRX;\r\n    const response = await fetch(proxyUrl+apiUrl, {\r\n       method: 'POST',\r\n       headers: {\r\n        'Content-Type': 'application/json'\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n       body: JSON.stringify(datos)\r\n    })\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n    console.log(json);\r\n    return true;\r\n\r\n\r\n  };\r\n\r\n  async minDepo(){\r\n\r\n    var priceUSDTRON = await this.rateT();\r\n\r\n    var mini = parseInt(minimo_usd/priceUSDTRON);\r\n\r\n    var mindepo = await Utils.contract.MIN_DEPOSIT().call();\r\n    mindepo = parseInt(mindepo._hex)/1000000;\r\n\r\n    if ( mini > 0 && mindepo !== mini && ( ( mindepo >= mini+mini*rango_minimo) || ( mindepo <= mini-mini*rango_minimo) ) ) {\r\n\r\n      let contract = await tronApp.contract().at(contractAddress);//direccion del contrato para la W app\r\n      await contract.nuevoMinDeposit( mini * 1000000 ).send();\r\n      this.setState({\r\n        min: mini+1,\r\n\r\n      });\r\n      console.log(\"EVENTO: Nuevo minimo de deposito \"+mini+\" TRX // anterior \"+mindepo+\" TRX\");\r\n\r\n    }else{\r\n      this.setState({\r\n        min: mindepo+1,\r\n      });\r\n      console.log(\"INFO: Minimo de deposito \"+mini+\" TRX // aplicación \"+mindepo+\" TRX\");\r\n    }\r\n\r\n    var COMISION_TRON = await Utils.contract.COMISION_TRON().call();\r\n    COMISION_TRON = parseInt(COMISION_TRON._hex)/1000000;\r\n\r\n    if ( COMISION_TRON > 0 && COMISION_TRON !== cons.FEET ) {\r\n\r\n      let contract = await tronApp.contract().at(contractAddress);//direccion del contrato para la W app\r\n      await contract.nuevaComisionTron( cons.FEET * 1000000 ).send();\r\n      console.log(\"EVENTO: Nueva comision TRON \"+cons.FEET +\" TRX // anterior \"+COMISION_TRON+\" TRX\");\r\n\r\n    }\r\n\r\n    var COMISION_WOZX = await Utils.contract.COMISION_WOZX().call();\r\n    COMISION_WOZX = parseInt(COMISION_WOZX._hex)/1000000;\r\n\r\n    if ( COMISION_WOZX > 0 && COMISION_WOZX !== cons.FEEW ) {\r\n\r\n      let contract = await tronApp.contract().at(contractAddress);//direccion del contrato para la W app\r\n      await contract.nuevaComisionWozx( cons.FEEW * 1000000 ).send();\r\n      console.log(\"EVENTO: Nueva comision WOZX \"+cons.FEEW +\" WOZX // anterior \"+COMISION_WOZX+\" WOZX\");\r\n\r\n    }\r\n\r\n    var COSTO_REGISTRO = await Utils.contract.COSTO_REGISTRO().call();\r\n    COSTO_REGISTRO = parseInt(COSTO_REGISTRO._hex)/1000000;\r\n\r\n    if ( COSTO_REGISTRO > 0 && COSTO_REGISTRO !== cons.CR ) {\r\n\r\n      let contract = await tronApp.contract().at(contractAddress);//direccion del contrato para la W app\r\n      await contract.nuevoCostoRegistro( cons.CR * 1000000 ).send();\r\n      console.log(\"EVENTO: Nuevo costo de registro \"+cons.CR +\" TRX // anterior \"+COSTO_REGISTRO+\" TRX\");\r\n\r\n    }\r\n\r\n    await this.actualizarDireccion();// asegura que es la wallet conectada con el tronlik\r\n    var { direccionTRX } = this.state;\r\n    await this.consultarUsuario(direccionTRX,false);\r\n    var { informacionCuenta } = this.state;\r\n\r\n    if (!informacionCuenta.registered) {\r\n      document.getElementById(\"amount\").value = \"\";\r\n      this.setState({\r\n        texto:\"Click to register\"\r\n      });\r\n    }else{\r\n      this.setState({\r\n        texto:\"Deposit TRX\"\r\n      });\r\n    }\r\n\r\n  };\r\n\r\n  async saldoApp(){\r\n\r\n    var consulta = await exchange.fetchBalance();\r\n\r\n    var balance = parseFloat(consulta['TRX'].free);\r\n\r\n    this.setState({\r\n      tronEnApp: balance\r\n    });\r\n\r\n\r\n  };\r\n\r\n  async rateTRX(){\r\n\r\n    var consulta = await exchange.loadMarkets();\r\n\r\n    consulta = consulta['TRX/KRW'];\r\n\r\n    consulta = consulta['info'].closing_price;\r\n\r\n    var precio = parseFloat(consulta);\r\n    console.log(precio); //precio en KRW\r\n\r\n\r\n    ratetrx = precio-precio*tantoTrx;\r\n    ratetrx = parseFloat(ratetrx.toFixed(2));\r\n\r\n    console.log(ratetrx);\r\n\r\n    return ratetrx;\r\n\r\n\r\n\r\n  };\r\n\r\n  async venderTRX(){\r\n\r\n    await this.saldoApp();\r\n    await this.rateTRX();\r\n\r\n    this.setState({\r\n      texto:\"Please wait\"\r\n    });\r\n\r\n    // verifica el monto sea mayor a minimo\r\n    amountTrx = document.getElementById(\"amount\").value;\r\n    amountTrx = parseFloat(amountTrx);\r\n\r\n    var result = false;\r\n    var depomin = await Utils.contract.MIN_DEPOSIT().call();\r\n    depomin = parseInt(depomin._hex)/1000000;\r\n\r\n    // mira que el saldo de la wallet app sea por lo menos 1000 TRX\r\n    var walletApp = await tronApp.trx.getBalance();\r\n    walletApp = window.tronWeb.fromSun(walletApp); //string\r\n    walletApp = parseInt(walletApp);//number\r\n\r\n    // verifica si ya esta registrado\r\n    await this.actualizarDireccion();// asegura que es la wallet conectada con el tronlik\r\n    var { direccionTRX } = this.state;\r\n    await this.consultarUsuario(direccionTRX,false);\r\n    var { informacionCuenta } = this.state;\r\n\r\n    const balanceInSun = await window.tronWeb.trx.getBalance(); //number\r\n    var balanceInTRX = window.tronWeb.fromSun(balanceInSun); //string\r\n    balanceInTRX = parseInt(balanceInTRX);//number\r\n\r\n    var account =  await window.tronWeb.trx.getAccount();\r\n    account = window.tronWeb.address.fromHex(account.address);\r\n\r\n    var investor = await Utils.contract.investors(account).call();\r\n\r\n    investor.tronEntrante = parseInt(investor.tronEntrante._hex)/1000000;\r\n    investor.tronDisponible = parseInt(investor.tronDisponible._hex)/1000000;\r\n    investor.tronRetirado = parseInt(investor.tronRetirado._hex)/1000000;\r\n    investor.wozxEntrante = parseInt(investor.wozxEntrante._hex)/1000000;\r\n    investor.wozxDisponible = parseInt(investor.wozxDisponible._hex)/1000000;\r\n    investor.wozxRetirado = parseInt(investor.wozxRetirado._hex)/1000000;\r\n    console.log(investor);\r\n\r\n    if (walletApp > cons.MA){\r\n\r\n      if (informacionCuenta.registered) {\r\n\r\n        if (amountTrx <= 0 || amountTrx > balanceInTRX-cons.CE || isNaN(amountTrx)) {\r\n\r\n          if ( amountTrx <= 0 || isNaN(amountTrx) ) {\r\n            window.alert(\"Please enter a correct amount\");\r\n          }\r\n\r\n          if (amountTrx > balanceInTRX-cons.CE) {\r\n            window.alert(\"You not enough TRON\");\r\n          }\r\n\r\n          document.getElementById(\"amount\").value = \"\";\r\n          this.setState({\r\n            texto:\"Deposit TRX\"\r\n          });\r\n\r\n        }else{\r\n\r\n          result = window.confirm(\"You are sure that you want to invest \"+amountTrx+\" TRX?, remember that this action have cost\");\r\n\r\n        }\r\n\r\n        if (result) {\r\n\r\n          if (amountTrx >= depomin && amountTrx <= balanceInTRX-cons.CE) {\r\n            this.deposit();\r\n          }\r\n\r\n        }else{\r\n          if ( depomin >= amountTrx ){\r\n            this.setState({\r\n              texto:\"Enter a higher amount\"\r\n            });\r\n          }\r\n\r\n          if (balanceInTRX-cons.CE <= amountTrx ){\r\n            this.setState({\r\n              texto:\"Not enough TRON\"\r\n            });\r\n          }\r\n\r\n        }\r\n\r\n      }else{\r\n        if ( balanceInTRX >= 100) {\r\n            //registra a la persona con los referidos\r\n            var sponsor = walletSponsor;\r\n            var loc = document.location.href;\r\n            if(loc.indexOf('?')>0){\r\n                var getString = loc.split('?')[1];\r\n                var GET = getString.split('&');\r\n                var get = {};\r\n                for(var i = 0, l = GET.length; i < l; i++){\r\n                    var tmp = GET[i].split('=');\r\n                    get[tmp[0]] = unescape(decodeURI(tmp[1]));\r\n                }\r\n\r\n                if (get['ref']) {\r\n                  tmp = get['ref'].split('#');\r\n\r\n                  var infoSponsor = await this.consultarUsuario(tmp[0],true);\r\n\r\n                  if ( infoSponsor.registered ) {\r\n                    sponsor = tmp[0];\r\n                  }\r\n                }\r\n            }\r\n\r\n            document.getElementById(\"amount\").value = cons.CR;\r\n\r\n            await this.actualizarDireccion();\r\n            direccionTRX = this.state;\r\n\r\n            var amount = parseInt(cons.CR * 1000000);\r\n\r\n            var pago = false;\r\n\r\n             if ( !investor.registered ) {\r\n               var id = await Utils.contract.miRegistro().send({ callValue: amount});\r\n               await delay(3000);\r\n               pago = await this.consultarTransaccion(id);\r\n             }else{\r\n               pago = true;\r\n               id = \"#\"\r\n             }\r\n\r\n            if(pago) {\r\n\r\n              await this.registrarUsuario({ sponsor: sponsor, id: id });\r\n\r\n              await this.actualizarDireccion();// asegura que es la wallet conectada con el tronlik\r\n              direccionTRX = this.state;\r\n              await this.consultarUsuario(direccionTRX,false);\r\n              informacionCuenta = this.state;\r\n\r\n              if ( investor.registered ) {\r\n\r\n                this.setState({\r\n                  texto:\"Syncing with blockchain\"\r\n                });\r\n\r\n                await delay(3000);\r\n\r\n                informacionCuenta.registered = investor.registered;\r\n                informacionCuenta.balanceTrx = investor.tronDisponible;\r\n                informacionCuenta.investedWozx = investor.wozxDisponible;\r\n                informacionCuenta.withdrawnTrx = investor.tronEntrante-investor.tronDisponible;\r\n                informacionCuenta.withdrawnWozx = investor.wozxEntrante-investor.wozxDisponible;\r\n\r\n                await this.actualizarUsuario( informacionCuenta, null );\r\n              }\r\n\r\n              document.getElementById(\"amount\").value = \"\";\r\n              this.setState({\r\n                texto:\"Registration completed\"\r\n              });\r\n              delay(2000);\r\n               var t = 3;\r\n              setInterval(() => {\r\n                this.setState({\r\n                  texto:\"Reload in: \"+t\r\n                });\r\n                t--;\r\n              },1*1000);\r\n\r\n              setInterval(() => document.location.reload(),3*1000);\r\n\r\n            }else{\r\n            document.getElementById(\"amount\").value = \"\";\r\n            this.setState({\r\n              texto:\"Not enough TRON or cancelled\"\r\n            });\r\n\r\n          }\r\n\r\n\r\n        }else{\r\n          window.alert(\"You wallet will has 100 trx to do the register\");\r\n        }\r\n      }\r\n    }else {\r\n      window.alert(\"Please contact the administrator Code: IMT-E-WA\");\r\n      // IMT-E-WA = Ingrese Mas Tron En la  Wallet de la Aplicación.\r\n      console.log(\"Minimo de 1000 tron Alcanzado ingresa más tron a la wallet de la plicación: \"+cons.SC)\r\n    }\r\n\r\n\r\n  };\r\n\r\n  async rateWozx(){\r\n\r\n    var cositas = await exchange.loadMarkets();\r\n\r\n    cositas = cositas['WOZX/KRW'];\r\n\r\n    var precio = cositas['info'].closing_price;\r\n\r\n    precio = parseInt(precio);\r\n    console.log(precio);\r\n\r\n    ratewozx = precio+precio*tantoWozx;\r\n\r\n    ratewozx = parseInt(ratewozx);\r\n\r\n\r\n  }\r\n\r\n  async comprarWozx(krw){\r\n\r\n    await this.rateWozx();\r\n\r\n    this.setState({\r\n      texto:\"Processing...\"\r\n    });\r\n\r\n    var amount = krw/ratewozx;\r\n    amount = amount.toFixed(4);\r\n    console.log(amount);\r\n\r\n    var orden = await exchange.createLimitBuyOrder('WOZX/KRW', amount, ratewozx);\r\n\r\n    console.log(orden);\r\n\r\n    if (orden.info.status === \"0000\") {\r\n\r\n      var symbol = \"WOZX/KRW\";\r\n      var params = {};\r\n\r\n      var cositas = await exchange.fetchOrder(orden.id, symbol, params);\r\n\r\n      var monto = cositas.amount;\r\n\r\n      console.log(monto)\r\n\r\n    }else{\r\n      this.setState({\r\n        texto:\"Error: U-Cf-408\"\r\n      });\r\n      //No hay suficiente saldo de USD en Bithumb.com\r\n    }\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  async deposit() {\r\n\r\n    let amount = document.getElementById(\"amount\").value;\r\n\r\n    this.setState({\r\n      texto:\"Reciving TRON\"\r\n    });\r\n\r\n    amount = parseInt(amount * 1000000);\r\n\r\n    var id = await Utils.contract.depositoTron().send({callValue:amount});\r\n    await delay(3000);\r\n    var pago = await this.consultarTransaccion(id);\r\n\r\n    if ( pago ) {\r\n\r\n      tronApp.trx.sendTransaction(cons.EX, amount);\r\n\r\n      amount = amount/1000000;\r\n\r\n      var { informacionCuenta } = this.state;\r\n\r\n      informacionCuenta.balanceTrx += amount;\r\n\r\n      informacionCuenta.historial.push({\r\n          tiempo: Date.now(),\r\n          valor: amount,\r\n          moneda: 'TRX',\r\n          accion: 'Deposit to plataform',\r\n          link: id\r\n\r\n      })\r\n\r\n      var otro = null;\r\n\r\n      await this.actualizarUsuario( informacionCuenta, otro );\r\n\r\n      this.setState({\r\n        texto:\"Deposit is done!\"\r\n      });\r\n\r\n    }else{\r\n\r\n      this.setState({\r\n        texto:\"Canceled for User\"\r\n      });\r\n    }\r\n\r\n    document.getElementById(\"amount\").value = \"\";\r\n\r\n\r\n  };\r\n\r\n  render() {\r\n    var { min, texto} = this.state;\r\n\r\n    min = \"Min. deposit \"+min+\" TRX\";\r\n\r\n    return (\r\n\r\n      <div className=\"card wow bounceInUp\">\r\n        <div className=\"card-body\">\r\n        <header className=\"section-header\">\r\n              <h3>Make a deposit</h3>\r\n          </header>\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <input type=\"number\" className=\"form-control amount\" id=\"amount\" placeholder={min}></input>\r\n                <p className=\"card-text\">You must have ~ 40 TRX to make the transaction</p>\r\n              </div>\r\n            </form>\r\n          <button type=\"button\" className=\"btn btn-light\" style={{'backgroundColor': 'green','color': 'white','borderBlockColor': 'green'}} onClick={() => this.venderTRX()}>{texto}</button>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\nimport cons from \"../../cons.js\";\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      historial: []\r\n\r\n    }\r\n\r\n    this.verHistorial = this.verHistorial.bind(this);\r\n    this.consultarUsuario = this.consultarUsuario.bind(this);\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    await this.verHistorial();\r\n  };\r\n\r\n  async consultarUsuario(direccionTRX){\r\n\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'consultar/'+direccionTRX;\r\n    const response = await fetch(proxyUrl+apiUrl)\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n\r\n    console.log(json);\r\n    return json;\r\n\r\n  };\r\n\r\n  async verHistorial(){\r\n\r\n    var historial = [];\r\n\r\n    var direccion =  await window.tronWeb.trx.getAccount();\r\n    direccion = window.tronWeb.address.fromHex(direccion.address);\r\n\r\n    var usuario =  await this.consultarUsuario(direccion, false);\r\n\r\n    if ( usuario.registered ) {\r\n\r\n      if ( usuario.historial.length > 0) {\r\n\r\n        var o = 0\r\n        if (usuario.historial.length > 10) {\r\n          o = usuario.historial.length-10;\r\n        }\r\n        for (var i = o; i < usuario.historial.length; i++) {\r\n\r\n          var ver = usuario.historial[i];\r\n          ver.tiempo = new Date(ver.tiempo);\r\n          var pru = \"\";\r\n          if (cons.PRU === \"shasta.\") {\r\n            pru = cons.PRU;\r\n          }\r\n          ver.link = \"https://\"+pru+\"tronscan.io/#/transaction/\"+ver.link\r\n\r\n          let evento = (\r\n\r\n              <div className=\"col-full\" key={ver._id}>\r\n                <a href={ver.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  <span style={{fontSize: '18px'}} title={ver.tiempo}> {ver.valor} | {ver.moneda} | {ver.accion} </span>\r\n                </a>\r\n              </div>\r\n\r\n          );\r\n          historial.splice(0,0,evento);\r\n\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      historial: historial\r\n    });\r\n\r\n  };\r\n\r\n  render() {\r\n\r\n    const divStyle = {\r\n      width: '100%',\r\n      height:'115px',\r\n      overflow: 'scroll'\r\n    };\r\n\r\n    return (\r\n\r\n      <div>\r\n        <h3>Transactions <button type=\"button\" className=\"btn btn-light\" onClick={() => this.verHistorial()}>Reload</button></h3>\r\n\r\n        <div style={divStyle} >\r\n\r\n          {this.state.historial}\r\n\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nimport cons from \"../../cons.js\";\r\n\r\nimport ccxt from 'ccxt';\r\n\r\nconst delay = ms => new Promise(res => setTimeout(res, ms));\r\n\r\nconst exchange = new ccxt.bithumb({\r\n    nonce () { return this.milliseconds () }\r\n});\r\n\r\nexchange.proxy = cons.proxy;\r\nexchange.apiKey = cons.AK;\r\nexchange.secret = cons.SK;\r\n\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      rango: \"N/A\",\r\n      ganancia: 0,\r\n      refe: [],\r\n      direccion: \"\",\r\n      link: \"Make an investment to get the referral LINK\",\r\n      registered: false,\r\n      balanceTrx: \"0\",\r\n      withdrawnTrx: \"0\",\r\n      investedWozx: \"0\",\r\n      withdrawnWozx: \"0\",\r\n      wozxPe: false,\r\n      wozxCa: 0,\r\n      miPrecioWozx: 0,\r\n      priceUSDWOZX: 0\r\n\r\n    };\r\n\r\n    this.Investors = this.Investors.bind(this);\r\n    this.enviarWozx = this.enviarWozx.bind(this);\r\n    this.Link = this.Link.bind(this);\r\n    this.Wozx = this.Wozx.bind(this);\r\n    this.rateW = this.rateW.bind(this);\r\n\r\n    this.consultarUsuario = this.consultarUsuario.bind(this);\r\n    this.actualizarDireccion = this.actualizarDireccion.bind(this);\r\n    this.actualizarUsuario = this.actualizarUsuario.bind(this);\r\n\r\n    this.consultarTransaccion = this.consultarTransaccion.bind(this);\r\n    this.syncBlockChain = this.syncBlockChain.bind(this);\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    this.rateW();\r\n    await this.Link();\r\n    setInterval(() => this.Link(),3*1000);\r\n    await this.Investors();\r\n    setInterval(() => this.Investors(),10*1000);\r\n  };\r\n\r\n  async consultarTransaccion(id){\r\n\r\n    this.setState({\r\n      texto: \"Updating balance...\"\r\n    });\r\n    await delay(3000);\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'consultar/transaccion/'+id;\r\n\r\n    const response = await fetch(proxyUrl+apiUrl)\r\n    .catch(error =>{console.error(error)});\r\n    const json = await response.json();\r\n\r\n    return json.result;\r\n\r\n  };\r\n\r\n  async consultarUsuario(direccionTRX, otro){\r\n\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'consultar/'+direccionTRX;\r\n    const response = await fetch(proxyUrl+apiUrl)\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n\r\n    if (!otro) {\r\n      this.setState({\r\n        informacionCuenta: json\r\n      });\r\n      return json;\r\n    }else{\r\n\r\n      console.log(json);\r\n      return json;\r\n    }\r\n\r\n  };\r\n\r\n  async actualizarDireccion() {\r\n\r\n    var account =  await window.tronWeb.trx.getAccount();\r\n    account = window.tronWeb.address.fromHex(account.address);\r\n\r\n    this.setState({\r\n      direccionTRX: account\r\n    });\r\n\r\n  };\r\n\r\n  async actualizarUsuario( datos, otro ){\r\n    //Asegura que es el usuario conectado con tronlink\r\n    await this.actualizarDireccion();\r\n    var { direccionTRX } = this.state;\r\n    //encaso de recibir otro usiario se escoge el uasuario enviado para ser actualizado\r\n    if ( otro ) {\r\n      direccionTRX = otro;\r\n    }\r\n\r\n    datos.token = cons.MT;\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'actualizar/'+direccionTRX;\r\n    const response = await fetch(proxyUrl+apiUrl, {\r\n       method: 'POST',\r\n       headers: {\r\n        'Content-Type': 'application/json'\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n       body: JSON.stringify(datos)\r\n    })\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n\r\n    console.log(json);\r\n    return json;\r\n\r\n  };\r\n\r\n  async rateW(){\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = 'https://api.coingecko.com/api/v3/coins/wozx';\r\n    fetch(proxyUrl+apiUrl).then(response => {\r\n      return response.json();\r\n    }).then(data => {\r\n      // Work with JSON data\r\n      this.setState({\r\n        priceUSDWOZX: data.market_data.current_price.usd\r\n      });\r\n\r\n    }).catch(err => {\r\n        console.log(err)\r\n\r\n    });\r\n\r\n  };\r\n\r\n  async Wozx (){\r\n\r\n    const { investedWozx } = this.state;\r\n\r\n    document.getElementById(\"cantidadwozx\").value = investedWozx;\r\n\r\n  };\r\n\r\n  async Link() {\r\n    const {registered} = this.state;\r\n    if(registered){\r\n\r\n      let loc = document.location.href;\r\n      if(loc.indexOf('?')>0){\r\n        loc = loc.split('?')[0];\r\n        loc = loc.split('#')[0];\r\n      }\r\n      let mydireccion = await window.tronWeb.trx.getAccount();\r\n      mydireccion = window.tronWeb.address.fromHex(mydireccion.address)\r\n      mydireccion = loc+'?ref='+mydireccion;\r\n      this.setState({\r\n        link: mydireccion,\r\n      });\r\n    }else{\r\n      this.setState({\r\n        link: \"Haz una inversión para obtener el LINK de referido\",\r\n      });\r\n    }\r\n  }\r\n\r\n  async Investors() {\r\n\r\n    this.rateW();\r\n\r\n    const {investedWozx, priceUSDWOZX} = this.state;\r\n\r\n    var direccion = await window.tronWeb.trx.getAccount();\r\n    direccion = direccion = window.tronWeb.address.fromHex(direccion.address);\r\n\r\n    var usuario =  await this.consultarUsuario(direccion, false);\r\n    var range = \"N/A\";\r\n    var prof = usuario.rango;\r\n\r\n    prof = prof.toFixed(2);\r\n    prof = parseFloat(prof);\r\n    //console.log(prof);\r\n    if (prof > 0 && prof < 1000  ) {\r\n      range = \"PIONEER\"\r\n    }\r\n    if (prof >= 1000 && prof < 5000  ) {\r\n      range = \"ZAPHIRE\"\r\n    }\r\n    if (prof >= 5000 && prof < 20000  ) {\r\n      range = \"RUBY\"\r\n    }\r\n    if (prof >= 20000 && prof < 50000  ) {\r\n      range = \"ESMERALDA\"\r\n    }\r\n    if (prof >= 50000 && prof < 140000  ) {\r\n      range = \"DIAMANTE\"\r\n    }\r\n    if (prof >= 140000 && prof < 400000  ) {\r\n      range = \"DIAMANTE AZUL\"\r\n    }\r\n    if (prof >= 400000 && prof < 1000000  ) {\r\n      range = \"DIAMANTE NEGRO\"\r\n    }\r\n    if (prof >= 1000000) {\r\n      range = \"DIAMANTE CORONA\"\r\n    }\r\n    //console.log(prof);\r\n\r\n\r\n    this.setState({\r\n      direccion: direccion,\r\n      registered: usuario.registered,\r\n      balanceTrx: usuario.balanceTrx,\r\n      withdrawnTrx: usuario.withdrawnTrx,\r\n      investedWozx: usuario.investedWozx,\r\n      withdrawnWozx: usuario.withdrawnWozx,\r\n      refe: usuario.nivel,\r\n      rango: range,\r\n      ganancia: prof,\r\n      miPrecioWozx: investedWozx*priceUSDWOZX\r\n    });\r\n\r\n  };\r\n\r\n  async syncBlockChain(){\r\n    var account =  await window.tronWeb.trx.getAccount();\r\n    account = window.tronWeb.address.fromHex(account.address);\r\n    var informacionCuenta = await this.consultarUsuario(account,false);\r\n\r\n    console.log(informacionCuenta);\r\n\r\n    var investor = await Utils.contract.investors(account).call();\r\n\r\n    console.log(investor);\r\n\r\n    if ( investor.registered && informacionCuenta.registered ) {\r\n\r\n      investor.tronEntrante = parseInt(investor.tronEntrante._hex)/1000000;\r\n      investor.tronDisponible = parseInt(investor.tronDisponible._hex)/1000000;\r\n      investor.tronRetirado = parseInt(investor.tronRetirado._hex)/1000000;\r\n      investor.wozxEntrante = parseInt(investor.wozxEntrante._hex)/1000000;\r\n      investor.wozxDisponible = parseInt(investor.wozxDisponible._hex)/1000000;\r\n      investor.wozxRetirado = parseInt(investor.wozxRetirado._hex)/1000000;\r\n\r\n      informacionCuenta.balanceTrx = investor.tronDisponible;\r\n      informacionCuenta.investedWozx = investor.wozxDisponible;\r\n      informacionCuenta.withdrawnTrx = investor.tronEntrante-investor.tronDisponible;\r\n      informacionCuenta.withdrawnWozx = investor.wozxEntrante-investor.wozxDisponible;\r\n\r\n      await this.actualizarUsuario( informacionCuenta, null );\r\n    }\r\n  }\r\n\r\n  async enviarWozx(){\r\n\r\n    const {investedWozx} = this.state;\r\n\r\n    let direccion = document.getElementById(\"enviartronwozx\").value;\r\n    var cantidad = document.getElementById(\"cantidadwozx\").value;\r\n    cantidad = parseFloat(cantidad);\r\n\r\n    var account =  await window.tronWeb.trx.getAccount();\r\n    var accountAddress = account.address;\r\n    accountAddress = window.tronWeb.address.fromHex(accountAddress);\r\n\r\n    var result= false;\r\n\r\n    console.log(direccion.length);\r\n    if ( !window.tronWeb.isAddress(direccion) || accountAddress === direccion ) {\r\n\r\n      window.alert(\"Please enter a correct address\");\r\n      document.getElementById(\"enviartronwozx\").value = \"\";\r\n\r\n    }else{\r\n\r\n\r\n      if (cantidad <= 0 || isNaN(cantidad) || cantidad > investedWozx || cantidad < cons.FEEW) {\r\n        window.alert(\"Please enter a correct amount\");\r\n        document.getElementById(\"cantidadwozx\").value = \"\";\r\n\r\n      }else{\r\n\r\n        result = window.confirm(\"You are sure that you want to SEND \"+cantidad+\" Wozx?, remember that this action cannot be reversed - fee: \"+cons.FEEW);\r\n\r\n      }\r\n\r\n    }\r\n\r\n    account =  await window.tronWeb.trx.getAccount();\r\n    accountAddress = account.address;\r\n    accountAddress = window.tronWeb.address.fromHex(accountAddress);\r\n\r\n    var informacionCuenta = await this.consultarUsuario(accountAddress, true);\r\n    var informacionDestino = await this.consultarUsuario(direccion, true);\r\n\r\n    var id = await Utils.contract.enviarWozx(direccion, parseInt(cantidad*1000000)).send();\r\n    await delay(3000);\r\n    var pago = await this.consultarTransaccion(id);\r\n\r\n    if (result && pago && informacionCuenta.registered && informacionDestino.registered) {\r\n\r\n      informacionCuenta.investedWozx -= cantidad;\r\n      informacionCuenta.withdrawnWozx += cantidad;\r\n      informacionCuenta.historial.push({\r\n          tiempo: Date.now(),\r\n          valor: cantidad,\r\n          moneda: 'WOZX',\r\n          accion: 'Sed to: '+direccion,\r\n          link: id\r\n\r\n      })\r\n\r\n      await this.actualizarUsuario( informacionCuenta, informacionCuenta.direccion);\r\n\r\n      informacionDestino.investedWozx += cantidad-cons.FEEW;\r\n      informacionDestino.historial.push({\r\n          tiempo: Date.now(),\r\n          valor: cantidad,\r\n          moneda: 'WOZX',\r\n          accion: 'Send From: '+accountAddress\r\n\r\n      })\r\n\r\n      await this.actualizarUsuario( informacionDestino, informacionDestino.direccion);\r\n\r\n      document.getElementById(\"cantidadwozx\").value = \"\";\r\n\r\n    }\r\n\r\n  };\r\n\r\n\r\n  render() {\r\n    var {miPrecioWozx, wozxPe, wozxCa, refe, balanceTrx, withdrawnTrx, investedWozx,  withdrawnWozx , direccion, link, rango, ganancia} = this.state;\r\n\r\n\r\n\r\n\r\n    if ( wozxPe ) {\r\n      wozxPe =\"(~ \"+wozxCa+\" WOZX)\";\r\n    }else{\r\n      wozxPe =\"\";\r\n    }\r\n\r\n\r\n    withdrawnTrx = parseFloat(withdrawnTrx);\r\n    withdrawnTrx = withdrawnTrx.toFixed(2);\r\n\r\n    investedWozx = parseFloat(investedWozx);\r\n    investedWozx  = investedWozx.toFixed(4);\r\n\r\n    withdrawnWozx = parseFloat(withdrawnWozx);\r\n    withdrawnWozx = withdrawnWozx.toFixed(4);\r\n\r\n    balanceTrx = parseFloat(balanceTrx);\r\n    balanceTrx = balanceTrx.toFixed(2);\r\n\r\n    return (\r\n\r\n      <div id=\"officer\" className=\"container\">\r\n\r\n        <header style={{'textAlign': 'center'}} className=\"section-header\">\r\n          <h3 className=\"white\"><span style={{'fontWeight': 'bold'}}>\r\n          My office:</span> <br></br>\r\n          <span style={{'fontSize': '18px'}}>\r\n\r\n            {direccion} <br />\r\n            <span className=\"subhead\">{investedWozx} WOZX =</span> $ {miPrecioWozx.toFixed(2)} USD <br />\r\n            <span className=\"subhead\">Career range:</span><a href=\"/range.html\"> {rango} </a> <br />\r\n            <span className=\"subhead\">Profits:</span> $ {ganancia} USD\r\n\r\n          </span></h3><br />\r\n          <ul className=\"stats-tabs\">\r\n            <li><a href=\"#officer\">{refe[0]} <em>Level 1</em></a></li>\r\n            <li><a href=\"#officer\">{refe[1]} <em>Level 2</em></a></li>\r\n            <li><a href=\"#officer\">{refe[2]} <em>Level 3</em></a></li>\r\n            <li><a href=\"#officer\">{refe[3]} <em>Level 4</em></a></li>\r\n            <li><a href=\"#officer\">{refe[4]} <em>Level 5</em></a></li>\r\n            <li><a href=\"#officer\">{refe[5]} <em>Level 6</em></a></li>\r\n            <li><a href=\"#officer\">{refe[6]} <em>Level 7</em></a></li>\r\n            <li><a href=\"#officer\">{refe[7]} <em>Level 8</em></a></li>\r\n            <li><a href=\"#officer\">{refe[8]} <em>Level 9</em></a></li>\r\n            <li><a href=\"#officer\">{refe[9]} <em>Level 10</em></a></li>\r\n          </ul>\r\n\r\n          <h3 className=\"white\" style={{'fontWeight': 'bold'}}>Referral link:</h3>\r\n          <h6 className=\"white\" ><a href={link}>{link}</a>&nbsp;<br /><br />\r\n          <CopyToClipboard text={link}>\r\n            <button type=\"button\" className=\"btn btn-info\">Copy to clipboard</button>\r\n          </CopyToClipboard>\r\n          </h6>\r\n          <hr></hr>\r\n\r\n        </header>\r\n\r\n        <div className=\"row centrartexto\">\r\n\r\n          <div className=\"col-five\">\r\n\r\n              <h1 className=\"subhead\">Balance</h1>\r\n              <h3 className=\"display-2--light\">{investedWozx} WOZX</h3>\r\n              <h3 className=\"display-2--light\">{wozxPe}</h3>\r\n              <hr></hr>\r\n\r\n          </div>\r\n\r\n          <div className=\"col-seven\">\r\n\r\n              <h1 className=\"subhead\">Withdrawn</h1>\r\n              <h3 className=\"display-2--light\">{withdrawnWozx} WOZX</h3>\r\n              <hr></hr>\r\n\r\n          </div>\r\n        </div>\r\n        <div className=\"row centrartexto\">\r\n\r\n          <div className=\"col-five\">\r\n\r\n              <h1 className=\"subhead\">Balance</h1>\r\n              <h3 className=\"display-2--light\">{balanceTrx} TRX</h3>\r\n              <hr></hr>\r\n\r\n          </div>\r\n\r\n          <div className=\"col-seven\">\r\n\r\n              <h1 className=\"subhead\">Withdrawn</h1>\r\n              <h3 className=\"display-2--light\">{withdrawnTrx} TRX</h3>\r\n              <hr></hr>\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"row centrartexto\">\r\n          <div className=\"col-twelve\">\r\n            <a className=\"btn btn-light\" href=\"#officer\" style={{'backgroundColor': 'green','color': 'white','borderBlockColor': 'green'}} onClick={() => this.syncBlockChain()}>Sync whit BlockChain</a><br />\r\n            <small id=\"syncHelp\" className=\"form-text text-muted\">Use it with caution, only when you have questions about your balance</small><br /><br />\r\n          </div>\r\n        </div>\r\n        <div className=\"row centrartexto\">\r\n\r\n          <div className=\"col-seven\">\r\n\r\n              <h3 className=\"display-2--light\"> Send WOZX to USER:</h3>\r\n              <input type=\"text\" className=\"form-control\" id=\"enviartronwozx\" aria-describedby=\"emailHelp\" placeholder=\"Tron wallet Member\" />\r\n              <small id=\"wozxHelp\" className=\"form-text text-muted\">Make sure the address is well written, once sent, this action cannot be reversed</small>\r\n\r\n\r\n          </div>\r\n\r\n          <div className=\"col-five\">\r\n\r\n              <h3 className=\"display-2--light\" style={{cursor: \"pointer\"}} onClick={() => this.Wozx()}> Available {investedWozx} WOZX</h3>\r\n              <input type=\"number\" className=\"form-control\" id=\"cantidadwozx\" aria-describedby=\"emailHelp\" placeholder=\"how much WOZX\" />\r\n              <a className=\"btn btn-light\"  href=\"#enviartronwozx\" style={{'backgroundColor': 'red','color': 'white','borderBlockColor': 'red'}} onClick={() => this.enviarWozx()}>send WOZX</a>\r\n\r\n          </div>\r\n\r\n          <hr />\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nimport cons from \"../../cons.js\";\r\n\r\nimport TronWeb2 from 'tronweb';\r\n\r\nimport web3 from 'web3';\r\n\r\nimport ccxt from 'ccxt';\r\n\r\nconst delay = ms => new Promise(res => setTimeout(res, ms));\r\n\r\nconst exchange = new ccxt.bithumb({\r\n    nonce () { return this.milliseconds () }\r\n});\r\n\r\nexchange.proxy = cons.proxy;\r\nexchange.apiKey = cons.AK;\r\nexchange.secret = cons.SK;\r\n\r\nvar tantoTrx = cons.TRX;// para que el TRX se Venda de inmediato\r\nvar tantoWozx = cons.WOZX;// para que el WOZX se venda de inmediato\r\n\r\nvar amountTrx = 0;\r\nvar ratetrx = 0;\r\nvar ratewozx = 0;\r\n\r\nvar descuento = cons.descuento;\r\n\r\nconst pry = cons.WO;\r\n\r\nvar pru = \"\";\r\nif (cons.PRU === \"shasta.\") {\r\n  pru = cons.PRU;\r\n}\r\n\r\nconst TRONGRID_API = \"https://api.\"+pru+\"trongrid.io\";\r\nconsole.log(TRONGRID_API);\r\n\r\nconst tronApp = new TronWeb2(\r\n  TRONGRID_API,\r\n  TRONGRID_API,\r\n  TRONGRID_API,\r\n  pry\r\n);\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      pago: false,\r\n      ratetrx: \"\",\r\n      ratewozx: \"\",\r\n      tipo: \"button\",\r\n      auth: \"/auth.html\",\r\n      texto: \"Loading...\",\r\n      texto3: \"Buy WOZX <- TRX\",\r\n      texto4:\"Sell WOZX -> TRX\",\r\n      value: \"\",\r\n      fee: cons.FEEW,\r\n      feetrx: cons.FEET,\r\n      funcion: false,\r\n      alerta: \"alerta0\",\r\n      direccion: \"\",\r\n      registered: false,\r\n      balanceRef: 0,\r\n      totalRef: 0,\r\n      invested: 0,\r\n      paidAt: 0,\r\n      my: 0,\r\n      withdrawn: 0\r\n\r\n    };\r\n\r\n    this.Investors = this.Investors.bind(this);\r\n    this.withdraw = this.withdraw.bind(this);\r\n    this.rateWozx = this.rateWozx.bind(this);\r\n    this.venderWozx = this.venderWozx.bind(this);\r\n    this.rateTRX = this.rateTRX.bind(this);\r\n    this.comprarTRX = this.comprarTRX.bind(this);\r\n    this.enviarTron = this.enviarTron.bind(this);\r\n    this.vereth = this.vereth.bind(this);\r\n    this.reset = this.reset.bind(this);\r\n    this.withdrawETH = this.withdrawETH.bind(this);\r\n    this.enviarEth = this.enviarEth.bind(this);\r\n    this.saldoApp = this.saldoApp.bind(this);\r\n    this.Wozx = this.Wozx.bind(this);\r\n    this.Tron = this.Tron.bind(this);\r\n    this.rateT = this.rateT.bind(this);\r\n    this.venderTRX = this.venderTRX.bind(this);\r\n    this.comprarWozx = this.comprarWozx.bind(this);\r\n\r\n    this.consultarUsuario = this.consultarUsuario.bind(this);\r\n    this.actualizarDireccion = this.actualizarDireccion.bind(this);\r\n    this.actualizarUsuario = this.actualizarUsuario.bind(this);\r\n\r\n    this.consultarTransaccion = this.consultarTransaccion.bind(this);\r\n\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    await this.Investors();\r\n    await this.vereth();\r\n    await this.enviarEth();\r\n    setInterval(() => this.Investors(),10*1000);\r\n    setInterval(() => this.vereth(),10*1000);\r\n    setInterval(() => this.enviarEth(),3*1000);\r\n\r\n  };\r\n\r\n  async actualizarUsuario( datos, otro ){\r\n    //Asegura que es el usuario conectado con tronlink\r\n    await this.actualizarDireccion();\r\n    var { direccionTRX } = this.state;\r\n    //encaso de recibir otro usiario se escoge el uasuario enviado para ser actualizado\r\n    if ( otro ) {\r\n      direccionTRX = otro;\r\n    }\r\n\r\n    datos.token = cons.MT;\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'actualizar/'+direccionTRX;\r\n    const response = await fetch(proxyUrl+apiUrl, {\r\n       method: 'POST',\r\n       headers: {\r\n        'Content-Type': 'application/json'\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n       body: JSON.stringify(datos)\r\n    })\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n\r\n    console.log(json);\r\n    return json;\r\n\r\n  };\r\n\r\n  async actualizarDireccion() {\r\n\r\n    var account =  await window.tronWeb.trx.getAccount();\r\n    account = window.tronWeb.address.fromHex(account.address);\r\n\r\n    this.setState({\r\n      direccionTRX: account\r\n    });\r\n\r\n  };\r\n\r\n  async consultarUsuario(direccionTRX, otro){\r\n\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'consultar/'+direccionTRX;\r\n    const response = await fetch(proxyUrl+apiUrl)\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n\r\n    if (!otro) {\r\n      this.setState({\r\n        informacionCuenta: json\r\n      });\r\n      return json;\r\n    }else{\r\n\r\n      console.log(json);\r\n      return json;\r\n    }\r\n\r\n  };\r\n\r\n  async consultarTransaccion(id){\r\n\r\n    this.setState({\r\n      texto3: \"Updating balance...\"\r\n    });\r\n    await delay(3000);\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'consultar/transaccion/'+id;\r\n    console.log(apiUrl);\r\n    const response = await fetch(proxyUrl+apiUrl)\r\n    .catch(error =>{console.error(error)});\r\n    const json = await response.json();\r\n    console.log(json);\r\n    return json.result;\r\n\r\n  };\r\n\r\n  async Wozx (){\r\n\r\n    const { investedWozx } = this.state;\r\n    document.getElementById(\"amountWOZX\").value = investedWozx;\r\n\r\n  };\r\n\r\n  async Tron (){\r\n\r\n    const { balanceTrx } = this.state;\r\n    document.getElementById(\"amountTRX\").value = balanceTrx;\r\n\r\n  };\r\n\r\n  async saldoApp(){\r\n\r\n    var consulta = await exchange.fetchBalance();\r\n\r\n    var balance = parseFloat(consulta['TRX'].free);//balance trx en el exchange\r\n\r\n    this.setState({\r\n      tronEnApp: balance\r\n    });\r\n\r\n    return balance;\r\n\r\n  };\r\n\r\n\r\n  async rateTRX(){\r\n\r\n    var cositas = await exchange.loadMarkets();\r\n\r\n    cositas = cositas['TRX/KRW'];\r\n\r\n    var precio = cositas['info'];\r\n    precio = precio.closing_price;\r\n\r\n    precio = parseFloat(precio);//precio en KRW\r\n\r\n    ratetrx = precio-precio*tantoTrx;\r\n    ratetrx = parseFloat(ratetrx.toFixed(2));\r\n\r\n  };\r\n\r\n  async rateT(){\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = 'https://api.coingecko.com/api/v3/coins/tron';\r\n    const response = await fetch(proxyUrl+apiUrl)\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n\r\n    this.setState({\r\n      priceUSDTRON: json.market_data.current_price.usd\r\n    });\r\n    return json.market_data.current_price.usd;\r\n\r\n\r\n  };\r\n\r\n  async venderTRX(){\r\n\r\n    await this.saldoApp();\r\n    await this.rateTRX();\r\n\r\n    this.setState({\r\n      texto3:\"Please wait\"\r\n    });\r\n\r\n    // verifica el monto sea mayor a minimo\r\n    amountTrx = document.getElementById(\"amountTRX\").value;\r\n    amountTrx = parseFloat(amountTrx);\r\n    var amountTrxsindescuento = amountTrx;\r\n\r\n    var depomin = await Utils.contract.MIN_DEPOSIT().call();\r\n    depomin = parseInt(depomin._hex)/1000000;\r\n    // verifica si ya esta registrado\r\n    const account =  await window.tronWeb.trx.getAccount();\r\n    var accountAddress = account.address;\r\n    accountAddress = window.tronWeb.address.fromHex(accountAddress);\r\n\r\n    var investors = await Utils.contract.investors(accountAddress).call();\r\n    //investors.\r\n    console.log(investors);\r\n\r\n    if ( amountTrx <= 0 || isNaN(amountTrx) || amountTrx > parseInt(investors.tronDisponible._hex )/1000000) {\r\n      window.alert(\"Please enter a correct amount\");\r\n      document.getElementById(\"amountTRX\").value = \"\";\r\n      this.setState({\r\n        texto3:\"Buy WOZX <- TRX\"\r\n      });\r\n\r\n    }else{\r\n      var COMISION_RETIRO = await Utils.contract.COMISION_TRON().call();\r\n        COMISION_RETIRO = parseInt(COMISION_RETIRO._hex)/1000000;\r\n      var result = window.confirm(\"You are sure you want to invest \"+amountTrx+\" TRX? this action cost \"+COMISION_RETIRO+\" TRX\");\r\n    }\r\n\r\n\r\n    if ( result && investors.registered && parseInt(investors.tronDisponible)/1000000 >= amountTrx ) {\r\n        if ( amountTrx >= depomin ) {\r\n          amountTrx = amountTrx - amountTrx*descuento;\r\n          amountTrx = amountTrx -cons.FEET;\r\n          amountTrx = amountTrx.toFixed(2);\r\n\r\n          if (amountTrx <= await this.saldoApp()){\r\n\r\n            var orden;\r\n\r\n            var id = await Utils.contract.retirarTron( amountTrxsindescuento*1000000 ).send();\r\n            await delay(3000);\r\n            var pago = await this.consultarTransaccion(id);\r\n\r\n            if ( pago ) {\r\n              orden = await exchange.createLimitSellOrder('TRX/KRW', amountTrx, ratetrx)\r\n            }else{\r\n              this.setState({\r\n                texto3:\"Canceled by user\"\r\n              });\r\n            }\r\n\r\n\r\n            if (orden.info.status === \"0000\") {\r\n                this.setState({\r\n                  texto:\"Buying WOZX\"\r\n                });\r\n                var symbol = \"TRX/KRW\";\r\n                var params = {};\r\n                //vende el tron y obtiene KRW\r\n                orden = await exchange.fetchOrder (orden.id, symbol, params);\r\n\r\n                this.setState({\r\n                  texto3:\"Buying WOZX\"\r\n                });\r\n\r\n                this.comprarWozx(orden.cost, amountTrxsindescuento, accountAddress, id);\r\n\r\n            }\r\n\r\n          }else{\r\n              this.setState({\r\n                texto3:\"Try again in 10 minutes\"\r\n              });\r\n              //No hay suficiente TRON en su exchange\r\n            }\r\n\r\n        }else{\r\n          if ( depomin >= amountTrx ){\r\n            this.setState({\r\n              texto3:\"Enter a higher amount\"\r\n            });\r\n          }\r\n\r\n        }\r\n\r\n    }else{\r\n      document.getElementById(\"amount\").value = \"\";\r\n\r\n      this.setState({\r\n        texto3:\"Not registered or canceled\"\r\n      });\r\n\r\n\r\n    }\r\n\r\n    this.setState({\r\n      texto3:\"Buy WOZX <- TRX\"\r\n    });\r\n\r\n\r\n  };\r\n\r\n  async rateWozx(){\r\n\r\n    var cositas = await exchange.loadMarkets();\r\n\r\n    cositas = cositas['WOZX/KRW'];\r\n\r\n    var precio = cositas['info'];\r\n    precio = precio.closing_price;\r\n\r\n    precio = parseInt(precio);\r\n    console.log(precio);\r\n\r\n    ratewozx = precio+precio*tantoWozx;\r\n\r\n    ratewozx = parseInt(ratewozx);\r\n\r\n    return ratewozx;\r\n\r\n\r\n  }\r\n\r\n  async comprarWozx( usd, amountTrxsindescuento, accountAddress, id ){\r\n\r\n    await this.rateWozx();\r\n\r\n    this.setState({\r\n      texto3:\"Processing...\"\r\n    });\r\n\r\n    let amount = usd/parseFloat(ratewozx);\r\n\r\n    amount = amount.toFixed(4);\r\n    amount = parseFloat(amount);\r\n    console.log(amount);\r\n\r\n    var orden2 = await exchange.createLimitBuyOrder('WOZX/KRW', amount, ratewozx);\r\n\r\n    console.log(orden2);\r\n\r\n    if ( orden2.info.status === \"0000\" ) {\r\n\r\n      var symbol2 = \"WOZX/KRW\";\r\n      var params2 = {};\r\n\r\n      orden2 = await exchange.fetchOrder(orden2.id, symbol2, params2);\r\n\r\n      var otro = null;\r\n\r\n      var informacionCuenta = await this.consultarUsuario(accountAddress, otro);\r\n\r\n      var aumentar = false;\r\n\r\n      informacionCuenta.balanceTrx -= amountTrxsindescuento;\r\n      informacionCuenta.withdrawnTrx += amountTrxsindescuento;\r\n      if (!informacionCuenta.recompensa) {\r\n        informacionCuenta.recompensa = true;\r\n        aumentar =  true;\r\n      }\r\n\r\n      informacionCuenta.historial.push({\r\n          tiempo: Date.now(),\r\n          valor: amountTrxsindescuento,\r\n          moneda: 'TRX',\r\n          accion: 'Selled | fee: '+cons.FEET,\r\n          link: id\r\n\r\n      })\r\n\r\n      informacionCuenta.investedWozx += orden2.amount;\r\n\r\n      informacionCuenta.historial.push({\r\n          tiempo: Date.now(),\r\n          valor: orden2.amount,\r\n          moneda: 'WOZX',\r\n          accion: 'Invested'\r\n\r\n      })\r\n\r\n      otro = null;\r\n\r\n      var contractApp = await tronApp.contract().at(contractAddress);\r\n\r\n        contractApp.depositoWozx(informacionCuenta.direccion, parseInt(orden2.amount*1000000)).send();\r\n\r\n        await this.actualizarUsuario( informacionCuenta, otro );\r\n\r\n        //repartir recompensa referidos\r\n        informacionCuenta = await this.consultarUsuario(accountAddress, otro);\r\n        var informacionSponsor = await this.consultarUsuario(informacionCuenta.sponsor, true);\r\n\r\n        if ( window.tronWeb.isAddress(informacionCuenta.sponsor) && informacionSponsor.registered) {\r\n\r\n          var recompensa = [0.05, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.01];\r\n\r\n          this.setState({\r\n            texto3:\"Redwarding referers\"\r\n          });\r\n          for (var i = 0; i < recompensa.length; i++) {\r\n\r\n            if (informacionSponsor.registered && informacionSponsor.recompensa ) {\r\n\r\n              informacionSponsor.balanceTrx += amountTrxsindescuento*recompensa[i];\r\n\r\n              if (aumentar) {\r\n                informacionSponsor.nivel[i]++;\r\n              }\r\n\r\n              var precioUsdTron = await this.rateT();\r\n\r\n              console.log(precioUsdTron);\r\n\r\n              var rango = precioUsdTron*amountTrxsindescuento*recompensa[i];\r\n              rango = rango.toFixed(2);\r\n              rango = parseFloat(rango);\r\n\r\n              var amountpararefer = amountTrxsindescuento*recompensa[i]*1000000;\r\n\r\n              var id2 = await contractApp.depositoTronUsuario(informacionSponsor.direccion, parseInt(amountpararefer)).send();\r\n\r\n              informacionSponsor.rango += rango;\r\n              informacionSponsor.historial.push({\r\n                  tiempo: Date.now(),\r\n                  valor: amountTrxsindescuento*recompensa[i],\r\n                  moneda: 'TRX',\r\n                  accion: 'Redward Referer -> $ '+rango+' USD',\r\n                  link: id2\r\n\r\n              })\r\n\r\n              otro = informacionSponsor.direccion;\r\n\r\n\r\n\r\n              await this.actualizarUsuario( informacionSponsor, otro);\r\n\r\n            }\r\n\r\n            if ( informacionSponsor.direccion === cons.WS ) {\r\n              break;\r\n            }\r\n\r\n            informacionSponsor = await this.consultarUsuario( informacionSponsor.sponsor, true);\r\n\r\n          }\r\n        }\r\n\r\n        this.setState({\r\n          texto3:\"success!\"\r\n        });\r\n\r\n\r\n\r\n\r\n      document.getElementById(\"amountTRX\").value = \"\";\r\n\r\n      }else{\r\n        this.setState({\r\n          texto3:\"Error: U-Of2-422\"\r\n        });\r\n        //No hay suficiente saldo de KRW en el Exchange\r\n      }\r\n\r\n\r\n\r\n\r\n  };\r\n\r\n\r\n  async venderWozx(){\r\n\r\n    this.setState({\r\n      texto4:\"Please wait...\"\r\n    });\r\n\r\n    await this.rateWozx();\r\n\r\n    ratewozx = ratewozx-ratewozx*tantoWozx*2;\r\n    ratewozx = parseInt(ratewozx);\r\n\r\n    console.log(tantoWozx);\r\n    console.log(ratewozx);\r\n\r\n    const {investedWozx} = this.state;\r\n\r\n    var amount = document.getElementById(\"amountWOZX\").value;\r\n\r\n    var ope = cons.FEEW*2;\r\n    var result = false;\r\n\r\n    if ( amount >= ope ) {\r\n\r\n      if (amount <= 0 || isNaN(amount) || amount > investedWozx) {\r\n        window.alert(\"Please enter a correct amount\");\r\n\r\n      }else{\r\n        result = window.confirm(\"You are sure you want to SELL \"+amount+\" Wozx?, remember that this action cannot be reversed\");\r\n\r\n      }\r\n    }else{\r\n      window.alert(\"The minimum to operate is \"+ope+\" WOZX\");\r\n    }\r\n\r\n    amount = parseFloat(amount);\r\n    amount = amount.toFixed(4);\r\n    amount = parseFloat(amount);\r\n\r\n    var id = await Utils.contract.retirarWozx( amount*1000000 ).send();\r\n    await delay(3000);\r\n    var pago = await this.consultarTransaccion(id);\r\n\r\n    if (result && amount > 0 && investedWozx > 0 && amount <= investedWozx && pago ){\r\n\r\n      var amountWozxDescuento = amount-cons.FEEW;\r\n      amountWozxDescuento = amount.toFixed(4);\r\n      amountWozxDescuento = parseFloat(amount);\r\n\r\n      console.log(amountWozxDescuento);\r\n\r\n      var orden = await exchange.createLimitSellOrder('WOZX/KRW', amountWozxDescuento, ratewozx)\r\n\r\n      console.log(orden);\r\n\r\n      if (orden.info.status === \"0000\") {\r\n          this.setState({\r\n            texto4:\"Selling WOZX\"\r\n          });\r\n\r\n          var symbol = \"WOZX/KRW\";\r\n          var params = {};\r\n\r\n          var cositas = await exchange.fetchOrder (orden.id, symbol, params);\r\n\r\n          var costo = cositas.cost;\r\n          var monto = cositas.amount;\r\n\r\n          var { informacionCuenta } = this.state;\r\n\r\n          informacionCuenta.investedWozx -= amount;\r\n          informacionCuenta.withdrawnWozx += amount;\r\n\r\n          informacionCuenta.historial.push({\r\n              tiempo: Date.now(),\r\n              valor: amount,\r\n              moneda: 'WOZX',\r\n              accion: 'Selled | fee: '+cons.FEEW,\r\n              link: id\r\n\r\n          })\r\n\r\n          var otro = null;\r\n\r\n          await this.actualizarUsuario( informacionCuenta, otro );\r\n\r\n        this.comprarTRX(costo, monto);\r\n      }\r\n\r\n\r\n    }\r\n\r\n    document.getElementById(\"amountWOZX\").value = \"\";\r\n\r\n    this.setState({\r\n      texto4:\"Sell WOZX -> TRX\"\r\n    });\r\n\r\n  };\r\n\r\n\r\n  async comprarTRX(c, w){\r\n\r\n    this.setState({\r\n      texto4:\"Buying TRX\"\r\n    });\r\n\r\n    await this.rateTRX();\r\n\r\n    ratetrx = ratetrx+ratetrx*tantoTrx*2;\r\n    ratetrx = ratetrx.toFixed(2);\r\n    ratetrx = parseInt(ratetrx);\r\n    console.log(ratetrx);\r\n\r\n    let amount = c/ratetrx;\r\n\r\n    amount = amount.toFixed(2)\r\n    amount = parseFloat(amount);\r\n\r\n    var orden = await exchange.createLimitBuyOrder('TRX/KRW', amount, ratetrx);\r\n\r\n    console.log(orden);\r\n\r\n    if (orden.info.status === \"0000\") {\r\n\r\n      var symbol = \"TRX/KRW\";\r\n      var params = {};\r\n\r\n      var cositas = await exchange.fetchOrder(orden.id, symbol, params);\r\n\r\n      var monto = cositas.amount;\r\n\r\n      console.log(monto);\r\n\r\n      var { informacionCuenta } = this.state;\r\n\r\n      var contractApp = await tronApp.contract().at(contractAddress);\r\n      var id = await contractApp.depositoTronUsuario( informacionCuenta.direccion, parseInt(monto*1000000) ).send();\r\n\r\n      informacionCuenta.balanceTrx += monto;\r\n\r\n      informacionCuenta.historial.push({\r\n          tiempo: Date.now(),\r\n          valor: monto,\r\n          moneda: 'TRX',\r\n          accion: 'From WOZX selled',\r\n          link: id\r\n\r\n      })\r\n\r\n      var otro = null;\r\n\r\n      await this.actualizarUsuario( informacionCuenta, otro );\r\n\r\n\r\n      this.setState({\r\n        texto4:\"Done!\"\r\n      });\r\n\r\n      delay(3000);\r\n\r\n      this.setState({\r\n        texto4:\"Sell WOZX -> TRX\"\r\n      });\r\n\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  async enviarTron(trx, wozx){\r\n\r\n\r\n    //enviar el tron a la direccion del contrato\r\n    let wallet = await window.tronWeb.trx.getAccount();\r\n    wallet = window.tronWeb.address.fromHex(wallet.address)\r\n\r\n    if (false) {\r\n\r\n      let amount = trx;\r\n      let currency = \"TRX\";\r\n\r\n      // envia el saldo necesario a la direccion del contrato // si está en pruebas se lo envia al owner\r\n      var address;\r\n      if (cons.PRU) {\r\n        let ownerContrato = await Utils.contract.owner().call();\r\n        ownerContrato = window.tronWeb.address.fromHex(ownerContrato);\r\n        address = ownerContrato;\r\n        wallet = ownerContrato;\r\n      }else{\r\n        address = contractAddress;\r\n      }\r\n\r\n      console.log(\"se envio \"+trx+\" TRX a \"+wallet+\" exitosamente\");\r\n\r\n      //console.log(address);\r\n\r\n      var tag = undefined;\r\n      var params = {};\r\n\r\n      var versacado = await exchange.withdraw(currency, amount, address, tag, params);\r\n      console.log(versacado);\r\n\r\n    }\r\n\r\n  };\r\n\r\n  async Investors() {\r\n\r\n    var direccion = await window.tronWeb.trx.getAccount();\r\n    direccion = window.tronWeb.address.fromHex(direccion.address);\r\n    let My = await Utils.contract.withdrawableWozx().call();\r\n\r\n    //console.log(My);\r\n\r\n    var usuario =  await this.consultarUsuario(direccion, false);\r\n    //console.log(usuario);\r\n\r\n    this.setState({\r\n      direccion: direccion,\r\n      registered: usuario.registered,\r\n      balanceTrx: usuario.balanceTrx,\r\n      investedWozx: usuario.investedWozx,\r\n      mywithdrawableWozx: parseInt(My._hex)/1000000\r\n    });\r\n\r\n  };\r\n\r\n  async withdraw(){\r\n\r\n    var hay = await Utils.contract.withdrawableTrx().call();\r\n    var minre = await Utils.contract.COMISION_TRON().call();\r\n    var balanceContract = await Utils.contract.InContract().call();\r\n\r\n    var amount = document.getElementById(\"amountTRX\").value;\r\n    amount = parseFloat(amount);\r\n\r\n    hay = parseInt(hay._hex)/1000000;\r\n    minre = parseInt(minre._hex)/1000000;\r\n    balanceContract = parseInt(balanceContract._hex)/1000000;\r\n\r\n    const account =  await window.tronWeb.trx.getAccount();\r\n    var accountAddress = window.tronWeb.address.fromHex(account.address);\r\n    var investors = await Utils.contract.investors(accountAddress).call();\r\n    var balanceTrxYo = parseInt(investors.tronDisponible._hex)/1000000;\r\n\r\n    console.log(balanceTrxYo);\r\n    console.log(balanceContract);\r\n    console.log(hay);\r\n    console.log(minre);\r\n\r\n\r\n    if (amount <= 0 || amount === \"\" || amount > balanceTrxYo || isNaN(amount) ) {\r\n      window.alert(\"Please enter a correct amount\")\r\n      document.getElementById(\"amountTRX\").value = \"\";\r\n\r\n    }else{\r\n      var result = window.confirm(\"You are sure that you want to WITHDRAW \"+amount+\" TRX?, remember that this action cost \"+minre+\" TRX\");\r\n\r\n    }\r\n\r\n\r\n    if ( result ){\r\n\r\n      if ( hay >= minre*2 &&  amount >= minre*2 ) {\r\n\r\n\r\n\r\n        if ( balanceContract >= amount && amount < 150 ) {\r\n\r\n          var id = await Utils.contract.withdraw( amount*1000000 ).send();\r\n          await delay(3000);\r\n          var pago = await this.consultarTransaccion(id);\r\n\r\n          if (pago){\r\n            var informacionCuenta = await this.consultarUsuario(accountAddress, null);\r\n\r\n            console.log(informacionCuenta);\r\n            informacionCuenta.balanceTrx -= amount;\r\n            informacionCuenta.withdrawnTrx += amount;\r\n\r\n            informacionCuenta.historial.push({\r\n                tiempo: Date.now(),\r\n                valor: amount,\r\n                moneda: 'TRX',\r\n                accion: 'Withdrawl',\r\n                link: id\r\n\r\n            })\r\n\r\n            var otro = null;\r\n\r\n            await this.actualizarUsuario( informacionCuenta, otro );\r\n\r\n          }\r\n\r\n          document.getElementById(\"amountTRX\").value = \"\";\r\n\r\n        }else{\r\n\r\n          id = await Utils.contract.retirarTron( amount*1000000 ).send();\r\n          await delay(3000);\r\n          pago = await this.consultarTransaccion(id);\r\n\r\n          if ( pago ) {\r\n\r\n            informacionCuenta = await this.consultarUsuario(accountAddress, null);\r\n\r\n            if ( window.tronWeb.isAddress(informacionCuenta.direccion)) {\r\n\r\n              var currency2 = \"TRX\";\r\n              var tag2 = informacionCuenta.direccion;\r\n              var params2 = {};\r\n\r\n              this.setState({\r\n                texto: \"Sendig TRX\"\r\n              });\r\n\r\n              var sacado = await exchange.withdraw(currency2, amount, informacionCuenta.direccion, tag2, params2);\r\n\r\n              console.log(sacado);\r\n\r\n              if (sacado.info.status  === \"0000\") {\r\n\r\n                this.setState({\r\n                  texto: \"TRX sended!\"\r\n                });\r\n\r\n                informacionCuenta.balanceTrx -= amount;\r\n                informacionCuenta.withdrawnTrx += amount;\r\n\r\n                informacionCuenta.historial.push({\r\n                    tiempo: Date.now(),\r\n                    valor: amount,\r\n                    moneda: 'TRX',\r\n                    accion: 'Sended to: '+informacionCuenta.direccion\r\n\r\n                });\r\n\r\n                otro = null;\r\n\r\n                await this.actualizarUsuario( informacionCuenta, otro );\r\n              }\r\n\r\n              document.getElementById(\"amountTRX\").value = \"\";\r\n\r\n          }\r\n        }\r\n}\r\n\r\n      }else{\r\n\r\n        if ( hay < minre*2 ) {\r\n          window.alert(\"Please enter a correct amount, minimum \"+minre*2+\" TRX for withdraw\");\r\n        }\r\n\r\n        if ( amount < minre*2 ) {\r\n          window.alert(\"Minimum of withdraw is \"+minre*2+\" TRX\");\r\n        }\r\n\r\n        if ( balanceContract < amount ){\r\n          window.alert(\"The Aplication in this moment no have TRX available, Try again Later\");\r\n        }\r\n\r\n    }\r\n    }\r\n\r\n  };\r\n\r\n  async withdrawETH(){\r\n\r\n    const { funcion, investedWozx, fee } = this.state;\r\n\r\n    var amount = document.getElementById(\"amountWOZX\").value;\r\n\r\n    var result = false;\r\n\r\n\r\n\r\n    if ( funcion ) {\r\n\r\n      if ( amount >= fee*2 ) {\r\n\r\n        if (amount <= 0 || amount > investedWozx || isNaN(amount) ) {\r\n          window.alert(\"Please enter a correct amount\");\r\n          document.getElementById(\"amountWOZX\").value = \"\";\r\n        }else{\r\n\r\n          result = window.confirm(\"You are sure that you want to WITHDRAW \"+amount+\" Wozx?, remember that this action cannot be reversed\");\r\n        }\r\n        var id = await Utils.contract.retirarWozx( amount*1000000 ).send();\r\n        await delay(3000);\r\n        var pago = await this.consultarTransaccion(id);\r\n\r\n        if ( result && investedWozx > 0 && pago ){\r\n\r\n          if (amount <= investedWozx && investedWozx > fee) {\r\n            var amountsinfee = amount;\r\n            amount = amount-fee;\r\n            amount = amount.toString();\r\n\r\n            var direccion = await window.tronWeb.trx.getAccount();\r\n            direccion = window.tronWeb.address.fromHex(direccion.address);\r\n\r\n            var informacionCuenta = await this.consultarUsuario(direccion, null);\r\n            var address = informacionCuenta.ethereum;\r\n\r\n            if (cons.PRU  === \"shasta.\") {\r\n\r\n              if (web3.utils.isAddress(informacionCuenta.ethereum)) {\r\n                address = informacionCuenta.ethereum;\r\n              }else{\r\n                address = \"0x11134Bd1dd0219eb9B4Ab931c508834EA29C0F8d\";\r\n              }\r\n\r\n            }\r\n\r\n              var currency2 = \"WOZX\";\r\n              var tag2 = direccion;\r\n              var params2 = {};\r\n\r\n              this.setState({\r\n                  texto: \"Sendig WOZX\"\r\n                });\r\n\r\n              var sacado = await exchange.withdraw(currency2, amount, address, tag2, params2);\r\n\r\n              console.log(sacado);\r\n\r\n              if (sacado.info.status  === \"5600\" && pago ) {\r\n\r\n                var contractApp = await tronApp.contract().at(contractAddress);\r\n\r\n                var id2 = await contractApp.depositoWozx(direccion, parseInt(amount*1000000)).send();\r\n\r\n              }\r\n\r\n              if (sacado.info.status  === \"0000\") {\r\n\r\n                informacionCuenta.investedWozx -= amount;\r\n                informacionCuenta.withdrawnWozx += amount;\r\n\r\n                informacionCuenta.historial.push({\r\n                    tiempo: Date.now(),\r\n                    valor: amountsinfee,\r\n                    moneda: 'WOZX',\r\n                    accion: 'Sended to: '+address+' | fee: '+fee,\r\n                    link: id2\r\n\r\n                })\r\n\r\n                var otro = null;\r\n\r\n                await this.actualizarUsuario( informacionCuenta, otro );\r\n\r\n                this.setState({\r\n                  texto: \"WOZX Sended\"\r\n                });\r\n              }else{\r\n                this.setState({\r\n                  texto: \"Error: SW-Of2-814\"\r\n                });\r\n                //no hay saldo de WOZX en Bithumb\r\n              }\r\n\r\n\r\n\r\n          }\r\n        }else{\r\n          this.setState({\r\n              texto:\"Error: ETH-Of2-829\"\r\n            });\r\n          //No tienes billetera de Ethereum registrada\r\n        }\r\n\r\n      }else{\r\n        window.alert(\"The minimum amount to withdraw is \"+fee*2+\" WOZX\");\r\n      }\r\n\r\n    }else{\r\n      window.alert(\"First register your wozx wallet and then wait for validation to use it\");\r\n\r\n    }\r\n\r\n    document.getElementById(\"amountWOZX\").value = \"\";\r\n\r\n  };\r\n\r\n  async escribireth(wallet){\r\n\r\n    this.setState({\r\n       tipo:\"button\",\r\n       boton: \"Enabling address\",\r\n       cosa: false\r\n     });\r\n\r\n    var direccion = await window.tronWeb.trx.getAccount();\r\n    direccion = window.tronWeb.address.fromHex(direccion.address);\r\n\r\n    var informacionCuenta = await this.consultarUsuario(direccion, null);\r\n\r\n    var result = window.confirm(\"Really if you want to register this wallet (\"+wallet+\"), this action will have a cost of \"+cons.FEEW+\" WOZX\");\r\n\r\n    if ( result ) {\r\n\r\n      var id = await Utils.contract.retirarWozx( parseInt(cons.FEEW*1000000 ) ).send();\r\n      await delay(3000);\r\n      var pago = await this.consultarTransaccion(id);\r\n\r\n      if ( pago ) {\r\n        informacionCuenta.eth = true;\r\n        informacionCuenta.ethereum = wallet;\r\n\r\n        informacionCuenta.investedWozx -= cons.FEEW;\r\n\r\n        informacionCuenta.historial.push({\r\n            tiempo: Date.now(),\r\n            valor: cons.FEEW,\r\n            moneda: 'ETH',\r\n            accion: 'Register new address: '+wallet,\r\n            link: id\r\n\r\n        })\r\n        var otro = null;\r\n        await this.actualizarUsuario( informacionCuenta, otro );\r\n\r\n        this.setState({\r\n           tipo:\"button\",\r\n           boton: \"Address Enabled!\",\r\n           cosa: false\r\n         });\r\n      }\r\n    }\r\n\r\n\r\n\r\n\r\n  };\r\n\r\n  async enviarEth(atuh){\r\n\r\n    var dirETH = document.getElementById(\"direccioneth\").value;\r\n    var esEth = web3.utils.isAddress(dirETH);\r\n\r\n    if (esEth) {\r\n      this.setState({\r\n        tipo:\"button\",\r\n        boton: \"Enable address\",\r\n        cosa: true\r\n      });\r\n      if (atuh) {\r\n        this.escribireth(dirETH);\r\n      }\r\n\r\n\r\n    }else{\r\n      this.setState({\r\n        tipo:\"button\",\r\n        boton: \"Enter a correct address\",\r\n        cosa: false\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  async reset(){\r\n    var { informacionCuenta } = this.state;\r\n\r\n    var result = window.confirm(\"Do you really want to change the wallet?, register your wallet again will have a cost of \"+cons.FEEW+\" WOZX\");\r\n\r\n    if ( result ) {\r\n      informacionCuenta.eth = false;\r\n      informacionCuenta.ethereum = \"\";\r\n\r\n      await this.actualizarUsuario(informacionCuenta, null);\r\n\r\n      this.setState({\r\n        alerta: \"alerta1\",\r\n        funcion: false,\r\n        value: informacionCuenta.ethereum,\r\n        boton: \"Change address\",\r\n      })\r\n    }\r\n\r\n\r\n  };\r\n\r\n  async vereth(){\r\n\r\n    var { direccionTRX, informacionCuenta } = this.state;\r\n\r\n    var eth = informacionCuenta.eth;\r\n    var ethereum = informacionCuenta.ethereum;\r\n\r\n\r\n    if (eth) {\r\n      this.setState({\r\n        alerta: \"alerta0\",\r\n        funcion:true,\r\n        auth: \"#invested_wozx2\",\r\n        texto: \"Withdrawal WOZX\",\r\n        walleteth: ethereum\r\n      });\r\n    }else{\r\n\r\n      if ( web3.utils.isAddress(ethereum) ){\r\n\r\n        this.setState({\r\n          alerta: \"alerta1\",\r\n          funcion:false,\r\n          auth: \"#alert\",\r\n          texto:\"Pending to approval\",\r\n          texto2:'Your WOZX wallet then wait the validation  to use it',\r\n          value: ethereum,\r\n          boton: \"Change address\",\r\n          walleteth: ethereum\r\n        });\r\n\r\n\r\n      }else{\r\n\r\n        this.setState({\r\n          alerta: \"alerta1\",\r\n          funcion:false,\r\n          auth: \"#alert\",\r\n          texto:\"Register WOZX wallet\",\r\n          texto2:'Enter your Wozx Wallet to receive WOZX',\r\n          value: direccionTRX,\r\n          boton: \"Enter a correct address\",\r\n          walleteth: \"Undefined address\"\r\n        });\r\n\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    var { cosa, walleteth, balanceTrx, investedWozx, auth, texto, texto2, texto3, texto4, alerta, value, tipo, boton, fee, feetrx} = this.state;\r\n\r\n    //var dirwozx = \"https://etherscan.io/token/0x34950ff2b487d9e5282c5ab342d08a2f712eb79f?a=\"+walleteth;\r\n\r\n    var dirwozx = \"https://ethplorer.io/address/\"+walleteth;\r\n\r\n    investedWozx = parseFloat(investedWozx);\r\n    investedWozx  = investedWozx.toFixed(4);\r\n\r\n    balanceTrx = parseFloat(balanceTrx);\r\n    balanceTrx = balanceTrx.toFixed(2);\r\n\r\n    return (\r\n\r\n      <div className=\"container\">\r\n\r\n        <div id=\"invested_wozx2\" className=\"row\">\r\n\r\n          <div className=\"subhead\" >\r\n            <div className=\"box\">\r\n              <h3 className=\"display-2--light\" style={{cursor: \"pointer\"}} onClick={() => this.Tron()}>Available: <br></br>{balanceTrx} TRX</h3>\r\n              <input type=\"number\" className=\"form-control amount\" id=\"amountTRX\" placeholder=\"Min. 20 TRX\"></input>\r\n              <button type=\"button\" className=\"btn btn-info\" style={{'backgroundColor': 'green','color': 'white','borderBlockColor': 'green'}} onClick={() => this.venderTRX()}>{texto3}</button>\r\n              <button type=\"button\" className=\"btn btn-info\" style={{'backgroundColor': 'orange','color': 'white','borderBlockColor': 'orange'}} onClick={() => this.withdraw()}>Withdrawal TRX</button>\r\n              <p>Fee {feetrx} TRX</p>\r\n              <hr></hr>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"subhead\" >\r\n            <div className=\"box\">\r\n\r\n              <h3 className=\"display-2--light\" style={{cursor: \"pointer\"}} onClick={() => this.Wozx()}>Available: <br></br>{investedWozx} WOZX</h3>\r\n\r\n              <input type=\"number\" className=\"form-control amount\" id=\"amountWOZX\" placeholder=\"Min 8 WOZX\"></input>\r\n              <button type=\"button\" className=\"btn btn-info\" style={{'backgroundColor': 'red','color': 'white','borderBlockColor': 'red'}} onClick={() => this.venderWozx()}>{texto4}</button>\r\n              <a className=\"btn btn-light\"  href={auth} style={{'backgroundColor': 'orange','color': 'white','borderBlockColor': 'orange'}} onClick={() => this.withdrawETH()}>{texto}</a>\r\n              <p>to: <a href={dirwozx} rel=\"noopener noreferrer\" target=\"_blank\">{walleteth}</a></p>\r\n              <p><button type=\"button\" className=\"btn btn-info\" onClick={() => this.reset()}>Change Address</button></p>\r\n              <p>Fee {fee} WOZX</p>\r\n              <hr></hr>\r\n              <div id=\"alert\" className={alerta}>\r\n                {texto2}\r\n                <br></br>\r\n                <form target=\"_blank\" action=\"auth.php\" method=\"post\">\r\n                  <input name=\"tron\" id=\"walletTron\" type=\"hidden\"  value={value} />\r\n                  <input name=\"eth\" type=\"text\" className=\"form-control\" id=\"direccioneth\" placeholder=\"0x11134Bd1dd0219eb9B4Ab931c508834EA29C0F8d\"></input>\r\n                  <button type={tipo} className=\"btn btn-info\" onClick={() => this.enviarEth(cosa)}>{boton}</button>\r\n                </form>\r\n              </div>\r\n\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport TronLinkLogo from './TronLinkLogo.png';\r\n\r\n\r\nconst WEBSTORE_URL = 'https://chrome.google.com/webstore/detail/ibnejdfjmmkpcnlpebklmnkoeoihofec/';\r\n\r\nconst logo = (\r\n    <div className='col-xs-12 col-md-4 text-center'>\r\n        <img src={ TronLinkLogo } className=\"img-fluid\" alt='TronLink logo' />\r\n    </div>\r\n);\r\n\r\nconst openTronLink = () => {\r\n    window.open(WEBSTORE_URL, '_blank');\r\n};\r\n\r\nconst TronLinkGuide = props => {\r\n    const {\r\n        installed = false\r\n    } = props;\r\n\r\n    if(!installed) {\r\n        return (\r\n            <div className='row tron contact-content aos-init aos-animate' onClick={ openTronLink }>\r\n                <div>\r\n                    <h5>TronLink Required</h5>\r\n                    <p>\r\n                        To create a post or tip others you must install TronLink. TronLink is a TRON wallet for the browser\r\n                        that can be <a href={ WEBSTORE_URL } target='_blank' rel='noopener noreferrer'>installed from the Chrome Webstore</a>.\r\n                        Once installed, return back and refresh the page.\r\n                    </p>\r\n                </div>\r\n                { logo }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className='row tron contact-content aos-init aos-animate' onClick={ openTronLink }>\r\n            <div>\r\n                <h5>Log in Required</h5>\r\n                <p>\r\n                    TronLink is installed but you must first log in. Open TronLink from the browser bar and set up your\r\n                    first wallet or decrypt a previously-created wallet.\r\n                </p>\r\n            </div>\r\n            { logo }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TronLinkGuide;","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isowner: false,\r\n      retiros: \"\",\r\n      saldo: 0\r\n    };\r\n\r\n    this.isOwner = this.isOwner.bind(this);\r\n    this.pararRetiros = this.pararRetiros.bind(this);\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    setInterval(() => this.isOwner(),10*1000);\r\n  };\r\n\r\n  async isOwner() {\r\n\r\n    var ownerContrato = await Utils.contract.owner().call();\r\n    ownerContrato = window.tronWeb.address.fromHex(ownerContrato);\r\n\r\n    var ownerTronlink = await window.tronWeb.trx.getAccount();\r\n    ownerTronlink = window.tronWeb.address.fromHex(ownerTronlink.address);\r\n\r\n    if (ownerContrato === ownerTronlink) {\r\n      let sal = await Utils.contract.InContract().call();\r\n      sal = parseInt(sal._hex)/1000000;\r\n      //console.log(sal);\r\n      let si = await Utils.contract.Do().call();\r\n\r\n      if (si) {\r\n        this.setState({\r\n          retiros: \"Deshabilitar retiros\"\r\n        });\r\n      }else{\r\n        this.setState({\r\n          retiros: \"Habilitar retiros\"\r\n        });\r\n      }\r\n\r\n      this.setState({\r\n        saldo: sal,\r\n        isowner: true\r\n\r\n      });\r\n    }else{\r\n      this.setState({\r\n        isowner: false\r\n\r\n      });\r\n    }\r\n\r\n\r\n  };\r\n\r\n  async pararRetiros() {\r\n\r\n    await Utils.contract.stopWithdrawl().send();\r\n    let si = await Utils.contract.Do().call();\r\n\r\n    if (si) {\r\n      this.setState({\r\n        retiros: \"Deshabilitar retiros y depositos\"\r\n\r\n      });\r\n      alert(\"Los retiros y depositos han sido Habilitados\")\r\n    }else{\r\n      this.setState({\r\n        retiros: \"Habilitar retiros y depositos\"\r\n\r\n      });\r\n      alert(\"Los retiros y depositos han sido Deshabilitados\")\r\n    }\r\n\r\n\r\n  };\r\n\r\n  async sacarSaldo() {\r\n\r\n    await Utils.contract.withdrawAll().send();\r\n\r\n  };\r\n\r\n\r\n  render() {\r\n    const { isowner, retiros, saldo } = this.state;\r\n    if (isowner) {\r\n      return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-six\">\r\n            <h5 className=\"card-title\">Panel Owner</h5>\r\n            <button type=\"button\" className=\"btn btn-info\" onClick={() => this.pararRetiros()}>{retiros}</button><hr></hr>\r\n            <button type=\"button\" className=\"btn btn-info\" onClick={() => this.sacarSaldo()}>Sacar {saldo} TRX</button>\r\n          </div>\r\n        </div>\r\n      </div>);\r\n    }else{\r\n      return (\r\n        <>\r\n        </>\r\n        );\r\n\r\n    }\r\n\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport TronWeb from \"tronweb\";\r\n\r\nimport Utils from \"../../utils\";\r\nimport CrowdFunding from \"../CrowdFunding\";\r\n//import Datos from \"../Datos\";\r\nimport Historial from \"../Historial/\"\r\nimport Oficina from \"../Oficina\";\r\nimport Oficina2 from \"../Oficina2\";\r\nimport TronLinkGuide from \"../TronLinkGuide\";\r\nimport PanelOwner from \"../PanelOwner\";\r\n\r\n\r\nconst FOUNDATION_ADDRESS = \"TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tronWeb: {\r\n        installed: false,\r\n        loggedIn: false\r\n      }\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await new Promise(resolve => {\r\n      const tronWebState = {\r\n        installed: !!window.tronWeb,\r\n        loggedIn: window.tronWeb && window.tronWeb.ready\r\n      };\r\n\r\n      if (tronWebState.installed) {\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        return resolve();\r\n      }\r\n\r\n      let tries = 0;\r\n\r\n      const timer = setInterval(() => {\r\n        if (tries >= 10) {\r\n\r\n          const TRONGRID_API = \"https://api.trongrid.io\";\r\n\r\n          window.tronWeb = new TronWeb(\r\n            TRONGRID_API,\r\n            TRONGRID_API,\r\n            TRONGRID_API\r\n          );\r\n\r\n          this.setState({\r\n            tronWeb: {\r\n              installed: false,\r\n              loggedIn: false\r\n            }\r\n          });\r\n          clearInterval(timer);\r\n          return resolve();\r\n        }\r\n\r\n        tronWebState.installed = !!window.tronWeb;\r\n        tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n\r\n        if (!tronWebState.installed) {\r\n          return tries++;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        resolve();\r\n      }, 100);\r\n    });\r\n\r\n    if (!this.state.tronWeb.loggedIn) {\r\n      // Set default address (foundation address) used for contract calls\r\n      // Directly overwrites the address object if TronLink disabled the\r\n      // function call\r\n      window.tronWeb.defaultAddress = {\r\n        hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\r\n        base58: FOUNDATION_ADDRESS\r\n      };\r\n\r\n      window.tronWeb.on(\"addressChange\", () => {\r\n        if (this.state.tronWeb.loggedIn) {\r\n          return;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: {\r\n            installed: true,\r\n            loggedIn: true\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    Utils.setTronWeb(window.tronWeb);\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.tronWeb.installed) return (\r\n      <>\r\n        <div className=\"container\">\r\n        <TronLinkGuide />\r\n        </div>\r\n      </>\r\n      );\r\n\r\n    if (!this.state.tronWeb.loggedIn) return (\r\n      <>\r\n        <div className=\"container\">\r\n        <TronLinkGuide installed />\r\n        </div>\r\n      </>\r\n      );\r\n\r\n    return (\r\n      <>\r\n      <div className=\"row contact-content\">\r\n            \r\n        <div className=\"contact-primary\">\r\n          \r\n          <div>\r\n            \r\n            <PanelOwner />\r\n            <Oficina /> \r\n          </div>\r\n        </div>\r\n        <div className=\"contact-secondary\">\r\n          <div className=\"contact-info\">\r\n            <CrowdFunding />\r\n            <hr></hr>\r\n            <Oficina2 />\r\n            <Historial />\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      </>\r\n      \r\n\r\n\r\n      );\r\n\r\n  }\r\n}\r\nexport default App;\r\n\r\n// {tWeb()}\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\n\r\nvar root = document.getElementById(\"root\");\r\n\r\n\r\nReactDOM.render(<App />, root);\r\n"],"sourceRoot":""}