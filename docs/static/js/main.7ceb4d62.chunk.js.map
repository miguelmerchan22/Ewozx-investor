{"version":3,"sources":["components/CrowdFunding/index.js","utils/index.js","components/Contract/index.js","cons.js","components/Datos/index.js","components/Oficina/index.js","components/TronLinkInfo/index.js","components/TronLinkGuide/index.js","components/PanelOwner/index.js","components/App/index.js","index.js","components/TronLinkGuide/TronLinkLogo.png"],"names":["amountTrx","utils","tronWeb","contract","setTronWeb","this","setContract","contractAddress","at","ratetrx","ratewozx","cantidadusd","proxyUrl","KEY","cons","SECRET","WozxInvestor","Component","constructor","props","super","state","usdtrx","deposit","bind","firma","rateWozx","comprarWozx","rateTRX","venderTRX","componentDidMount","Utils","window","esTrx","cripto","symbol","header1","fetch","method","headers","then","res","json","data","find","rate","parseFloat","toFixed","toString","catch","error","console","log","document","getElementById","value","body","querystring","stringify","header","hasher","sha512","hmac","hash","finalize","SIGN","cantidadTrx","filledAmount","leftAmount","precioTrx","filledRate","result","esWozx","usd","amount","cantidadWozx","orden","sha3","orderNumber","firma3","loc","location","href","indexOf","getString","split","GET","get","i","l","length","tmp","unescape","decodeURI","sponsor","parseInt","trx","getAccount","account","accountAddress","address","firma2","wallet","send","shouldPollResponse","callValue","render","className","type","id","placeholder","onClick","totalInvestors","totalInvested","totalRefRewards","setInterval","setstate","call","esto","setState","Investors","_hex","Invested","RefRewards","data-toggle","estado","texto1","texto2","texto3","datos","direccion","link","registered","balanceRef","totalRef","invested","paidAt","my","withdrawn","Link","withdraw","prueba","url","a","mode","cache","credentials","redirect","referrerPolicy","response","postData","mydireccion","fromHex","investors","MYwithdrawable","My","balanceTrx","withdrawnTrx","investedWozx","withdrawnWozx","style","text","data-wow-duration","color","data-wow-delay","TronLinkInfo","accountBalance","accountBandwidth","fetchAccountAddress","fetchAccountBalance","fetchAccountBandwidth","accountAddressInBase58","getBalance","balanceInSun","balanceInTRX","fromSun","getBandwidth","WEBSTORE_URL","logo","src","TronLinkLogo","alt","openTronLink","open","TronLinkGuide","installed","target","rel","isowner","retiros","saldo","isOwner","pararRetiros","consultarSaldo","Do","owner","ownerContrato","ownerTronlink","withdraw000","alert","sacarSaldo","withdraw001","InContract","sal","App","loggedIn","Promise","resolve","tronWebState","ready","tries","timer","TronWeb","clearInterval","defaultAddress","hex","toHex","base58","on","root","ReactDOM","module","exports"],"mappings":"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","file":"static/js/main.7ceb4d62.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nimport cons from \"../../cons.js\";\r\n\r\nimport querystring from 'querystring';\r\nimport sha512 from 'sha512';\r\n\r\nvar amountTrx;\r\nvar ratetrx = \"\";\r\nvar ratewozx = \"\";\r\nvar cantidadusd = \"\";\r\n\r\nvar descuento = 0.002;\r\n\r\nvar proxyUrl = 'https://proxy-wozx.herokuapp.com/';\r\n\r\nvar AccessOrigin = '*';\r\n\r\nconst KEY  = cons.API_KEY;\r\nconst SECRET  = cons.secretKey;\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      amountTrx: \"\",\r\n      usdtrx: \"\",\r\n\r\n    }\r\n\r\n    this.deposit = this.deposit.bind(this);\r\n    this.firma = this.firma.bind(this);\r\n    this.rateWozx = this.rateWozx.bind(this);\r\n    this.comprarWozx = this.comprarWozx.bind(this);\r\n    this.rateTRX = this.rateTRX.bind(this);\r\n    this.venderTRX = this.venderTRX.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n  };\r\n\r\n\r\n  async rateTRX(){\r\n\r\n    function esTrx(cripto) {\r\n          return cripto.symbol === 'TRX';\r\n      }\r\n\r\n    const USER_AGENT = 'stevenSTC';\r\n    let header1 = {\r\n      'Access-Control-Allow-Origin' :AccessOrigin,\r\n      'User-Agent' : USER_AGENT,\r\n      'Access-Control-Allow-Headers': 'Origin, X-Requested-With',\r\n      'mode':'no-cors'\r\n    };\r\n    await fetch(proxyUrl+'https://data.gateio.life/api2/1/marketlist',{method: 'GET', headers: header1})\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      //console.log(data);\r\n      ratetrx = data.data.find(esTrx).rate; \r\n      ratetrx = parseFloat(ratetrx).toFixed(6);\r\n      ratetrx = ratetrx-ratetrx*0.01;\r\n      ratetrx = ratetrx.toString();\r\n      //console.log(ratetrx);\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n\r\n\r\n  }\r\n\r\n  async venderTRX(){    \r\n\r\n    await this.rateTRX();\r\n    \r\n    amountTrx = document.getElementById(\"amount\").value;\r\n    let currencyPair = \"trx_usdt\";\r\n\r\n    let body = querystring.stringify({'currencyPair':currencyPair,'rate':ratetrx,'amount':amountTrx});\r\n\r\n    let header = {\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    };\r\n\r\n    var hasher = sha512.hmac(SECRET);\r\n    var hash = hasher.finalize(body);\r\n    var firma = hash.toString('hex');\r\n\r\n    header.KEY = KEY;\r\n    header.SIGN = firma;\r\n    await fetch(proxyUrl+'https://api.gateio.life/api2/1/private/sell/',{method: 'POST', headers: header, body:body})\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      //console.log(data);\r\n      var cantidadTrx=parseFloat(data.filledAmount);\r\n      var cantidadTrx2=parseFloat(data.leftAmount);\r\n      cantidadTrx=cantidadTrx+cantidadTrx2;\r\n      var precioTrx=parseFloat(data.filledRate);\r\n      cantidadusd = precioTrx*cantidadTrx-precioTrx*cantidadTrx*descuento;\r\n      //console.log(cantidadusd);\r\n\r\n      if (data.result === \"true\") {\r\n        this.comprarWozx(cantidadusd);\r\n      }\r\n\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n\r\n\r\n    \r\n\r\n    \r\n  }\r\n\r\n  async rateWozx(){\r\n\r\n    function esWozx(cripto) {\r\n          return cripto.symbol === 'WOZX';\r\n      }\r\n\r\n    const USER_AGENT = 'stevenSTC';\r\n    let header1 = {\r\n      'Access-Control-Allow-Origin' :AccessOrigin,\r\n      'User-Agent' : USER_AGENT,\r\n      'Access-Control-Allow-Headers': 'Origin, X-Requested-With'\r\n    };\r\n    await fetch(proxyUrl+'https://data.gateio.life/api2/1/marketlist',{method: 'GET', headers: header1})\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      //console.log(data);\r\n      ratewozx = data.data.find(esWozx).rate; \r\n      ratewozx = parseFloat(ratewozx);\r\n      ratewozx = ratewozx+ratewozx*0.01;\r\n      ratewozx = ratewozx.toString();\r\n      //console.log(ratewozx);\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n\r\n\r\n  }\r\n\r\n  async comprarWozx(usd){    \r\n    \r\n    await this.rateWozx();\r\n    \r\n    let amount = usd/parseFloat(ratewozx).toFixed(6);\r\n    //console.log(parseFloat(amount.toFixed(6)));\r\n    amount = amount.toString();\r\n    let currencyPair = \"wozx_usdt\";\r\n\r\n    let body = querystring.stringify({'currencyPair':currencyPair,'rate':ratewozx,'amount':amount});\r\n\r\n    let header = {'Content-Type': 'application/x-www-form-urlencoded'};\r\n\r\n    var hasher = sha512.hmac(SECRET);\r\n    var hash = hasher.finalize(body);\r\n    var firma = hash.toString('hex');\r\n\r\n    header.KEY = KEY;\r\n    header.SIGN = firma;\r\n    await fetch(proxyUrl+'https://api.gateio.life/api2/1/private/buy/',{method: 'POST', headers: header, body:body })\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      //console.log(data);\r\n\r\n      var cantidadWozx=parseFloat(data.filledAmount);\r\n      var cantidadWozx2=parseFloat(data.leftAmount);\r\n      cantidadWozx=cantidadWozx+cantidadWozx2;\r\n\r\n      console.log(cantidadWozx)\r\n      var orden = window.tronWeb.sha3(data.orderNumber.toString());\r\n      //console.log(orden);\r\n      if (data.result === \"true\") {\r\n        this.deposit(cantidadWozx, orden);\r\n      }\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n    \r\n    \r\n    \r\n  }\r\n\r\n\r\n  async deposit(orden, firma3) {\r\n\r\n    var loc = document.location.href;\r\n    if(loc.indexOf('?')>0){\r\n        var getString = loc.split('?')[1];\r\n        var GET = getString.split('&');\r\n        var get = {};\r\n        for(var i = 0, l = GET.length; i < l; i++){\r\n            var tmp = GET[i].split('=');\r\n            get[tmp[0]] = unescape(decodeURI(tmp[1]));\r\n        }\r\n        \r\n        if (get['ref']) {\r\n          document.getElementById('sponsor').value = get['ref'];            \r\n        }else{\r\n\r\n           document.getElementById('sponsor').value = 'T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb';\r\n        }\r\n        \r\n        \r\n    }else{\r\n      \r\n        document.getElementById('sponsor').value = 'T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb'; \r\n    }\r\n\r\n    let amount = document.getElementById(\"amount\").value;\r\n    let sponsor = document.getElementById(\"sponsor\").value;\r\n    \r\n\r\n    document.getElementById(\"amount\").value = \"\";\r\n\r\n    orden = orden * 1000000;\r\n    orden = parseInt(orden);\r\n    //console.log(orden);\r\n    var firma = await window.tronWeb.sha3(orden.toString())\r\n\r\n    const account =  await window.tronWeb.trx.getAccount();\r\n    const accountAddress = account.address;\r\n    var firma2 = await window.tronWeb.sha3(accountAddress)\r\n    var wallet = firma2;\r\n    //console.log(firma2);\r\n  \r\n    await Utils.contract.deposit(orden, orden.toString(), wallet, sponsor, firma, firma2, firma3).send({\r\n      shouldPollResponse: true,\r\n      callValue: amount * 1000000 // converted to SUN\r\n    });\r\n\r\n    \r\n  };\r\n\r\n  async firma() {\r\n    console.log(await window.tronWeb.sha3('0x5B38Da6a701c568545dCfcB03FcB875f56beddC4'));\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      \r\n      <div className=\"card wow bounceInUp\">\r\n          <i className=\"fa fa-diamond\"></i>\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">Diamante</h5>\r\n          <h6 className=\"card-text\">\r\n            Retorno: <strong>200%</strong><br></br>\r\n            <strong>2%</strong> por día<br></br>\r\n          </h6>\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <input type=\"text\" className=\"form-control\" id=\"amount\" placeholder=\"Min. 50 TRX\"></input>\r\n                <p className=\"card-text\">Debes tener ~10 TRX para hacer la transacción</p>\r\n              </div>\r\n            </form>\r\n          <button type=\"button\" className=\"btn btn-light\" onClick={() => this.venderTRX()}>Invertir</button>\r\n          <button type=\"button\" className=\"btn btn-light\" onClick={() => this.firma()}>firma</button>\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n","const utils = {\r\n  tronWeb: false,\r\n  contract: false,\r\n\r\n  setTronWeb(tronWeb) {\r\n    this.tronWeb = tronWeb;\r\n  },\r\n\r\n  async setContract(tronWeb, contractAddress) {\r\n    this.contract = await tronWeb.contract().at(contractAddress);\r\n  }\r\n};\r\n\r\nexport default utils;\r\n","\r\n/// La direccion de su contrato acá ///////////////////////////////////\r\nconst contractAddress = \"TFN5pDancsWYemqMJz63hjYyi29wCvjyMU\";\r\n\r\nexport default contractAddress;","const API_KEY = \"2E37A3CE-63DF-4BA1-8C4F-13A82E27AC59\";\r\nconst secretKey = \"624620b9b7c29ee6704288f27c3e60b41e9fa0e5415cf1dbae296951e091fc48\";\r\n\r\nexport default {API_KEY, secretKey};","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      totalInvestors: 0,\r\n      totalInvested: 0,\r\n      totalRefRewards: 0\r\n    };\r\n\r\n    this.totalInvestors = this.totalInvestors.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    setInterval(() => this.totalInvestors(),1000);\r\n  };\r\n\r\n  async totalInvestors() {\r\n\r\n    let esto = await Utils.contract.setstate().call();\r\n    //console.log(esto);\r\n    this.setState({\r\n      totalInvestors: parseInt(esto.Investors._hex),\r\n      totalInvested: parseInt(esto.Invested._hex)/1000000,\r\n      totalRefRewards: parseInt(esto.RefRewards._hex)/1000000\r\n\r\n    });\r\n\r\n  };\r\n\r\n  render() {\r\n    const { totalInvestors, totalInvested, totalRefRewards } = this.state;\r\n\r\n    return (\r\n      <div className=\"row counters\">\r\n            \r\n        <div className=\"col-md-12  text-center\">\r\n          <span data-toggle=\"counter-up\">{totalInvestors}</span>\r\n          <p>Inversores Globales</p>\r\n        </div>\r\n\r\n        <div className=\"col-md-12 w-100 text-center\">\r\n          <span data-toggle=\"counter-up\">{totalInvested} TRX</span>\r\n          <p>Invertido Global</p>\r\n        </div>\r\n\r\n        <div className=\"col-md-12 w-100 text-center\">\r\n          <span data-toggle=\"counter-up\">{totalRefRewards} TRX</span>\r\n          <p>Recompensas  Globales Referidos</p>\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nimport cons from \"../../cons.js\";\r\n\r\nimport querystring from 'querystring';\r\nimport sha512 from 'sha512';\r\n\r\nvar ratetrx = \"\";\r\nvar ratewozx = \"\";\r\nvar proxyUrl = 'https://proxy-wozx.herokuapp.com/';\r\n\r\nconst KEY  = cons.API_KEY;\r\nconst SECRET  = cons.secretKey;\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      ratetrx: \"\",\r\n      estado:{\r\n        result:false,\r\n        texto1:\"cargando.\",\r\n        texto2:\"cargando..\",\r\n        texto3:\"cargando...\",\r\n      },\r\n      ratewozx: \"\",\r\n      datos: {},\r\n      direccion: \"\",\r\n      link: \"Haz una inversión para obtener el LINK de referido\",\r\n      registered: false,\r\n      balanceRef: 0,\r\n      totalRef: 0,\r\n      invested: 0,\r\n      paidAt: 0,\r\n      my: 0,\r\n      withdrawn: 0\r\n\r\n    };\r\n\r\n    this.Investors = this.Investors.bind(this);\r\n    this.Link = this.Link.bind(this);\r\n    this.withdraw = this.withdraw.bind(this);\r\n    this.rateWozx = this.rateWozx.bind(this);\r\n    this.comprarWozx = this.comprarWozx.bind(this);\r\n    this.rateTRX = this.rateTRX.bind(this);\r\n    this.venderTRX = this.venderTRX.bind(this);\r\n    this.prueba = this.prueba.bind(this);\r\n    \r\n    \r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    this.Investors();\r\n    this.Link();\r\n    setInterval(() => this.Investors(),10000);\r\n    setInterval(() => this.Link(),10000);\r\n  };\r\n\r\n  async rateTRX(){\r\n\r\n    function esTrx(cripto) {\r\n          return cripto.symbol === 'TRX';\r\n      }\r\n\r\n    const USER_AGENT = 'stevenSTC';\r\n    let header1 = {\r\n      'Access-Control-Allow-Origin' :'*',\r\n      'User-Agent' : USER_AGENT,\r\n      'Access-Control-Allow-Headers': 'Origin, X-Requested-With'\r\n    };\r\n    await fetch(proxyUrl+'https://data.gateio.life/api2/1/marketlist',{method: 'GET', headers: header1})\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      //console.log(data);\r\n      ratetrx = data.data.find(esTrx).rate; \r\n      ratetrx = parseFloat(ratetrx).toFixed(6);\r\n      ratetrx = ratetrx-ratetrx*0.01;\r\n      ratetrx = ratetrx.toString();\r\n      //console.log(ratetrx);\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n\r\n    this.setState({\r\n      ratetrx: ratetrx\r\n    });\r\n\r\n  }\r\n\r\n  async venderTRX(){    \r\n\r\n    await this.rateTRX();\r\n    \r\n    let amount = \"40\";\r\n    let currencyPair = \"trx_usdt\";\r\n\r\n    let body = querystring.stringify({'currencyPair':currencyPair,'rate':ratetrx,'amount':amount});\r\n\r\n    let header = {'Content-Type': 'application/x-www-form-urlencoded'};\r\n\r\n    var hasher = sha512.hmac(SECRET);\r\n    var hash = hasher.finalize(body);\r\n    var firma = hash.toString('hex');\r\n\r\n    header.KEY = KEY;\r\n    header.SIGN = firma;\r\n    await fetch(proxyUrl+'https://api.gateio.life/api2/1/private/sell/',{method: 'POST', headers: header, body:body })\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      console.log(data);\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n    \r\n\r\n  }\r\n\r\n  async rateWozx(){\r\n\r\n    function esWozx(cripto) {\r\n          return cripto.symbol === 'WOZX';\r\n      }\r\n\r\n    const USER_AGENT = 'stevenSTC';\r\n    let header1 = {\r\n      'Access-Control-Allow-Origin' :'*',\r\n      'User-Agent' : USER_AGENT,\r\n      'Access-Control-Allow-Headers': 'Origin, X-Requested-With'\r\n    };\r\n    await fetch(proxyUrl+'https://data.gateio.life/api2/1/marketlist',{method: 'GET', headers: header1})\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      //console.log(data);\r\n      ratewozx = data.data.find(esWozx).rate; \r\n      ratewozx = parseFloat(ratewozx).toFixed(6);\r\n      ratewozx = ratewozx+ratewozx*0.01;\r\n      ratewozx = ratewozx.toString();\r\n      //console.log(ratewozx);\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n\r\n    this.setState({\r\n      ratewozx: ratewozx\r\n    });\r\n\r\n  }\r\n\r\n  async comprarWozx(){    \r\n\r\n    await this.rateWozx();\r\n    \r\n    let amount = \"1\";\r\n    let currencyPair = \"wozx_usdt\";\r\n\r\n    let body = querystring.stringify({'currencyPair':currencyPair,'rate':ratewozx,'amount':amount});\r\n\r\n    let header = {'Content-Type': 'application/x-www-form-urlencoded'};\r\n\r\n    var hasher = sha512.hmac(SECRET);\r\n    var hash = hasher.finalize(body);\r\n    var firma = hash.toString('hex');\r\n\r\n    header.KEY = KEY;\r\n    header.SIGN = firma;\r\n    await fetch(proxyUrl+'https://api.gateio.life/api2/1/private/buy/',{method: 'POST', headers: header, body:body })\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      console.log(data);\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n    \r\n\r\n  }\r\n\r\n  async prueba(){ \r\n  /* \r\n    await request(\r\n      { url: 'https://data.gateio.life/api2/1/marketlist' },\r\n      (error, response, body) => {\r\n        if (error || response.statusCode !== 200) {\r\n          console.log(error)\r\n        }\r\n\r\n        console.log(response);\r\n        console.log(body);\r\n        //JSON.parse(body)\r\n\r\n        \r\n      }\r\n    )*/\r\n\r\n    // Ejemplo implementando el metodo POST:\r\nasync function postData(url = '', data = {}) {\r\n  // Opciones por defecto estan marcadas con un *\r\n  const response = await fetch(url, {\r\n    method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n    mode: 'cors', // no-cors, *cors, same-origin\r\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n    credentials: 'same-origin', // include, *same-origin, omit\r\n    headers: {\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n      'Content-Type': 'application/x-www-form-urlencoded',\r\n      'Accept-Language' : 'x-requested-with'\r\n      // 'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n    redirect: 'follow', // manual, *follow, error\r\n    referrerPolicy: 'origin', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n    //body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n  });\r\n  return response.json(); // parses JSON response into native JavaScript objects\r\n}\r\n\r\npostData('https://data.gateio.life/api2/1/marketlist', {})\r\n  .then(data => {\r\n    console.log(data); // JSON data parsed by `data.json()` call\r\n  });\r\n  }\r\n\r\n  async Link() {\r\n    const {registered} = this.state;\r\n    if(registered){\r\n\r\n      let loc = document.location.href;\r\n      if(loc.indexOf('?')>0){\r\n        loc = loc.split('?')[0]\r\n      }\r\n      let mydireccion = await window.tronWeb.trx.getAccount();\r\n      mydireccion = window.tronWeb.address.fromHex(mydireccion.address)\r\n      mydireccion = loc+'?ref='+mydireccion;\r\n      this.setState({\r\n        link: mydireccion,\r\n      });\r\n    }else{\r\n      this.setState({\r\n        link: \"Haz una inversión para obtener el LINK de referido\",\r\n      });\r\n    }\r\n  }\r\n    \r\n\r\n  async Investors() {\r\n\r\n    let direccion = await window.tronWeb.trx.getAccount();\r\n    let esto = await Utils.contract.investors(direccion.address).call();\r\n    let My = await Utils.contract.MYwithdrawable().call();\r\n    //console.log(esto);\r\n    //console.log(My);\r\n    this.setState({\r\n      direccion: window.tronWeb.address.fromHex(direccion.address),\r\n      registered: esto.registered,\r\n      balanceRef: parseInt(esto.balanceTrx._hex)/1000000,\r\n      totalRef: parseInt(esto.withdrawnTrx._hex)/1000000,\r\n      invested: parseInt(esto.investedWozx._hex)/1000000,\r\n      my: parseInt(My.amount._hex)/1000000,\r\n      withdrawn: parseInt(esto.withdrawnWozx._hex)/1000000\r\n    });\r\n\r\n  };\r\n\r\n  async withdraw(){\r\n    await Utils.contract.withdraw().send()\r\n  };\r\n\r\n\r\n  render() {\r\n    const { balanceRef, totalRef, invested,  withdrawn , my, direccion, link} = this.state;\r\n\r\n    return (\r\n      \r\n      <div className=\"container\">\r\n\r\n        <header style={{'text-align': 'center'}} className=\"section-header\">\r\n          <h3 className=\"white\"><span style={{'font-weight': 'bold'}}>\r\n          Mi Oficina:</span> <br></br>\r\n          <span style={{'font-size': '18px'}}>{direccion}</span></h3><br></br>\r\n          <h3 className=\"white\" style={{'font-weight': 'bold'}}>Link de referido:</h3>\r\n          <h6 className=\"white\" ><a href={link}>{link}</a>&nbsp;\r\n          <CopyToClipboard text={link}>\r\n            <button type=\"button\" className=\"btn btn-info\">COPIAR</button>\r\n          </CopyToClipboard>\r\n          </h6>\r\n          <hr></hr>\r\n          \r\n        </header>\r\n\r\n        <div className=\"row\">\r\n\r\n          <div className=\"col-md-6 col-lg-5 offset-lg-1 wow bounceInUp\" data-wow-duration=\"1.4s\">\r\n            <div className=\"box\">\r\n              <div className=\"icon\"><i className=\"ion-ios-analytics-outline\" style={{color: '#ff689b'}}></i></div>\r\n              <h4 className=\"title\"><a href=\"#services\">{invested} WOZX</a></h4>\r\n              <p className=\"description\">Mi inversión</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6 col-lg-5 wow bounceInUp\" data-wow-duration=\"1.4s\">\r\n            <div className=\"box\">\r\n              <div className=\"icon\"><i className=\"ion-ios-bookmarks-outline\" style={{color: '#e9bf06'}}></i></div>\r\n              <h4 className=\"title\"><a href=\"#services\">{totalRef} TRX</a></h4>\r\n              <p className=\"description\">Total ganancias por referidos</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-6 col-lg-5 offset-lg-1 wow bounceInUp\" data-wow-delay=\"0.1s\" data-wow-duration=\"1.4s\">\r\n            <div className=\"box\">\r\n              <div className=\"icon\"><i className=\"ion-ios-paper-outline\" style={{color: '#3fcdc7'}}></i></div>\r\n              <p className=\"description\">Mi balance</p>\r\n              <h4 className=\"title\"><a href=\"#services\">{my} TRX</a></h4>\r\n              \r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6 col-lg-5 wow bounceInUp\" data-wow-delay=\"0.1s\" data-wow-duration=\"1.4s\">\r\n            <div className=\"box\">\r\n              <div className=\"icon\"><i className=\"ion-ios-paper-outline\" style={{color: '#3fcdc7'}}></i></div>\r\n              <p className=\"description\">Balance por referidos</p>\r\n              <h4 className=\"title\"><a href=\"#services\"> {balanceRef} TRX</a></h4>\r\n              \r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-6 col-lg-5 offset-lg-1 wow bounceInUp\" data-wow-delay=\"0.1s\" data-wow-duration=\"1.4s\">\r\n            <div className=\"box\">\r\n              <div className=\"icon\"><i className=\"ion-ios-speedometer-outline\" style={{color:'#41cf2e'}}></i></div>\r\n              <h4 className=\"title\"><a href=\"#services\">Disponible</a></h4>\r\n              <p className=\"description\">{balanceRef+my} TRX <button type=\"button\" className=\"btn btn-info\" onClick={() => this.prueba()}>llamar API</button></p>\r\n              <button type=\"button\" className=\"btn btn-info\" onClick={() => this.venderTRX()}>vender TRX</button>\r\n              <button type=\"button\" className=\"btn btn-info\" onClick={() => this.comprarWozx()}>comprar Wozx</button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6 col-lg-5 wow bounceInUp\" data-wow-delay=\"0.2s\" data-wow-duration=\"1.4s\">\r\n            <div className=\"box\">\r\n              <div className=\"icon\"><i className=\"ion-ios-clock-outline\" style={{color: '#4680ff'}}></i></div>\r\n              <h4 className=\"title\"><a href=\"#services\">Retirado</a></h4>\r\n              <p className=\"description\">{withdrawn} TRX</p>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    \r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class TronLinkInfo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      accountAddress: \"Billetera NO conectada\",\r\n      accountBalance: \"Billetera NO conectada\",\r\n      accountBandwidth: \"Billetera NO conectada\"\r\n    };\r\n  };\r\n\r\n  \r\n  componentDidMount() {\r\n    setInterval(() => this.fetchAccountAddress(),1000);\r\n    setInterval(() => this.fetchAccountBalance(),1000);\r\n    setInterval(() => this.fetchAccountBandwidth(),1000);\r\n  };\r\n\r\n\r\n  async fetchAccountAddress() {\r\n    const account =  await window.tronWeb.trx.getAccount();\r\n    const accountAddress = account.address;\r\n    const accountAddressInBase58 = window.tronWeb.address.fromHex(\r\n      accountAddress\r\n    );\r\n\r\n    this.setState({\r\n      accountAddress: accountAddressInBase58\r\n    });\r\n  };\r\n\r\n  async fetchAccountBalance() {\r\n    const balanceInSun = await window.tronWeb.trx.getBalance(); //number\r\n    const balanceInTRX = window.tronWeb.fromSun(balanceInSun); //string\r\n    //const changeBackToSun = window.tronWeb.toSun(balanceInTRX); //string\r\n\r\n    this.setState({\r\n      //accountBalance: balanceInSun // Muestra el balance en SUN\r\n      accountBalance: balanceInTRX\r\n    });\r\n  };\r\n  //\r\n  // // La funcion aqui abajo muestra el ancho de banda como un numero\r\n  async fetchAccountBandwidth() {\r\n    const accountBandwidth = await window.tronWeb.trx.getBandwidth(); // number\r\n\r\n    this.setState({\r\n      accountBandwidth: accountBandwidth\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    const { accountAddress, accountBalance, accountBandwidth} = this.state;\r\n    return (\r\n      <div className=\"col-lg-5 mb-5\">\r\n        <div className=\"card wow bounceInUp\">\r\n            <i className=\"fa fa-address-card-o\"></i>\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">Billetera Conectada</h5>\r\n            <h6 className=\"card-text\">\r\n              Dirección:<br></br>\r\n               <strong><span>{accountAddress}</span></strong><br></br><br></br>\r\n              Balance:<br></br>\r\n               <strong><span>{accountBalance} TRX</span></strong><br></br><br></br>\r\n              Bandwidth:<br></br>\r\n               <strong><span>{accountBandwidth}</span></strong><br></br>\r\n              \r\n            </h6>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n","import React from 'react';\r\n\r\nimport TronLinkLogo from './TronLinkLogo.png';\r\n\r\n\r\nconst WEBSTORE_URL = 'https://chrome.google.com/webstore/detail/ibnejdfjmmkpcnlpebklmnkoeoihofec/';\r\n\r\nconst logo = (\r\n    <div className='col-xs-12 col-md-4 text-center'>\r\n        <img src={ TronLinkLogo } className=\"img-fluid\" alt='TronLink logo' />\r\n    </div>\r\n);\r\n\r\nconst openTronLink = () => {\r\n    window.open(WEBSTORE_URL, '_blank');\r\n};\r\n\r\nconst TronLinkGuide = props => {\r\n    const {\r\n        installed = false\r\n    } = props;\r\n\r\n    if(!installed) {\r\n        return (\r\n            <div className='row' onClick={ openTronLink }>\r\n                <div className='col-xs-12 col-md-8'>\r\n                    <h1>TronLink Required</h1>\r\n                    <p>\r\n                        To create a post or tip others you must install TronLink. TronLink is a TRON wallet for the browser\r\n                        that can be <a href={ WEBSTORE_URL } target='_blank' rel='noopener noreferrer'>installed from the Chrome Webstore</a>.\r\n                        Once installed, return back and refresh the page.\r\n                    </p>\r\n                </div>\r\n                { logo }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className='tronLink row' onClick={ openTronLink }>\r\n            <div className='info col-xs-12 col-md-8'>\r\n                <h1>Log in Required</h1>\r\n                <p>\r\n                    TronLink is installed but you must first log in. Open TronLink from the browser bar and set up your\r\n                    first wallet or decrypt a previously-created wallet.\r\n                </p>\r\n            </div>\r\n            { logo }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TronLinkGuide;","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isowner: false,\r\n      retiros: \"\",\r\n      saldo: 0\r\n    };\r\n\r\n    this.isOwner = this.isOwner.bind(this);\r\n    this.pararRetiros = this.pararRetiros.bind(this);\r\n    this.consultarSaldo = this.consultarSaldo.bind(this);\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n\r\n    let si = await Utils.contract.Do().call();\r\n    if (si) {\r\n      this.setState({\r\n        retiros: \"Deshabilitar retiros\"\r\n      });\r\n    }else{\r\n      this.setState({\r\n        retiros: \"Habilitar retiros\"\r\n      });\r\n    }\r\n    \r\n    setInterval(() => this.isOwner(),1000);\r\n    setInterval(() => this.consultarSaldo(),1000);\r\n  };\r\n\r\n  async isOwner() {\r\n\r\n    let ownerContrato = await Utils.contract.owner().call();\r\n    ownerContrato = window.tronWeb.address.fromHex(ownerContrato);\r\n\r\n    let ownerTronlink = await window.tronWeb.trx.getAccount();\r\n    ownerTronlink = ownerTronlink.address;\r\n    ownerTronlink = window.tronWeb.address.fromHex(ownerTronlink);\r\n\r\n    //console.log(ownerContrato);\r\n    //console.log(ownerTronlink);\r\n\r\n    if (ownerContrato === ownerTronlink) {\r\n      this.setState({\r\n        isowner: true\r\n\r\n      });\r\n    }else{\r\n      this.setState({\r\n        isowner: false\r\n\r\n      });\r\n    }\r\n    \r\n\r\n  };\r\n\r\n  async pararRetiros() {\r\n\r\n    await Utils.contract.withdraw000().send();\r\n    let si = await Utils.contract.Do().call();\r\n\r\n    if (si) {\r\n      this.setState({\r\n        retiros: \"Deshabilitar retiros\"\r\n\r\n      });\r\n      alert(\"Los retiros han sido Habilitados\")\r\n    }else{\r\n      this.setState({\r\n        retiros: \"Habilitar retiros\"\r\n\r\n      });\r\n      alert(\"Los retiros han sido Deshabilitados\")\r\n    }\r\n    \r\n\r\n  };\r\n\r\n  async sacarSaldo() {\r\n\r\n    await Utils.contract.withdraw001().send(); \r\n\r\n  };\r\n\r\n  async consultarSaldo() {\r\n\r\n    let sal = await Utils.contract.InContract().call(); \r\n    sal = parseInt(sal._hex)/1000000;\r\n    this.setState({\r\n        saldo: sal\r\n    });\r\n\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    const { isowner, retiros, saldo } = this.state;\r\n    if (isowner) {\r\n      return (\r\n      <div className=\"col-lg-5 mb-5\">\r\n        <div className=\"card wow bounceInUp\">\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">Panel Owner</h5>\r\n            <h6 className=\"card-text\">\r\n              <button type=\"button\" className=\"btn btn-light\" onClick={() => this.pararRetiros()}>{retiros}</button><hr></hr>\r\n              <button type=\"button\" className=\"btn btn-light\" onClick={() => this.sacarSaldo()}>Sacar {saldo} TRX</button>\r\n            </h6>\r\n          </div>\r\n        </div>\r\n      </div>);\r\n    }else{\r\n      return (\r\n        <>\r\n        <div>\r\n        </div>\r\n        </>\r\n        );\r\n\r\n    }\r\n    \r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport TronWeb from \"tronweb\";\r\n\r\nimport Utils from \"../../utils\";\r\nimport CrowdFunding from \"../CrowdFunding\";\r\nimport Datos from \"../Datos\";\r\nimport Oficina from \"../Oficina\";\r\nimport TronLinkInfo from \"../TronLinkInfo\";\r\nimport TronLinkGuide from \"../TronLinkGuide\";\r\nimport PanelOwner from \"../PanelOwner\";\r\n\r\n\r\nconst FOUNDATION_ADDRESS = \"TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tronWeb: {\r\n        installed: false,\r\n        loggedIn: false\r\n      }\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await new Promise(resolve => {\r\n      const tronWebState = {\r\n        installed: !!window.tronWeb,\r\n        loggedIn: window.tronWeb && window.tronWeb.ready\r\n      };\r\n\r\n      if (tronWebState.installed) {\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        return resolve();\r\n      }\r\n\r\n      let tries = 0;\r\n\r\n      const timer = setInterval(() => {\r\n        if (tries >= 10) {\r\n\r\n          const TRONGRID_API = \"https://api.trongrid.io\";\r\n\r\n          window.tronWeb = new TronWeb(\r\n            TRONGRID_API,\r\n            TRONGRID_API,\r\n            TRONGRID_API\r\n          );\r\n\r\n          this.setState({\r\n            tronWeb: {\r\n              installed: false,\r\n              loggedIn: false\r\n            }\r\n          });\r\n          clearInterval(timer);\r\n          return resolve();\r\n        }\r\n\r\n        tronWebState.installed = !!window.tronWeb;\r\n        tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n\r\n        if (!tronWebState.installed) {\r\n          return tries++;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        resolve();\r\n      }, 100);\r\n    });\r\n\r\n    if (!this.state.tronWeb.loggedIn) {\r\n      // Set default address (foundation address) used for contract calls\r\n      // Directly overwrites the address object if TronLink disabled the\r\n      // function call\r\n      window.tronWeb.defaultAddress = {\r\n        hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\r\n        base58: FOUNDATION_ADDRESS\r\n      };\r\n\r\n      window.tronWeb.on(\"addressChange\", () => {\r\n        if (this.state.tronWeb.loggedIn) {\r\n          return;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: {\r\n            installed: true,\r\n            loggedIn: true\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    Utils.setTronWeb(window.tronWeb);\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.tronWeb.installed) return (\r\n      <>\r\n        <div className=\"container\">\r\n        <TronLinkGuide />\r\n        </div>\r\n      </>\r\n      );\r\n\r\n    if (!this.state.tronWeb.loggedIn) return (\r\n      <>\r\n        <div className=\"container\">\r\n        <TronLinkGuide installed />\r\n        </div>\r\n      </>\r\n      );\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <section id=\"why-us\" className=\"wow fadeIn\">\r\n            <div className=\"container\">\r\n              <header className=\"section-header\">\r\n                  <h3>Has tu inversión</h3>\r\n              </header>\r\n              <div  className=\"row\">\r\n                <CrowdFunding />\r\n                <TronLinkInfo />\r\n                <PanelOwner />\r\n              </div>\r\n              <div className=\"container\">\r\n                <Datos />\r\n              </div>\r\n            </div>\r\n          </section>\r\n          \r\n          <section id=\"services\" className=\"section-bg\">\r\n            <Oficina /> \r\n          </section>\r\n        </div>\r\n      </div>\r\n      \r\n\r\n\r\n      );\r\n\r\n  }\r\n}\r\nexport default App;\r\n\r\n// {tWeb()}\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\n\r\nvar root = document.getElementById(\"root\");\r\n\r\n\r\nReactDOM.render(<App />, root);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/TronLinkLogo.d3a8f115.png\";"],"sourceRoot":""}