{"version":3,"sources":["components/CrowdFunding/index.js","utils/index.js","components/Contract/index.js","cons.js","components/Oficina/index.js","components/Oficina2/index.js","components/TronLinkGuide/index.js","components/PanelOwner/index.js","components/App/index.js","index.js","components/TronLinkGuide/TronLinkLogo.png"],"names":["amountTrx","utils","tronWeb","contract","setTronWeb","this","setContract","contractAddress","at","ratetrx","ratetrx_usd","ratewozx","cantidadusd","proxyUrl","KEY","cons","SECRET","pry","tronApp","TronWeb2","WozxInvestor","Component","constructor","props","super","state","usdtrx","min","deposit","bind","deposit2","rateWozx","comprarWozx","rateTRX","venderTRX","postComprarWozx","postVenderTRX","reatizarTodoPost","ordenEjecutada","minDepo","componentDidMount","Utils","window","setInterval","esTrx","cripto","symbol","header1","fetch","method","headers","then","res","json","data","find","rate","parseFloat","toFixed","catch","error","console","log","MIN_DEPOSIT","call","mindepo","parseInt","_hex","setState","minimo_usd","nuevoMinDeposit","send","toString","document","getElementById","value","body","querystring","stringify","header","hasher","sha512","hmac","hash","finalize","firma","SIGN","cantidadTrx","filledAmount","leftAmount","precioTrx","filledRate","result","esWozx","usd","amount","cantidadWozx","orden","sha3","orderNumber","firma3","loc","location","href","indexOf","getString","split","GET","get","i","l","length","tmp","unescape","decodeURI","sponsor","trx","getAccount","account","accountAddress","address","firma2","wallet","firmarTx","shouldPollResponse","callValue","depositPost","crearOrdenPost","fromHex","rt","rw","am","ordenPost","verOrdenPost","nOrden","tron","rTron","rWozx","tWozx","numeroDeOrden","_amountTrx","nuevoRate1","nuevoRate2","nuevoRate","ejecutarOrden","render","className","type","id","placeholder","onClick","datos","direccion","link","registered","balanceTrx","withdrawnTrx","investedWozx","withdrawnWozx","Investors","Link","withdraw","mydireccion","investors","esto","style","text","estado","texto1","texto2","texto3","balanceRef","totalRef","invested","paidAt","my","withdrawn","venderWozx","comprarTRX","enviarTron","c","MYwithdrawable","My","mywithdrawableWozx","data-wow-duration","WEBSTORE_URL","logo","src","TronLinkLogo","alt","openTronLink","open","TronLinkGuide","installed","target","rel","isowner","retiros","saldo","isOwner","pararRetiros","consultarSaldo","Do","owner","ownerContrato","ownerTronlink","withdraw000","alert","sacarSaldo","withdraw001","InContract","sal","App","loggedIn","Promise","resolve","tronWebState","ready","tries","timer","TronWeb","clearInterval","defaultAddress","hex","toHex","base58","on","root","ReactDOM","module","exports"],"mappings":"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","file":"static/js/main.275851e7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nimport cons from \"../../cons.js\";\r\n\r\nimport querystring from 'querystring';\r\nimport sha512 from 'sha512';\r\nimport TronWeb2 from 'tronweb';\r\n\r\nvar amountTrx;\r\nvar ratetrx = \"\";\r\nvar ratetrx_usd = \"\";\r\nvar ratewozx = \"\";\r\nvar cantidadusd = \"\";\r\n\r\nvar descuento = 0.002 //+ 0.45;//comisión de Gate.io ->|0.002 + 0.45|<- descuento plataforma WozxInvest\r\nvar tantoTrx = 0.001;// para que el TRX se Venda de inmediato\r\nvar tantoWozx = 0.02;// para que el WOZX se Compre de inmediato\r\nvar minimo_usd = 1;// (100) para dolares (100 USD)\r\nvar rango_minimo = 0.1; // 10% de sensibilidad para modificar el precio minimo de inversion\r\n\r\nvar proxyUrl = 'https://proxy-wozx.herokuapp.com/';\r\n\r\nvar AccessOrigin = '*';\r\n\r\nconst KEY  = cons.AK;\r\nconst SECRET  = cons.SK;\r\nconst pry = cons.WO;\r\n\r\n\r\nconst TRONGRID_API = \"https://api.shasta.trongrid.io\";\r\n\r\nconst tronApp = new TronWeb2(\r\n  TRONGRID_API,\r\n  TRONGRID_API,\r\n  TRONGRID_API,\r\n  pry\r\n);\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      amountTrx: \"\",\r\n      usdtrx: \"\",\r\n      min: 3000\r\n\r\n    }\r\n\r\n    this.deposit = this.deposit.bind(this);\r\n    this.deposit2 = this.deposit2.bind(this);\r\n    this.rateWozx = this.rateWozx.bind(this);\r\n    this.comprarWozx = this.comprarWozx.bind(this);\r\n    this.rateTRX = this.rateTRX.bind(this);\r\n    this.venderTRX = this.venderTRX.bind(this);\r\n    this.postComprarWozx = this.postComprarWozx.bind(this);\r\n    this.postVenderTRX = this.postVenderTRX.bind(this);\r\n    this.reatizarTodoPost = this.reatizarTodoPost.bind(this);\r\n    this.ordenEjecutada = this.ordenEjecutada.bind(this);\r\n    this.minDepo = this.minDepo.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    await this.reatizarTodoPost();\r\n    setInterval(() => this.reatizarTodoPost(),120*1000);\r\n    await this.minDepo();\r\n    setInterval(() => this.minDepo(),30*1000);\r\n    \r\n  };\r\n\r\n  async minDepo(){\r\n\r\n    function esTrx(cripto) {\r\n          return cripto.symbol === 'TRX';\r\n      }\r\n\r\n    const USER_AGENT = 'stevenSTC';\r\n    let header1 = {\r\n      'Access-Control-Allow-Origin' :AccessOrigin,\r\n      'User-Agent' : USER_AGENT,\r\n      'Access-Control-Allow-Headers': 'Origin, X-Requested-With',\r\n      'mode':'no-cors'\r\n    };\r\n    await fetch(proxyUrl+'https://data.gateio.life/api2/1/marketlist',{method: 'GET', headers: header1})\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      //console.log(data);\r\n      ratetrx_usd = data.data.find(esTrx).rate; \r\n      ratetrx_usd = parseFloat(ratetrx_usd).toFixed(6);\r\n      //console.log(ratetrx);\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n\r\n\r\n    var mindepo = await Utils.contract.MIN_DEPOSIT().call();\r\n    mindepo = parseInt(mindepo._hex)/1000000;\r\n\r\n    this.setState({\r\n      min: mindepo\r\n    });\r\n    //console.log(mindepo);\r\n\r\n    if (mindepo*ratetrx_usd >= minimo_usd+minimo_usd*rango_minimo || mindepo*ratetrx_usd <= minimo_usd-minimo_usd*rango_minimo) {\r\n\r\n      let contract = await tronApp.contract().at(contractAddress);//direccion del contrato para la W app\r\n      await contract.nuevoMinDeposit(parseInt(minimo_usd/ratetrx_usd)).send();\r\n      console.log(\"EVENTO: nuevo minimo de deposito \"+parseInt(minimo_usd/ratetrx_usd)+\" TRX\")\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n\r\n  async rateTRX(){\r\n\r\n    function esTrx(cripto) {\r\n          return cripto.symbol === 'TRX';\r\n      }\r\n\r\n    const USER_AGENT = 'stevenSTC';\r\n    let header1 = {\r\n      'Access-Control-Allow-Origin' :AccessOrigin,\r\n      'User-Agent' : USER_AGENT,\r\n      'Access-Control-Allow-Headers': 'Origin, X-Requested-With',\r\n      'mode':'no-cors'\r\n    };\r\n    await fetch(proxyUrl+'https://data.gateio.life/api2/1/marketlist',{method: 'GET', headers: header1})\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      //console.log(data);\r\n      ratetrx = data.data.find(esTrx).rate; \r\n      ratetrx = parseFloat(ratetrx).toFixed(6);\r\n      ratetrx = ratetrx-ratetrx*tantoTrx;\r\n      ratetrx = ratetrx.toString();\r\n      //console.log(ratetrx);\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n\r\n\r\n  }\r\n\r\n  async venderTRX(){    \r\n\r\n    await this.rateTRX();\r\n    \r\n    amountTrx = document.getElementById(\"amount\").value;\r\n    amountTrx = amountTrx - amountTrx*descuento;\r\n    amountTrx = amountTrx.toString();\r\n\r\n    let currencyPair = \"trx_usdt\";\r\n\r\n    let body = querystring.stringify({'currencyPair':currencyPair,'rate':ratetrx,'amount':amountTrx});\r\n\r\n    let header = {\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    };\r\n\r\n    var hasher = sha512.hmac(SECRET);\r\n    var hash = hasher.finalize(body);\r\n    var firma = hash.toString('hex');\r\n\r\n    header.KEY = KEY;\r\n    header.SIGN = firma;\r\n    await fetch(proxyUrl+'https://api.gateio.life/api2/1/private/sell/',{method: 'POST', headers: header, body:body})\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      //console.log(data);\r\n      var cantidadTrx=parseFloat(data.filledAmount);\r\n      var cantidadTrx2=parseFloat(data.leftAmount);\r\n      cantidadTrx=cantidadTrx+cantidadTrx2;\r\n      var precioTrx=parseFloat(data.filledRate);\r\n      cantidadusd = precioTrx*cantidadTrx-precioTrx*cantidadTrx*tantoTrx;\r\n      //console.log(cantidadusd);\r\n\r\n      if (data.result === \"true\") {\r\n        this.comprarWozx(cantidadusd);\r\n      }else{\r\n        // cantidad muy alta de TRX pendiente se ejecuta post recepcion de fondos\r\n        this.deposit2();\r\n      }\r\n\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n\r\n    \r\n  }\r\n\r\n  async rateWozx(){\r\n\r\n    function esWozx(cripto) {\r\n          return cripto.symbol === 'WOZX';\r\n      }\r\n\r\n    const USER_AGENT = 'stevenSTC';\r\n    let header1 = {\r\n      'Access-Control-Allow-Origin' :AccessOrigin,\r\n      'User-Agent' : USER_AGENT,\r\n      'Access-Control-Allow-Headers': 'Origin, X-Requested-With'\r\n    };\r\n    await fetch(proxyUrl+'https://data.gateio.life/api2/1/marketlist',{method: 'GET', headers: header1})\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      //console.log(data);\r\n      ratewozx = data.data.find(esWozx).rate; \r\n      ratewozx = parseFloat(ratewozx);\r\n      ratewozx = ratewozx+ratewozx*tantoWozx;\r\n      ratewozx = ratewozx.toString();\r\n      //console.log(ratewozx);\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n\r\n\r\n  }\r\n\r\n  async comprarWozx(usd){    \r\n    \r\n    await this.rateWozx();\r\n    \r\n    let amount = usd/parseFloat(ratewozx).toFixed(6);\r\n    //console.log(parseFloat(amount.toFixed(6)));\r\n    amount = amount.toString();\r\n    let currencyPair = \"wozx_usdt\";\r\n\r\n    let body = querystring.stringify({'currencyPair':currencyPair,'rate':ratewozx,'amount':amount});\r\n\r\n    let header = {'Content-Type': 'application/x-www-form-urlencoded'};\r\n\r\n    var hasher = sha512.hmac(SECRET);\r\n    var hash = hasher.finalize(body);\r\n    var firma = hash.toString('hex');\r\n\r\n    header.KEY = KEY;\r\n    header.SIGN = firma;\r\n    await fetch(proxyUrl+'https://api.gateio.life/api2/1/private/buy/',{method: 'POST', headers: header, body:body })\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      console.log(data);\r\n\r\n      var cantidadWozx=parseFloat(data.filledAmount);\r\n      var cantidadWozx2=parseFloat(data.leftAmount);\r\n      cantidadWozx=cantidadWozx+cantidadWozx2;\r\n\r\n      console.log(cantidadWozx)\r\n      var orden = window.tronWeb.sha3(data.orderNumber.toString());\r\n      console.log(orden);\r\n      if (data.result === \"true\") {\r\n        this.deposit(cantidadWozx, orden);\r\n      }\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n    \r\n    \r\n    \r\n  }\r\n\r\n\r\n  async deposit(orden, firma3) {\r\n\r\n    var loc = document.location.href;\r\n    if(loc.indexOf('?')>0){\r\n        var getString = loc.split('?')[1];\r\n        var GET = getString.split('&');\r\n        var get = {};\r\n        for(var i = 0, l = GET.length; i < l; i++){\r\n            var tmp = GET[i].split('=');\r\n            get[tmp[0]] = unescape(decodeURI(tmp[1]));\r\n        }\r\n        \r\n        if (get['ref']) {\r\n          tmp = get['ref'].split('#')\r\n          document.getElementById('sponsor').value = tmp[0];            \r\n        }else{\r\n\r\n           document.getElementById('sponsor').value = 'T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb';\r\n        }\r\n        \r\n        \r\n    }else{\r\n      \r\n        document.getElementById('sponsor').value = 'T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb'; \r\n    }\r\n\r\n    let amount = document.getElementById(\"amount\").value;\r\n    let sponsor = document.getElementById(\"sponsor\").value;\r\n    \r\n\r\n    document.getElementById(\"amount\").value = \"\";\r\n\r\n    orden = orden * 1000000;\r\n    orden = parseInt(orden);\r\n    //console.log(orden);\r\n    var firma = await window.tronWeb.sha3(orden.toString())\r\n\r\n    const account =  await window.tronWeb.trx.getAccount();\r\n    const accountAddress = account.address;\r\n    var firma2 = await window.tronWeb.sha3(accountAddress)\r\n    var wallet = firma2;\r\n    //console.log(firma2);\r\n\r\n    let contract = await tronApp.contract().at(contractAddress);//direccion del contrato\r\n    await contract.firmarTx(firma3).send();\r\n  \r\n    await Utils.contract.deposit(orden, orden.toString(), wallet, sponsor, firma, firma2, firma3).send({\r\n      shouldPollResponse: true,\r\n      callValue: amount * 1000000 // converted to SUN\r\n    });\r\n\r\n    \r\n  };\r\n\r\n  async deposit2() {\r\n\r\n    var loc = document.location.href;\r\n    if(loc.indexOf('?')>0){\r\n        var getString = loc.split('?')[1];\r\n        var GET = getString.split('&');\r\n        var get = {};\r\n        for(var i = 0, l = GET.length; i < l; i++){\r\n            var tmp = GET[i].split('=');\r\n            get[tmp[0]] = unescape(decodeURI(tmp[1]));\r\n        }\r\n        \r\n        if (get['ref']) {\r\n          tmp = get['ref'].split('#')\r\n          document.getElementById('sponsor').value = tmp[0];            \r\n        }else{\r\n\r\n           document.getElementById('sponsor').value = 'T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb';\r\n        }\r\n        \r\n        \r\n    }else{\r\n      \r\n        document.getElementById('sponsor').value = 'T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb'; \r\n    }\r\n\r\n    let amount = document.getElementById(\"amount\").value;\r\n    let sponsor = document.getElementById(\"sponsor\").value;\r\n\r\n    await Utils.contract.depositPost(sponsor).send({\r\n      shouldPollResponse: true,\r\n      callValue: amount * 1000000 // converted to SUN\r\n    });\r\n\r\n    await this.crearOrdenPost(amount);\r\n\r\n    document.getElementById(\"amount\").value = \"\";\r\n\r\n    \r\n  };\r\n\r\n  async crearOrdenPost(amount){\r\n\r\n    await this.rateWozx();\r\n    await this.rateTRX();\r\n\r\n    var orden = amount*ratetrx+ratetrx*tantoTrx;\r\n    orden = orden-orden*descuento;\r\n    orden = orden / ratewozx+ratewozx*tantoWozx;\r\n    orden = parseInt(orden*1000000);\r\n    console.log(orden);\r\n    console.log(amount);\r\n    const account =  await window.tronWeb.trx.getAccount();\r\n    var accountAddress = account.address;\r\n    accountAddress = window.tronWeb.address.fromHex(accountAddress);\r\n    console.log(accountAddress);\r\n    var rt = parseInt(ratetrx*1000000); \r\n    var rw = parseInt(ratewozx*1000000);\r\n    var am = parseInt(amount*1000000);\r\n    console.log(am);\r\n    console.log(rt);\r\n    console.log(rw);\r\n\r\n    let contract = await tronApp.contract().at(contractAddress);//direccion del contrato para la W app\r\n    await contract.ordenPost(accountAddress, am, rt, rw, orden).send();\r\n    \r\n  };\r\n\r\n  async reatizarTodoPost(){\r\n\r\n    let contract = await tronApp.contract().at(contractAddress);//direccion del contrato para la W app\r\n    var orden = await contract.verOrdenPost().call();\r\n    console.log(orden);\r\n\r\n    orden = {nOrden:parseInt(orden[0]._hex), tron:parseInt(orden[1]._hex)/1000000, rTron:parseInt(orden[2]._hex)/1000000, rWozx:parseInt(orden[3]._hex)/1000000, tWozx:parseInt(orden[4]._hex)/1000000 }\r\n    console.log(orden);\r\n\r\n    if (orden.tron > 0){\r\n      this.postVenderTRX(orden.nOrden, orden.tron, orden.rTron, orden.rWozx)\r\n    }\r\n     \r\n  }\r\n\r\n  async postVenderTRX(numeroDeOrden, _amountTrx, nuevoRate1, nuevoRate2){    \r\n\r\n    ratetrx = nuevoRate1;\r\n    amountTrx = _amountTrx;\r\n    amountTrx = amountTrx.toString();\r\n\r\n    let currencyPair = \"trx_usdt\";\r\n\r\n    let body = querystring.stringify({'currencyPair':currencyPair,'rate':ratetrx,'amount':amountTrx});\r\n\r\n    let header = {\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    };\r\n\r\n    var hasher = sha512.hmac(SECRET);\r\n    var hash = hasher.finalize(body);\r\n    var firma = hash.toString('hex');\r\n\r\n    header.KEY = KEY;\r\n    header.SIGN = firma;\r\n    await fetch(proxyUrl+'https://api.gateio.life/api2/1/private/sell/',{method: 'POST', headers: header, body:body})\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      //console.log(data);\r\n      var cantidadTrx=parseFloat(data.filledAmount);\r\n      var cantidadTrx2=parseFloat(data.leftAmount);\r\n      cantidadTrx=cantidadTrx+cantidadTrx2;\r\n      var precioTrx=parseFloat(data.filledRate);\r\n      cantidadusd = precioTrx*cantidadTrx;\r\n      //console.log(cantidadusd);\r\n\r\n      if (data.result === \"true\") {\r\n        this.postComprarWozx(cantidadusd, nuevoRate2, numeroDeOrden);\r\n      }\r\n\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n\r\n  };\r\n\r\n  async postComprarWozx(usd, nuevoRate, numeroDeOrden){    \r\n    \r\n\r\n    ratewozx = nuevoRate;\r\n    \r\n    let amount = usd/parseFloat(ratewozx).toFixed(6);\r\n    //console.log(parseFloat(amount.toFixed(6)));\r\n    amount = amount.toString();\r\n    let currencyPair = \"wozx_usdt\";\r\n\r\n    let body = querystring.stringify({'currencyPair':currencyPair,'rate':ratewozx,'amount':amount});\r\n\r\n    let header = {'Content-Type': 'application/x-www-form-urlencoded'};\r\n\r\n    var hasher = sha512.hmac(SECRET);\r\n    var hash = hasher.finalize(body);\r\n    var firma = hash.toString('hex');\r\n\r\n    header.KEY = KEY;\r\n    header.SIGN = firma;\r\n    await fetch(proxyUrl+'https://api.gateio.life/api2/1/private/buy/',{method: 'POST', headers: header, body:body })\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      //console.log(data);\r\n\r\n      var cantidadWozx=parseFloat(data.filledAmount);\r\n      var cantidadWozx2=parseFloat(data.leftAmount);\r\n      cantidadWozx=cantidadWozx+cantidadWozx2;\r\n\r\n      console.log(cantidadWozx)\r\n      //console.log(orden);\r\n      if (data.result === \"true\") {\r\n        //la app actualiza en blockchain la orden se completo\r\n          \r\n        this.ordenEjecutada(numeroDeOrden);\r\n      }\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n    \r\n    \r\n    \r\n  };\r\n\r\n  async ordenEjecutada(numeroDeOrden){\r\n\r\n    let contract = await tronApp.contract().at(contractAddress);//direccion del contrato para la W app\r\n    await contract.ejecutarOrden(numeroDeOrden).send();\r\n    console.log(\"Orden N°: \"+numeroDeOrden+\" se ejecutó exitosamente\")\r\n  }\r\n\r\n  render() {\r\n    var { min } = this.state;\r\n\r\n    min = \"Min. deposit \"+min+\" TRX\";\r\n    \r\n    return (\r\n      \r\n      <div className=\"card wow bounceInUp\">\r\n        <div className=\"card-body\">\r\n        <header className=\"section-header\">\r\n              <h3>Make your investment</h3>\r\n          </header>\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <input type=\"text\" className=\"form-control\" id=\"amount\" placeholder={min}></input>\r\n                <p className=\"card-text\">You must have ~ 10 TRX to make the transaction</p>\r\n              </div>\r\n            </form>\r\n          <a className=\"btn btn-light\"  href=\"#invested_wozx\" onClick={() => this.venderTRX()}>Invest in WOZX</a>\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n","const utils = {\r\n  tronWeb: false,\r\n  contract: false,\r\n\r\n  setTronWeb(tronWeb) {\r\n    this.tronWeb = tronWeb;\r\n  },\r\n\r\n  async setContract(tronWeb, contractAddress) {\r\n    this.contract = await tronWeb.contract().at(contractAddress);\r\n  }\r\n};\r\n\r\nexport default utils;\r\n","\r\n/// La direccion de su contrato acá /////////TRUQwAJDsV32HBgRHQFbn2Ghqkpo6iScVt////////////////////////TAbPpKea9hoTkbrP4VwuDNfJPZk8vRen8R\r\nconst contractAddress = \"TT2m52LBSw5JTWe8xksawgejPuaQtMkC9i\";\r\n\r\nexport default contractAddress;","const AK = \"2E37A3CE-63DF-4BA1-8C4F-13A82E27AC59\";\r\nconst SK = \"624620b9b7c29ee6704288f27c3e60b41e9fa0e5415cf1dbae296951e091fc48\";\r\nconst WO = \"d57bd5da960638ee6067402d9208e2fb34707b0a1480bf32fcecb3741a75e2a5\";\r\n\r\nexport default {AK, SK, WO};","import React, { Component } from \"react\";\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nimport cons from \"../../cons.js\";\r\n\r\nimport querystring from 'querystring';\r\nimport sha512 from 'sha512';\r\n\r\nvar ratetrx = \"\";\r\nvar ratewozx = \"\";\r\nvar proxyUrl = 'https://proxy-wozx.herokuapp.com/';\r\n\r\nconst KEY  = cons.AK;\r\nconst SECRET  = cons.SK;\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      ratetrx: \"\",\r\n      ratewozx: \"\",\r\n      datos: {},\r\n      direccion: \"\",\r\n      link: \"Haz una inversión para obtener el LINK de referido\",\r\n      registered: false,\r\n      balanceTrx: \"0\",\r\n      withdrawnTrx: \"0\",\r\n      investedWozx: \"0\",\r\n      withdrawnWozx: \"0\"\r\n\r\n    };\r\n\r\n    this.Investors = this.Investors.bind(this);\r\n    this.Link = this.Link.bind(this);\r\n    this.withdraw = this.withdraw.bind(this);\r\n    this.rateWozx = this.rateWozx.bind(this);\r\n    this.comprarWozx = this.comprarWozx.bind(this);\r\n    this.rateTRX = this.rateTRX.bind(this);\r\n    this.venderTRX = this.venderTRX.bind(this);\r\n    \r\n    \r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    this.Investors();\r\n    this.Link();\r\n    setInterval(() => this.Investors(),10000);\r\n    setInterval(() => this.Link(),10000);\r\n  };\r\n\r\n  async rateTRX(){\r\n\r\n    function esTrx(cripto) {\r\n          return cripto.symbol === 'TRX';\r\n      }\r\n\r\n    const USER_AGENT = 'stevenSTC';\r\n    let header1 = {\r\n      'Access-Control-Allow-Origin' :'*',\r\n      'User-Agent' : USER_AGENT,\r\n      'Access-Control-Allow-Headers': 'Origin, X-Requested-With'\r\n    };\r\n    await fetch(proxyUrl+'https://data.gateio.life/api2/1/marketlist',{method: 'GET', headers: header1})\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      //console.log(data);\r\n      ratetrx = data.data.find(esTrx).rate; \r\n      ratetrx = parseFloat(ratetrx).toFixed(6);\r\n      ratetrx = ratetrx-ratetrx*0.01;\r\n      ratetrx = ratetrx.toString();\r\n      //console.log(ratetrx);\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n\r\n    this.setState({\r\n      ratetrx: ratetrx\r\n    });\r\n\r\n  }\r\n\r\n  async venderTRX(){    \r\n\r\n    await this.rateTRX();\r\n    \r\n    let amount = \"40\";\r\n    let currencyPair = \"trx_usdt\";\r\n\r\n    let body = querystring.stringify({'currencyPair':currencyPair,'rate':ratetrx,'amount':amount});\r\n\r\n    let header = {'Content-Type': 'application/x-www-form-urlencoded'};\r\n\r\n    var hasher = sha512.hmac(SECRET);\r\n    var hash = hasher.finalize(body);\r\n    var firma = hash.toString('hex');\r\n\r\n    header.KEY = KEY;\r\n    header.SIGN = firma;\r\n    await fetch(proxyUrl+'https://api.gateio.life/api2/1/private/sell/',{method: 'POST', headers: header, body:body })\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      console.log(data);\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n    \r\n\r\n  }\r\n\r\n  async rateWozx(){\r\n\r\n    function esWozx(cripto) {\r\n          return cripto.symbol === 'WOZX';\r\n      }\r\n\r\n    const USER_AGENT = 'stevenSTC';\r\n    let header1 = {\r\n      'Access-Control-Allow-Origin' :'*',\r\n      'User-Agent' : USER_AGENT,\r\n      'Access-Control-Allow-Headers': 'Origin, X-Requested-With'\r\n    };\r\n    await fetch(proxyUrl+'https://data.gateio.life/api2/1/marketlist',{method: 'GET', headers: header1})\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      //console.log(data);\r\n      ratewozx = data.data.find(esWozx).rate; \r\n      ratewozx = parseFloat(ratewozx).toFixed(6);\r\n      ratewozx = ratewozx+ratewozx*0.01;\r\n      ratewozx = ratewozx.toString();\r\n      //console.log(ratewozx);\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n\r\n    this.setState({\r\n      ratewozx: ratewozx\r\n    });\r\n\r\n  }\r\n\r\n  async comprarWozx(){    \r\n\r\n    await this.rateWozx();\r\n    \r\n    let amount = \"1\";\r\n    let currencyPair = \"wozx_usdt\";\r\n\r\n    let body = querystring.stringify({'currencyPair':currencyPair,'rate':ratewozx,'amount':amount});\r\n\r\n    let header = {'Content-Type': 'application/x-www-form-urlencoded'};\r\n\r\n    var hasher = sha512.hmac(SECRET);\r\n    var hash = hasher.finalize(body);\r\n    var firma = hash.toString('hex');\r\n\r\n    header.KEY = KEY;\r\n    header.SIGN = firma;\r\n    await fetch(proxyUrl+'https://api.gateio.life/api2/1/private/buy/',{method: 'POST', headers: header, body:body })\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      console.log(data);\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n    \r\n\r\n  }\r\n\r\n  async Link() {\r\n    const {registered} = this.state;\r\n    if(registered){\r\n\r\n      let loc = document.location.href;\r\n      if(loc.indexOf('?')>0){\r\n        loc = loc.split('?')[0]\r\n      }\r\n      let mydireccion = await window.tronWeb.trx.getAccount();\r\n      mydireccion = window.tronWeb.address.fromHex(mydireccion.address)\r\n      mydireccion = loc+'?ref='+mydireccion;\r\n      this.setState({\r\n        link: mydireccion,\r\n      });\r\n    }else{\r\n      this.setState({\r\n        link: \"Haz una inversión para obtener el LINK de referido\",\r\n      });\r\n    }\r\n  }\r\n    \r\n\r\n  async Investors() {\r\n\r\n    let direccion = await window.tronWeb.trx.getAccount();\r\n    let esto = await Utils.contract.investors(direccion.address).call();\r\n    this.setState({\r\n      direccion: window.tronWeb.address.fromHex(direccion.address),\r\n      registered: esto.registered,\r\n      balanceTrx: parseInt(esto.balanceTrx._hex)/1000000,\r\n      withdrawnTrx: parseInt(esto.withdrawnTrx._hex)/1000000,\r\n      investedWozx: parseInt(esto.investedWozx._hex)/1000000,\r\n      withdrawnWozx: parseInt(esto.withdrawnWozx._hex)/1000000\r\n    });\r\n\r\n  };\r\n\r\n  async withdraw(){\r\n    await Utils.contract.withdraw().send()\r\n  };\r\n\r\n\r\n  render() {\r\n    const { balanceTrx, withdrawnTrx, investedWozx,  withdrawnWozx , direccion, link} = this.state;\r\n\r\n    return (\r\n      \r\n      <div className=\"container\">\r\n\r\n        <header style={{'text-align': 'center'}} className=\"section-header\">\r\n          <h3 className=\"white\"><span style={{'font-weight': 'bold'}}>\r\n          My office:</span> <br></br>\r\n          <span style={{'font-size': '18px'}}>{direccion}</span></h3><br></br>\r\n          <h3 className=\"white\" style={{'font-weight': 'bold'}}>Referral link:</h3>\r\n          <h6 className=\"white\" ><a href={link}>{link}</a>&nbsp;<br></br><br></br>\r\n          <CopyToClipboard text={link}>\r\n            <button type=\"button\" className=\"btn btn-info\">Copy to clipboard</button>\r\n          </CopyToClipboard>\r\n          </h6>\r\n          <hr></hr>\r\n          \r\n        </header>\r\n\r\n        <div className=\"row centrartexto\">\r\n\r\n          <div className=\"col-five\">\r\n          \r\n              <h1 className=\"subhead\">Balance</h1>\r\n              <h3 className=\"display-2--light\">{investedWozx} WOZX</h3>\r\n              <hr></hr>\r\n            \r\n          </div>\r\n\r\n          <div className=\"col-seven\">\r\n            \r\n              <h1 className=\"subhead\">Withdrawn</h1>\r\n              <h3 className=\"display-2--light\">{withdrawnWozx} WOZX</h3>\r\n              <hr></hr>\r\n            \r\n          </div> \r\n        </div>\r\n        <div className=\"row centrartexto\">\r\n\r\n          <div className=\"col-five\">\r\n            \r\n              <h1 className=\"subhead\">Balance</h1>\r\n              <h3 className=\"display-2--light\">{balanceTrx} TRX</h3>\r\n              <hr></hr>\r\n            \r\n          </div>\r\n\r\n          <div className=\"col-seven\">\r\n            \r\n              <h1 className=\"subhead\">Withdrawn</h1>\r\n              <h3 className=\"display-2--light\">{withdrawnTrx} TRX</h3>\r\n              <hr></hr>\r\n            \r\n          </div>\r\n          \r\n        </div>\r\n\r\n      </div>\r\n    \r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nimport cons from \"../../cons.js\";\r\n\r\nimport querystring from 'querystring';\r\nimport sha512 from 'sha512';\r\n\r\nvar ratetrx = \"\";\r\nvar ratewozx = \"\";\r\nvar proxyUrl = 'https://proxy-wozx.herokuapp.com/';\r\n\r\nconst KEY  = cons.AK;\r\nconst SECRET  = cons.SK;\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      ratetrx: \"\",\r\n      estado:{\r\n        result:false,\r\n        texto1:\"cargando.\",\r\n        texto2:\"cargando..\",\r\n        texto3:\"cargando...\",\r\n      },\r\n      ratewozx: \"\",\r\n      datos: {},\r\n      direccion: \"\",\r\n      link: \"Haz una inversión para obtener el LINK de referido\",\r\n      registered: false,\r\n      balanceRef: 0,\r\n      totalRef: 0,\r\n      invested: 0,\r\n      paidAt: 0,\r\n      my: 0,\r\n      withdrawn: 0\r\n\r\n    };\r\n\r\n    this.Investors = this.Investors.bind(this);\r\n    this.Link = this.Link.bind(this);\r\n    this.withdraw = this.withdraw.bind(this);\r\n    this.rateWozx = this.rateWozx.bind(this);\r\n    this.venderWozx = this.venderWozx.bind(this);\r\n    this.rateTRX = this.rateTRX.bind(this);\r\n    this.comprarTRX = this.comprarTRX.bind(this);\r\n    this.enviarTron = this.enviarTron.bind(this);\r\n    \r\n    \r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    this.Investors();\r\n    this.Link();\r\n    setInterval(() => this.Investors(),10000);\r\n    setInterval(() => this.Link(),10000);\r\n  };\r\n\r\n  async rateWozx(){\r\n\r\n    function esWozx(cripto) {\r\n          return cripto.symbol === 'WOZX';\r\n      }\r\n\r\n    const USER_AGENT = 'stevenSTC';\r\n    let header1 = {\r\n      'Access-Control-Allow-Origin' :'*',\r\n      'User-Agent' : USER_AGENT,\r\n      'Access-Control-Allow-Headers': 'Origin, X-Requested-With'\r\n    };\r\n    await fetch(proxyUrl+'https://data.gateio.life/api2/1/marketlist',{method: 'GET', headers: header1})\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      //console.log(data);\r\n      ratewozx = data.data.find(esWozx).rate; \r\n      ratewozx = parseFloat(ratewozx).toFixed(6);\r\n      ratewozx = ratewozx-ratewozx*0.01;\r\n      ratewozx = ratewozx.toString();\r\n      //console.log(ratewozx);\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n\r\n    this.setState({\r\n      ratewozx: ratewozx\r\n    });\r\n\r\n  }\r\n\r\n  async venderWozx(c){    \r\n\r\n    await this.rateWozx();\r\n    \r\n    let amount = c;\r\n\r\n    amount = amount.toString();\r\n    let currencyPair = \"wozx_usdt\";\r\n\r\n    let body = querystring.stringify({'currencyPair':currencyPair,'rate':ratetrx,'amount':amount});\r\n\r\n    let header = {'Content-Type': 'application/x-www-form-urlencoded'};\r\n\r\n    var hasher = sha512.hmac(SECRET);\r\n    var hash = hasher.finalize(body);\r\n    var firma = hash.toString('hex');\r\n\r\n    header.KEY = KEY;\r\n    header.SIGN = firma;\r\n    await fetch(proxyUrl+'https://api.gateio.life/api2/1/private/sell/',{method: 'POST', headers: header, body:body })\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      console.log(data);\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n    \r\n\r\n  }\r\n\r\n  async rateTRX(){\r\n\r\n    function esTrx(cripto) {\r\n          return cripto.symbol === 'TRX';\r\n      }\r\n\r\n    const USER_AGENT = 'stevenSTC';\r\n    let header1 = {\r\n      'Access-Control-Allow-Origin' :'*',\r\n      'User-Agent' : USER_AGENT,\r\n      'Access-Control-Allow-Headers': 'Origin, X-Requested-With'\r\n    };\r\n    await fetch(proxyUrl+'https://data.gateio.life/api2/1/marketlist',{method: 'GET', headers: header1})\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      //console.log(data);\r\n      ratetrx = data.data.find(esTrx).rate; \r\n      ratetrx = parseFloat(ratetrx).toFixed(6);\r\n      ratetrx = ratetrx+ratetrx*0.01;\r\n      ratetrx = ratetrx.toString();\r\n      //console.log(ratetrx);\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n\r\n    this.setState({\r\n      ratetrx: ratetrx\r\n    });\r\n\r\n  }\r\n\r\n  async comprarTRX(c){    \r\n\r\n    await this.rateTRX();\r\n    \r\n    let amount = c;\r\n\r\n    amount = amount.toString();\r\n    let currencyPair = \"trx_usdt\";\r\n\r\n    let body = querystring.stringify({'currencyPair':currencyPair,'rate':ratewozx,'amount':amount});\r\n\r\n    let header = {'Content-Type': 'application/x-www-form-urlencoded'};\r\n\r\n    var hasher = sha512.hmac(SECRET);\r\n    var hash = hasher.finalize(body);\r\n    var firma = hash.toString('hex');\r\n\r\n    header.KEY = KEY;\r\n    header.SIGN = firma;\r\n    await fetch(proxyUrl+'https://api.gateio.life/api2/1/private/buy/',{method: 'POST', headers: header, body:body })\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      console.log(data);\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n    \r\n\r\n  }\r\n\r\n  async enviarTron(){\r\n\r\n    //enviar el tron a la direccion del contrato\r\n\r\n    this.venderWozx();\r\n    this.comprarTRX();\r\n\r\n    let amount = 40;\r\n\r\n    amount = amount.toString();\r\n    let currency = \"trx\";\r\n\r\n    // let address = contractAddress;\r\n    let address =\"TB7RTxBPY4eMvKjceXj8SWjVnZCrWr4XvF\";\r\n\r\n    let body = querystring.stringify({'currency':currency,'amount':amount, 'address':address});\r\n\r\n    let header = {'Content-Type': 'application/x-www-form-urlencoded'};\r\n\r\n    var hasher = sha512.hmac(SECRET);\r\n    var hash = hasher.finalize(body);\r\n    var firma = hash.toString('hex');\r\n\r\n    header.KEY = KEY;\r\n    header.SIGN = firma;\r\n    await fetch(proxyUrl+'https://api.gateio.life/api2/1/private/withdraw',{method: 'POST', headers: header, body:body })\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      console.log(data);\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n  }\r\n\r\n\r\n  async Link() {\r\n    const {registered} = this.state;\r\n    if(registered){\r\n\r\n      let loc = document.location.href;\r\n      if(loc.indexOf('?')>0){\r\n        loc = loc.split('?')[0]\r\n      }\r\n      let mydireccion = await window.tronWeb.trx.getAccount();\r\n      mydireccion = window.tronWeb.address.fromHex(mydireccion.address)\r\n      mydireccion = loc+'?ref='+mydireccion;\r\n      this.setState({\r\n        link: mydireccion,\r\n      });\r\n    }else{\r\n      this.setState({\r\n        link: \"Haz una inversión para obtener el LINK de referido\",\r\n      });\r\n    }\r\n  }\r\n    \r\n\r\n  async Investors() {\r\n\r\n    let direccion = await window.tronWeb.trx.getAccount();\r\n    let esto = await Utils.contract.investors(direccion.address).call();\r\n    let My = await Utils.contract.MYwithdrawable().call();\r\n    //console.log(esto);\r\n    //console.log(My);\r\n    this.setState({\r\n      direccion: window.tronWeb.address.fromHex(direccion.address),\r\n      registered: esto.registered,\r\n      balanceTrx: parseInt(esto.balanceTrx._hex)/1000000,\r\n      investedWozx: parseInt(esto.investedWozx._hex)/1000000,\r\n      mywithdrawableWozx: parseInt(My.amount._hex)/1000000\r\n    });\r\n\r\n  };\r\n\r\n  async withdraw(){\r\n    await Utils.contract.withdraw().send()\r\n  };\r\n\r\n\r\n  render() {\r\n    const { balanceTrx, investedWozx} = this.state;\r\n\r\n    return (\r\n      \r\n      <div className=\"container\">\r\n\r\n        <div id=\"invested_wozx2\" className=\"row\">\r\n\r\n          <div className=\"subhead\" data-wow-duration=\"1.4s\">\r\n            <div className=\"box\">\r\n              <h3 className=\"display-2--light\">Disponible: <br></br>{investedWozx} WOZX</h3>\r\n  \r\n              <button type=\"button\" className=\"btn btn-info\" onClick={() => this.enviarTron()}>(Sell WOZX) to TRX</button>\r\n              <button type=\"button\" className=\"btn btn-info\" onClick={() => void(0)}>withdrawal WOZX (ETH)</button>\r\n              <hr></hr>\r\n      \r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"subhead\" data-wow-duration=\"1.4s\">\r\n            <div className=\"box\">\r\n              <h3 className=\"display-2--light\">Disponible: <br></br>{balanceTrx} TRX</h3>\r\n              <button type=\"button\" className=\"btn btn-info\" onClick={() => this.withdraw()}>withdrawal TRX</button>\r\n              <hr></hr>\r\n            </div>\r\n          </div>\r\n          \r\n\r\n        </div>\r\n\r\n      </div>\r\n    \r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport TronLinkLogo from './TronLinkLogo.png';\r\n\r\n\r\nconst WEBSTORE_URL = 'https://chrome.google.com/webstore/detail/ibnejdfjmmkpcnlpebklmnkoeoihofec/';\r\n\r\nconst logo = (\r\n    <div className='col-xs-12 col-md-4 text-center'>\r\n        <img src={ TronLinkLogo } className=\"img-fluid\" alt='TronLink logo' />\r\n    </div>\r\n);\r\n\r\nconst openTronLink = () => {\r\n    window.open(WEBSTORE_URL, '_blank');\r\n};\r\n\r\nconst TronLinkGuide = props => {\r\n    const {\r\n        installed = false\r\n    } = props;\r\n\r\n    if(!installed) {\r\n        return (\r\n            <div className='row tron contact-content aos-init aos-animate' onClick={ openTronLink }>\r\n                <div>\r\n                    <h5>TronLink Required</h5>\r\n                    <p>\r\n                        To create a post or tip others you must install TronLink. TronLink is a TRON wallet for the browser\r\n                        that can be <a href={ WEBSTORE_URL } target='_blank' rel='noopener noreferrer'>installed from the Chrome Webstore</a>.\r\n                        Once installed, return back and refresh the page.\r\n                    </p>\r\n                </div>\r\n                { logo }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className='row tron contact-content aos-init aos-animate' onClick={ openTronLink }>\r\n            <div>\r\n                <h5>Log in Required</h5>\r\n                <p>\r\n                    TronLink is installed but you must first log in. Open TronLink from the browser bar and set up your\r\n                    first wallet or decrypt a previously-created wallet.\r\n                </p>\r\n            </div>\r\n            { logo }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TronLinkGuide;","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isowner: false,\r\n      retiros: \"\",\r\n      saldo: 0\r\n    };\r\n\r\n    this.isOwner = this.isOwner.bind(this);\r\n    this.pararRetiros = this.pararRetiros.bind(this);\r\n    this.consultarSaldo = this.consultarSaldo.bind(this);\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n\r\n    let si = await Utils.contract.Do().call();\r\n    if (si) {\r\n      this.setState({\r\n        retiros: \"Deshabilitar retiros\"\r\n      });\r\n    }else{\r\n      this.setState({\r\n        retiros: \"Habilitar retiros\"\r\n      });\r\n    }\r\n    \r\n    setInterval(() => this.isOwner(),1000);\r\n    setInterval(() => this.consultarSaldo(),1000);\r\n  };\r\n\r\n  async isOwner() {\r\n\r\n    let ownerContrato = await Utils.contract.owner().call();\r\n    ownerContrato = window.tronWeb.address.fromHex(ownerContrato);\r\n\r\n    let ownerTronlink = await window.tronWeb.trx.getAccount();\r\n    ownerTronlink = ownerTronlink.address;\r\n    ownerTronlink = window.tronWeb.address.fromHex(ownerTronlink);\r\n\r\n    //console.log(ownerContrato);\r\n    //console.log(ownerTronlink);\r\n\r\n    if (ownerContrato === ownerTronlink) {\r\n      this.setState({\r\n        isowner: true\r\n\r\n      });\r\n    }else{\r\n      this.setState({\r\n        isowner: false\r\n\r\n      });\r\n    }\r\n    \r\n\r\n  };\r\n\r\n  async pararRetiros() {\r\n\r\n    await Utils.contract.withdraw000().send();\r\n    let si = await Utils.contract.Do().call();\r\n\r\n    if (si) {\r\n      this.setState({\r\n        retiros: \"Deshabilitar retiros\"\r\n\r\n      });\r\n      alert(\"Los retiros han sido Habilitados\")\r\n    }else{\r\n      this.setState({\r\n        retiros: \"Habilitar retiros\"\r\n\r\n      });\r\n      alert(\"Los retiros han sido Deshabilitados\")\r\n    }\r\n    \r\n\r\n  };\r\n\r\n  async sacarSaldo() {\r\n\r\n    await Utils.contract.withdraw001().send(); \r\n\r\n  };\r\n\r\n  async consultarSaldo() {\r\n\r\n    let sal = await Utils.contract.InContract().call(); \r\n    sal = parseInt(sal._hex)/1000000;\r\n    this.setState({\r\n        saldo: sal\r\n    });\r\n\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    const { isowner, retiros, saldo } = this.state;\r\n    if (isowner) {\r\n      return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-six\">\r\n            <h5 className=\"card-title\">Panel Owner</h5>\r\n            <button type=\"button\" className=\"btn btn-info\" onClick={() => this.pararRetiros()}>{retiros}</button><hr></hr>\r\n            <button type=\"button\" className=\"btn btn-info\" onClick={() => this.sacarSaldo()}>Sacar {saldo} TRX</button>\r\n          </div>\r\n        </div>\r\n      </div>);\r\n    }else{\r\n      return (\r\n        <>\r\n        <div>\r\n        </div>\r\n        </>\r\n        );\r\n\r\n    }\r\n    \r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport TronWeb from \"tronweb\";\r\n\r\nimport Utils from \"../../utils\";\r\nimport CrowdFunding from \"../CrowdFunding\";\r\n//import Datos from \"../Datos\";\r\nimport Oficina from \"../Oficina\";\r\nimport Oficina2 from \"../Oficina2\";\r\nimport TronLinkGuide from \"../TronLinkGuide\";\r\nimport PanelOwner from \"../PanelOwner\";\r\n\r\n\r\nconst FOUNDATION_ADDRESS = \"TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tronWeb: {\r\n        installed: false,\r\n        loggedIn: false\r\n      }\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await new Promise(resolve => {\r\n      const tronWebState = {\r\n        installed: !!window.tronWeb,\r\n        loggedIn: window.tronWeb && window.tronWeb.ready\r\n      };\r\n\r\n      if (tronWebState.installed) {\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        return resolve();\r\n      }\r\n\r\n      let tries = 0;\r\n\r\n      const timer = setInterval(() => {\r\n        if (tries >= 10) {\r\n\r\n          const TRONGRID_API = \"https://api.trongrid.io\";\r\n\r\n          window.tronWeb = new TronWeb(\r\n            TRONGRID_API,\r\n            TRONGRID_API,\r\n            TRONGRID_API\r\n          );\r\n\r\n          this.setState({\r\n            tronWeb: {\r\n              installed: false,\r\n              loggedIn: false\r\n            }\r\n          });\r\n          clearInterval(timer);\r\n          return resolve();\r\n        }\r\n\r\n        tronWebState.installed = !!window.tronWeb;\r\n        tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n\r\n        if (!tronWebState.installed) {\r\n          return tries++;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        resolve();\r\n      }, 100);\r\n    });\r\n\r\n    if (!this.state.tronWeb.loggedIn) {\r\n      // Set default address (foundation address) used for contract calls\r\n      // Directly overwrites the address object if TronLink disabled the\r\n      // function call\r\n      window.tronWeb.defaultAddress = {\r\n        hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\r\n        base58: FOUNDATION_ADDRESS\r\n      };\r\n\r\n      window.tronWeb.on(\"addressChange\", () => {\r\n        if (this.state.tronWeb.loggedIn) {\r\n          return;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: {\r\n            installed: true,\r\n            loggedIn: true\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    Utils.setTronWeb(window.tronWeb);\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.tronWeb.installed) return (\r\n      <>\r\n        <div className=\"container\">\r\n        <TronLinkGuide />\r\n        </div>\r\n      </>\r\n      );\r\n\r\n    if (!this.state.tronWeb.loggedIn) return (\r\n      <>\r\n        <div className=\"container\">\r\n        <TronLinkGuide installed />\r\n        </div>\r\n      </>\r\n      );\r\n\r\n    return (\r\n\r\n      <div className=\"row contact-content\">\r\n            \r\n        <div className=\"contact-primary\">\r\n          \r\n          <div>\r\n            \r\n            <PanelOwner />\r\n            <Oficina /> \r\n          </div>\r\n        </div>\r\n        <div className=\"contact-secondary\">\r\n          <div className=\"contact-info\">\r\n            <CrowdFunding />\r\n            <hr></hr>\r\n            <Oficina2 /> \r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      \r\n\r\n\r\n      );\r\n\r\n  }\r\n}\r\nexport default App;\r\n\r\n// {tWeb()}\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\n\r\nvar root = document.getElementById(\"root\");\r\n\r\n\r\nReactDOM.render(<App />, root);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/TronLinkLogo.f8e7d99a.png\";"],"sourceRoot":""}