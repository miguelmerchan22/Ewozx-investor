{"version":3,"sources":["components/TronLinkGuide/TronLinkLogo.png","utils/index.js","cons.js","components/Contract/index.js","components/CrowdFunding/index.js","components/Historial/index.js","components/Oficina/index.js","components/Oficina2/index.js","components/TronLinkGuide/index.js","components/PanelOwner/index.js","components/App/index.js","index.js"],"names":["module","exports","utils","tronWeb","contract","setTronWeb","this","setContract","contractAddress","at","cons","delay","ms","Promise","res","setTimeout","exchange","ccxt","bithumb","nonce","milliseconds","proxy","apiKey","secret","amountTrx","ratetrx","ratewozx","tantoTrx","tantoWozx","minimo_usd","rango_minimo","walletSponsor","pry","pru","TRONGRID_API","console","log","tronApp","TronWeb2","WozxInvestor","Component","constructor","props","super","state","direccionTRX","informacionCuenta","usdtrx","min","texto","tronEnApp","priceUSDTRON","deposit","bind","rateWozx","comprarWozx","rateTRX","venderTRX","postComprarWozx","postVenderTRX","reatizarTodoPost","ordenEjecutada","minDepo","rateT","saldoApp","consultarTodosUsuarios","registrarUsuario","consultarUsuario","actualizarUsuario","actualizarDireccion","consultarTransaccion","componentDidMount","Utils","window","setInterval","document","getElementById","innerHTML","trx","getAccount","account","address","fromHex","setState","id","proxyUrl","apiUrl","fetch","catch","error","response","json","result","market_data","current_price","usd","otro","datos","token","method","headers","body","JSON","stringify","mini","parseInt","MIN_DEPOSIT","call","mindepo","_hex","nuevoMinDeposit","send","registered","value","txID","transfers02","fetchBalance","cositas","balance","free","parseFloat","loadMarkets","precio","closing_price","toFixed","depomin","getBalance","walletApp","fromSun","balanceInSun","balanceInTRX","alert","confirm","sponsor","loc","location","href","indexOf","getString","split","GET","get","i","l","length","tmp","unescape","decodeURI","amount","miRegistro","callValue","t","reload","krw","createLimitBuyOrder","orden","info","status","params","fetchOrder","monto","depositoTron","balanceTrx","historial","push","tiempo","Date","now","valor","moneda","accion","sendTransaction","render","className","type","placeholder","style","onClick","verHistorial","direccion","usuario","splice","o","ver","evento","key","toString","fontSize","title","width","height","overflow","rango","ganancia","refe","link","withdrawnTrx","investedWozx","withdrawnWozx","wozxPe","wozxCa","miPrecioWozx","priceUSDWOZX","Investors","enviarWozx","Link","Wozx","rateW","then","data","err","mydireccion","range","prof","nivel","cantidad","accountAddress","isAddress","informacionDestino","text","aria-describedby","cursor","descuento","pago","tipo","auth","texto3","texto4","fee","feetrx","funcion","alerta","balanceRef","totalRef","invested","paidAt","my","withdrawn","withdraw","venderWozx","comprarTRX","enviarTron","vereth","reset","withdrawETH","enviarEth","Tron","total","amountTrxsindescuento","investors","COMISION_TRON","COMISION_RETIRO","tronDisponible","createLimitSellOrder","cost","orden2","params2","aumentar","recompensa","contractApp","retirarTron","depositoWozx","informacionSponsor","precioUsdTron","amountpararefer","depositoTronUsuario","depositpendiente","pending","cancelDepo","firmarTx","redeposit","transfers","transfers01","ope","retirarWozx","costo","cantidadusd","cantidadWozx","c","w","wozx","wallet","ownerContrato","undefined","currency","versacado","withdrawableWozx","My","mywithdrawableWozx","withdrawableTrx","hay","minre","InContract","balanceContract","balanceTrxYo","tag2","sacado","amountsinfee","ethereum","web3","escribireth","boton","cosa","eth","atuh","dirETH","walleteth","ethdireccion","texto2","dirwozx","rel","target","action","name","WEBSTORE_URL","logo","src","TronLinkLogo","alt","openTronLink","open","TronLinkGuide","installed","isowner","retiros","saldo","isOwner","pararRetiros","owner","ownerTronlink","sal","Do","stopWithdrawl","sacarSaldo","withdrawAll","App","loggedIn","resolve","tronWebState","ready","tries","timer","TronWeb","clearInterval","defaultAddress","hex","toHex","base58","on","root","ReactDOM"],"mappings":"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","file":"static/js/main.5abbb50d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/TronLinkLogo.f8e7d99a.png\";","const utils = {\r\n  tronWeb: false,\r\n  contract: false,\r\n\r\n  setTronWeb(tronWeb) {\r\n    this.tronWeb = tronWeb;\r\n  },\r\n\r\n  async setContract(tronWeb, contractAddress) {\r\n    this.contract = await tronWeb.contract().at(contractAddress);\r\n  }\r\n};\r\n\r\nexport default utils;\r\n","import {APP_AK, APP_SK, APP_WO, APP_MT} from \"@env\";\r\n\r\nconst AK = APP_AK;\r\nconst SK = APP_SK;\r\nconst WO = APP_WO;\r\nconst proxy = \"https://proxy-ewozx.herokuapp.com/\";\r\nconst mongo = \"https://ewozx-mdb.herokuapp.com/\";\r\nconst MT = APP_MT;\r\nconst PRU = \"shasta.\";// shasta1. para inhabilitar red de pruebas\r\nconst WS = \"TB7RTxBPY4eMvKjceXj8SWjVnZCrWr4XvF\";//T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb recibe los huerfanos por defecto\r\nconst descuento = 0.002;// 0.24 o 24% queda en la plataforma el restante se usa para comprar el 76% en wozx para los usuarios\r\nconst WOZX = 0.07; // para que el WOZX se Compre de inmediato\r\nconst TRX = 0.035; // para que el TRX se Venda de inmediato\r\nconst SC = \"TDTByuFjRCXHNHrH6TSbi7wxQJiS1g9jH5\";// direccion del contrato\r\nconst USD = 1; // minimo de inversion en dolares USD (100)\r\nconst SD = 0.1; // 10% de sensibilidad para modificar el precio minimo de inversion\r\nconst EX = \"TB7RTxBPY4eMvKjceXj8SWjVnZCrWr4XvF\"; //wallet de of exchange\r\n\r\nconst MA = 100; //cantidad minima de tron permitida en la wallet de la aplicación\r\n\r\nconst FEEW = 0.025; //fee de retiro del wozx por la platafora de ethereum\r\nconst FEET = 10; //fee de retiro del Tron por medio del contrato\r\n\r\nexport default {AK, SK, WO, proxy, PRU, WS, descuento, MA, WOZX, TRX, SC, USD, SD, EX, FEEW, FEET, mongo, MT};\r\n","\r\nimport cons from \"../../cons.js\";\r\n\r\nconst contractAddress = cons.SC;\r\n\r\nexport default contractAddress;","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport TronWeb2 from 'tronweb';\r\nimport ccxt from 'ccxt';\r\n\r\nimport contractAddress from \"../Contract\";\r\nimport cons from \"../../cons.js\";\r\n\r\nconst delay = ms => new Promise(res => setTimeout(res, ms));\r\n\r\nconst exchange = new ccxt.bithumb({\r\n    nonce () { return this.milliseconds () }\r\n});\r\n\r\nexchange.proxy = cons.proxy;\r\nexchange.apiKey = cons.AK;\r\nexchange.secret = cons.SK;\r\n\r\nvar amountTrx = 0;\r\nvar ratetrx = 0;\r\nvar ratewozx = 0;\r\nvar cantidadusd = 0;\r\n\r\nvar descuento = cons.descuento;\r\nvar tantoTrx = cons.TRX;\r\nvar tantoWozx = cons.WOZX;\r\nvar minimo_usd = cons.USD;\r\nvar rango_minimo = cons.SD;\r\nvar walletSponsor = cons.WS;\r\n\r\n//console.log(contractAddress);\r\n\r\nconst pry = cons.WO;\r\n\r\nvar pru = \"\";\r\nif (cons.PRU === \"shasta.\") {\r\n  pru = cons.PRU;\r\n\r\n}\r\n\r\nconst TRONGRID_API = \"https://api.\"+pru+\"trongrid.io\";\r\nconsole.log(TRONGRID_API);\r\n\r\nconst tronApp = new TronWeb2(\r\n  TRONGRID_API,\r\n  TRONGRID_API,\r\n  TRONGRID_API,\r\n  pry\r\n);\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      direccionTRX: \"\",\r\n      informacionCuenta: {},\r\n      amountTrx: \"\",\r\n      usdtrx: \"\",\r\n      min: 3000,\r\n      texto: \"Deposit TRX\",\r\n      tronEnApp: 0,\r\n      priceUSDTRON: 0\r\n\r\n    };\r\n\r\n    this.deposit = this.deposit.bind(this);\r\n    this.rateWozx = this.rateWozx.bind(this);\r\n    this.comprarWozx = this.comprarWozx.bind(this);\r\n    this.rateTRX = this.rateTRX.bind(this);\r\n    this.venderTRX = this.venderTRX.bind(this);\r\n    this.postComprarWozx = this.postComprarWozx.bind(this);\r\n    this.postVenderTRX = this.postVenderTRX.bind(this);\r\n    this.reatizarTodoPost = this.reatizarTodoPost.bind(this);\r\n    this.ordenEjecutada = this.ordenEjecutada.bind(this);\r\n    this.minDepo = this.minDepo.bind(this);\r\n    this.rateT = this.rateT.bind(this);\r\n    this.saldoApp = this.saldoApp.bind(this);\r\n\r\n    this.consultarTodosUsuarios = this.consultarTodosUsuarios.bind(this);\r\n    this.registrarUsuario = this.registrarUsuario.bind(this);\r\n    this.consultarUsuario = this.consultarUsuario.bind(this);\r\n    this.actualizarUsuario = this.actualizarUsuario.bind(this);\r\n\r\n    this.actualizarDireccion = this.actualizarDireccion.bind(this);\r\n    this.consultarTransaccion = this.consultarTransaccion.bind(this);\r\n\r\n\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    setInterval(() => this.reatizarTodoPost(),120*1000);\r\n    this.minDepo();\r\n    setInterval(() => this.minDepo(),30*1000);\r\n    setInterval(() => this.actualizarDireccion(),3*1000);\r\n    await this.actualizarDireccion();\r\n    var { direccionTRX } = this.state;\r\n    await this.consultarUsuario(direccionTRX,false);\r\n    setInterval(() => this.consultarUsuario(direccionTRX,false),3*1000);\r\n    this.reatizarTodoPost();\r\n\r\n  };\r\n\r\n  async actualizarDireccion() {\r\n\r\n    document.getElementById(\"linkContrato\").innerHTML = \"<a class='smoothscroll'   href='https://\"+pru+\"tronscan.org/#/contract/\"+contractAddress+\"/code' target='_blank' rel='noopener noreferrer'>Contract</a>\";\r\n\r\n    var account =  await window.tronWeb.trx.getAccount();\r\n    account = window.tronWeb.address.fromHex(account.address);\r\n\r\n    this.setState({\r\n      direccionTRX: account\r\n    });\r\n\r\n  };\r\n\r\n  async consultarTransaccion(id){\r\n\r\n    this.setState({\r\n      texto: \"Updating balance...\"\r\n    });\r\n    await delay(3000);\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'consultar/transaccion/'+id;\r\n    console.log(apiUrl);\r\n    const response = await fetch(proxyUrl+apiUrl)\r\n    .catch(error =>{console.error(error)});\r\n    const json = await response.json();\r\n    console.log(json);\r\n    return json.result;\r\n\r\n  };\r\n\r\n  async rateT(){\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = 'https://api.coingecko.com/api/v3/coins/tron';\r\n    const response = await fetch(proxyUrl+apiUrl)\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n    console.log(json.market_data.current_price.usd);\r\n    this.setState({\r\n      priceUSDTRON: json.market_data.current_price.usd\r\n    });\r\n    return json.market_data.current_price.usd;\r\n\r\n\r\n  };\r\n\r\n  async consultarTodosUsuarios(){\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'consultar/todos';\r\n    const response = await fetch(proxyUrl+apiUrl)\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n    console.log(json);\r\n\r\n    return json;\r\n\r\n  };\r\n\r\n  async consultarUsuario(direccionTRX, otro){\r\n\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'consultar/'+direccionTRX;\r\n    const response = await fetch(proxyUrl+apiUrl)\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n\r\n    if (!otro) {\r\n      this.setState({\r\n        informacionCuenta: json\r\n      });\r\n      return json;\r\n    }else{\r\n\r\n      console.log(json);\r\n      return json;\r\n    }\r\n\r\n  };\r\n\r\n  async actualizarUsuario( datos, otro ){\r\n    //Asegura que es el usuario conectado con tronlink\r\n    await this.actualizarDireccion();\r\n    var { direccionTRX } = this.state;\r\n    //encaso de recibir otro usiario se escoge el uasuario enviado para ser actualizado\r\n    if ( otro ) {\r\n      direccionTRX = otro;\r\n    }\r\n\r\n    datos.token = cons.MT;\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'actualizar/'+direccionTRX;\r\n    const response = await fetch(proxyUrl+apiUrl, {\r\n       method: 'POST',\r\n       headers: {\r\n        'Content-Type': 'application/json'\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n       body: JSON.stringify(datos)\r\n    })\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n\r\n    console.log(json);\r\n    return json;\r\n\r\n  };\r\n\r\n  async registrarUsuario(datos){\r\n    //Asegura que es el usuario conectado\r\n    var { direccionTRX } = this.state;\r\n    //console.log(direccionTRX);\r\n    datos.token = cons.MT;\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'registrar/'+direccionTRX;\r\n    const response = await fetch(proxyUrl+apiUrl, {\r\n       method: 'POST',\r\n       headers: {\r\n        'Content-Type': 'application/json'\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n       body: JSON.stringify(datos)\r\n    })\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n\r\n    console.log(json);\r\n    return true;\r\n\r\n\r\n  };\r\n\r\n  async minDepo(){\r\n\r\n    var priceUSDTRON = await this.rateT();\r\n\r\n    var mini = parseInt(minimo_usd/priceUSDTRON);\r\n\r\n    var mindepo = await Utils.contract.MIN_DEPOSIT().call();\r\n    mindepo = parseInt(mindepo._hex)/1000000;\r\n\r\n    if ( mini > 0 && mindepo !== mini && ( ( mindepo >= mini+mini*rango_minimo) || ( mindepo <= mini-mini*rango_minimo) ) ) {\r\n\r\n      let contract = await tronApp.contract().at(contractAddress);//direccion del contrato para la W app\r\n      await contract.nuevoMinDeposit( mini * 1000000 ).send();\r\n      this.setState({\r\n        min: mini+1,\r\n\r\n      });\r\n      console.log(\"EVENTO: Nuevo minimo de deposito \"+mini+\" TRX // anterior \"+mindepo+\" TRX\");\r\n\r\n    }else{\r\n      this.setState({\r\n        min: mindepo+1,\r\n      });\r\n      console.log(\"INFO: Minimo de deposito \"+mini+\" TRX // aplicación \"+mindepo+\" TRX\");\r\n    }\r\n\r\n    await this.actualizarDireccion();// asegura que es la wallet conectada con el tronlik\r\n    var { direccionTRX } = this.state;\r\n    await this.consultarUsuario(direccionTRX,false);\r\n    var { informacionCuenta } = this.state;\r\n\r\n    if (!informacionCuenta.registered) {\r\n      document.getElementById(\"amount\").value = \"\";\r\n      this.setState({\r\n        texto:\"Click to register\"\r\n      });\r\n    }else{\r\n      this.setState({\r\n        texto:\"Deposit TRX\"\r\n      });\r\n    }\r\n    const contract = await tronApp.contract().at(contractAddress);\r\n    var transPe = 0;\r\n    //console.log(transPe.valor_hex)\r\n    if (transPe > 0) {\r\n      await contract.transfers().send();\r\n\r\n    }\r\n\r\n    var cantidadEnvio = 0;\r\n    //console.log(cantidadEnvio);\r\n\r\n    //console.log(cantidadEnvio);\r\n    if (cantidadEnvio > 0) {\r\n      var abono = 1-cons.descuento;\r\n      var txID = await tronApp.trx.sendTransaction(cons.EX, cantidadEnvio*abono);\r\n      await contract.transfers02(txID.result).send();\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n  };\r\n\r\n  async saldoApp(){\r\n\r\n    var cositas = await exchange.fetchBalance();\r\n\r\n    cositas = cositas['TRX'];\r\n\r\n    var balance = cositas;\r\n    //console.log(balance);\r\n    balance = balance.free;\r\n\r\n    balance = parseFloat(balance);\r\n    //console.log(balance);\r\n\r\n\r\n    this.setState({\r\n      tronEnApp: balance\r\n    });\r\n\r\n\r\n  };\r\n\r\n  async rateTRX(){\r\n\r\n    var cositas = await exchange.loadMarkets();\r\n\r\n    cositas = cositas['TRX/KRW'];\r\n\r\n    var precio = cositas['info'];\r\n    precio = precio.closing_price;\r\n\r\n    precio = parseFloat(precio);\r\n    console.log(precio); //precio en KRW\r\n\r\n\r\n    ratetrx = precio-precio*tantoTrx;\r\n    ratetrx = parseFloat(ratetrx.toFixed(2));\r\n\r\n    console.log(ratetrx);\r\n\r\n\r\n\r\n  };\r\n\r\n  async venderTRX(){\r\n\r\n    await this.saldoApp();\r\n    await this.rateTRX();\r\n\r\n    this.setState({\r\n      texto:\"Please wait\"\r\n    });\r\n\r\n    // verifica el monto sea mayor a minimo\r\n    amountTrx = document.getElementById(\"amount\").value;\r\n\r\n    var result = false;\r\n    var depomin = await Utils.contract.MIN_DEPOSIT().call();\r\n    depomin = parseInt(depomin._hex)/1000000;\r\n\r\n    // mira que el saldo de la wallet app sea por lo menos 1000 TRX\r\n    var walletApp = await tronApp.trx.getBalance();\r\n    walletApp = window.tronWeb.fromSun(walletApp); //string\r\n    walletApp = parseInt(walletApp);//number\r\n\r\n    // verifica si ya esta registrado\r\n    await this.actualizarDireccion();// asegura que es la wallet conectada con el tronlik\r\n    var { direccionTRX } = this.state;\r\n    await this.consultarUsuario(direccionTRX,false);\r\n    var { informacionCuenta } = this.state;\r\n\r\n    const balanceInSun = await window.tronWeb.trx.getBalance(); //number\r\n    var balanceInTRX = window.tronWeb.fromSun(balanceInSun); //string\r\n    balanceInTRX = parseInt(balanceInTRX);//number\r\n\r\n    if (walletApp > cons.MA){\r\n\r\n      if (informacionCuenta.registered) {\r\n\r\n        if (amountTrx <= 0 || amountTrx > balanceInTRX-50) {\r\n\r\n          if ( amountTrx <= 0 ) {\r\n            window.alert(\"Please enter a correct amount\");\r\n          }\r\n\r\n          if (amountTrx > balanceInTRX-50) {\r\n            window.alert(\"You not enough TRON\");\r\n          }\r\n\r\n          document.getElementById(\"amount\").value = \"\";\r\n          this.setState({\r\n            texto:\"Deposit TRX\"\r\n          });\r\n\r\n        }else{\r\n\r\n          result = window.confirm(\"You are sure that you want to invest \"+amountTrx+\" TRX?, remember that this action have cost\");\r\n\r\n        }\r\n\r\n        if (result) {\r\n\r\n          if (amountTrx >= depomin && amountTrx <= balanceInTRX-50) {\r\n            this.deposit();\r\n          }\r\n\r\n        }else{\r\n          if ( depomin >= amountTrx ){\r\n            this.setState({\r\n              texto:\"Enter a higher amount\"\r\n            });\r\n          }\r\n\r\n          if (balanceInTRX-50 <= amountTrx ){\r\n            this.setState({\r\n              texto:\"Not enough TRON\"\r\n            });\r\n          }\r\n\r\n        }\r\n\r\n      }else{\r\n        if ( balanceInTRX >= 100) {\r\n            //registra a la persona con los referidos\r\n            var sponsor = walletSponsor;\r\n            var loc = document.location.href;\r\n            if(loc.indexOf('?')>0){\r\n                var getString = loc.split('?')[1];\r\n                var GET = getString.split('&');\r\n                var get = {};\r\n                for(var i = 0, l = GET.length; i < l; i++){\r\n                    var tmp = GET[i].split('=');\r\n                    get[tmp[0]] = unescape(decodeURI(tmp[1]));\r\n                }\r\n\r\n                if (get['ref']) {\r\n                  tmp = get['ref'].split('#');\r\n\r\n                  var infoSponsor = await this.consultarUsuario(tmp[0],true);\r\n\r\n                  if ( infoSponsor.registered ) {\r\n                    sponsor = tmp[0];\r\n                  }\r\n                }\r\n            }\r\n\r\n            document.getElementById(\"amount\").value = 50;\r\n\r\n            await this.actualizarDireccion();\r\n            direccionTRX = this.state;\r\n\r\n            var amount = parseInt(50 * 1000000);\r\n\r\n            if(await Utils.contract.miRegistro().send({ callValue: amount})) {\r\n\r\n              await this.registrarUsuario({ sponsor: sponsor });\r\n\r\n              document.getElementById(\"amount\").value = \"\";\r\n              this.setState({\r\n                texto:\"Registration completed\"\r\n              });\r\n               var t = 5;\r\n              setInterval(() => {\r\n                this.setState({\r\n                  texto:\"Reload in: \"+t\r\n                });\r\n                t--;\r\n              },1*1000);\r\n\r\n              setInterval(() => document.location.reload(),5*1000);\r\n\r\n            }else{\r\n            document.getElementById(\"amount\").value = \"\";\r\n            this.setState({\r\n              texto:\"Not enough TRON or cancelled\"\r\n            });\r\n\r\n          }\r\n\r\n\r\n        }else{\r\n          window.alert(\"You wallet will has 100 trx to do the register\");\r\n        }\r\n      }\r\n    }else {\r\n      window.alert(\"Please contact the administrator Code: IMT-E-WA\");\r\n      // IMT-E-WA = Ingrese Mas Tron En la  Wallet de la Aplicación.\r\n      console.log(\"Minimo de 1000 tron Alcanzado ingresa más tron a la wallet de la plicación: \"+cons.SC)\r\n    }\r\n\r\n\r\n  };\r\n\r\n  async rateWozx(){\r\n\r\n    var cositas = await exchange.loadMarkets();\r\n\r\n    cositas = cositas['WOZX/KRW'];\r\n\r\n    var precio = cositas['info'];\r\n    precio = precio.closing_price;\r\n\r\n    precio = parseInt(precio);\r\n    console.log(precio);\r\n\r\n    ratewozx = precio+precio*tantoWozx;\r\n\r\n    ratewozx = parseInt(ratewozx);\r\n\r\n    //console.log(ratewozx);\r\n\r\n\r\n\r\n  }\r\n\r\n  async comprarWozx(krw){\r\n\r\n    await this.rateWozx();\r\n\r\n    this.setState({\r\n      texto:\"Processing...\"\r\n    });\r\n\r\n    var amount = krw/ratewozx;\r\n    amount = amount.toFixed(4);\r\n    console.log(amount);\r\n\r\n    var orden = await exchange.createLimitBuyOrder('WOZX/KRW', amount, ratewozx);\r\n\r\n    console.log(orden);\r\n\r\n    if (orden.info.status === \"0000\") {\r\n\r\n      var symbol = \"WOZX/KRW\";\r\n      var params = {};\r\n\r\n      var cositas = await exchange.fetchOrder(orden.id, symbol, params);\r\n\r\n      var monto = cositas.amount;\r\n\r\n      console.log(monto)\r\n\r\n    }else{\r\n      this.setState({\r\n        texto:\"Error: U-Cf-408\"\r\n      });\r\n      //No hay suficiente saldo de USD en Bithumb.com\r\n    }\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  async deposit() {\r\n\r\n    let amount = document.getElementById(\"amount\").value;\r\n\r\n    this.setState({\r\n      texto:\"Reciving TRON\"\r\n    });\r\n\r\n    amount = parseInt(amount * 1000000);\r\n\r\n    var id = await Utils.contract.depositoTron().send({callValue:amount});\r\n\r\n    var pago = await this.consultarTransaccion(id);\r\n\r\n    if ( pago ) {\r\n\r\n      amount = amount/1000000;\r\n\r\n      var { informacionCuenta } = this.state;\r\n\r\n      informacionCuenta.balanceTrx += amount;\r\n\r\n      informacionCuenta.historial.push({\r\n          tiempo: Date.now(),\r\n          valor: amount,\r\n          moneda: 'TRX',\r\n          accion: 'Deposit to plataform'\r\n\r\n      })\r\n\r\n      var otro = null;\r\n\r\n      await this.actualizarUsuario( informacionCuenta, otro );\r\n\r\n      tronApp.trx.sendTransaction(cons.EX, amount*1000000);\r\n\r\n      this.setState({\r\n        texto:\"Deposit is done!\"\r\n      });\r\n\r\n    }else{\r\n\r\n      this.setState({\r\n        texto:\"Canceled for User\"\r\n      });\r\n    }\r\n\r\n    document.getElementById(\"amount\").value = \"\";\r\n\r\n\r\n  };\r\n\r\n  render() {\r\n    var { min, texto} = this.state;\r\n\r\n    min = \"Min. deposit \"+min+\" TRX\";\r\n\r\n    return (\r\n\r\n      <div className=\"card wow bounceInUp\">\r\n        <div className=\"card-body\">\r\n        <header className=\"section-header\">\r\n              <h3>Make a deposit</h3>\r\n          </header>\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <input type=\"number\" className=\"form-control amount\" id=\"amount\" placeholder={min}></input>\r\n                <p className=\"card-text\">You must have ~ 40 TRX to make the transaction</p>\r\n              </div>\r\n            </form>\r\n          <button type=\"button\" className=\"btn btn-light\" style={{'backgroundColor': 'green','color': 'white','borderBlockColor': 'green'}} onClick={() => this.venderTRX()}>{texto}</button>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\nimport cons from \"../../cons.js\";\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      historial: []\r\n\r\n    }\r\n\r\n    this.verHistorial = this.verHistorial.bind(this);\r\n    this.consultarUsuario = this.consultarUsuario.bind(this);\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    this.verHistorial();\r\n    setInterval(() => this.verHistorial(),360*1000);\r\n  };\r\n\r\n  async consultarUsuario(direccionTRX, otro){\r\n\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = 'https://ewozx-mdb.herokuapp.com/consultar/'+direccionTRX;\r\n    const response = await fetch(proxyUrl+apiUrl)\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n\r\n    if (!otro) {\r\n      this.setState({\r\n        informacionCuenta: json\r\n      });\r\n      return json;\r\n    }else{\r\n\r\n      console.log(json);\r\n      return json;\r\n    }\r\n\r\n  };\r\n\r\n  async verHistorial(){\r\n\r\n    var { historial } = this.state;\r\n\r\n    var direccion =  await window.tronWeb.trx.getAccount();\r\n    direccion = window.tronWeb.address.fromHex(direccion.address);\r\n\r\n    var usuario =  await this.consultarUsuario(direccion, false);\r\n\r\n    if ( usuario.registered ) {\r\n\r\n      if ( usuario.historial.length > 0) {\r\n        historial.splice(0);\r\n        var o = 0\r\n        if (usuario.historial.length > 10) {\r\n          o = usuario.historial.length-10;\r\n        }\r\n        for (var i = o; i < usuario.historial.length; i++) {\r\n\r\n          var ver = usuario.historial[i];\r\n          ver.tiempo = new Date(ver.tiempo);\r\n          //console.log(ver);\r\n\r\n          let evento = (\r\n            <div className=\"col-full\" key={i.toString()}>\r\n              <span style={{fontSize: '18px'}} title={ver.tiempo}> {ver.valor} | {ver.moneda} | {ver.accion} </span>\r\n            </div>\r\n          );\r\n          historial.splice(0,0,evento);\r\n          this.setState({\r\n            historial: historial\r\n          });\r\n\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n  };\r\n\r\n  render() {\r\n    var { historial } = this.state;\r\n\r\n    const divStyle = {\r\n      width: '100%',\r\n      height:'115px',\r\n      overflow: 'scroll'\r\n    };\r\n\r\n    return (\r\n\r\n      <div>\r\n        <h3>Transactions <button type=\"button\" className=\"btn btn-light\" onClick={() => this.verHistorial()}>Reload</button></h3>\r\n\r\n        <div style={divStyle}>\r\n\r\n          {historial}\r\n\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nimport cons from \"../../cons.js\";\r\n\r\nimport ccxt from 'ccxt';\r\n\r\nconst exchange = new ccxt.bithumb({\r\n    nonce () { return this.milliseconds () }\r\n});\r\n\r\nexchange.proxy = cons.proxy;\r\nexchange.apiKey = cons.AK;\r\nexchange.secret = cons.SK;\r\n\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      rango: \"N/A\",\r\n      ganancia: 0,\r\n      refe: [],\r\n      direccion: \"\",\r\n      link: \"Make an investment to get the referral LINK\",\r\n      registered: false,\r\n      balanceTrx: \"0\",\r\n      withdrawnTrx: \"0\",\r\n      investedWozx: \"0\",\r\n      withdrawnWozx: \"0\",\r\n      wozxPe: false,\r\n      wozxCa: 0,\r\n      miPrecioWozx: 0,\r\n      priceUSDWOZX: 0\r\n\r\n    };\r\n\r\n    this.Investors = this.Investors.bind(this);\r\n    this.enviarWozx = this.enviarWozx.bind(this);\r\n    this.Link = this.Link.bind(this);\r\n    this.Wozx = this.Wozx.bind(this);\r\n    this.rateW = this.rateW.bind(this);\r\n\r\n    this.consultarUsuario = this.consultarUsuario.bind(this);\r\n    this.actualizarDireccion = this.actualizarDireccion.bind(this);\r\n    this.actualizarUsuario = this.actualizarUsuario.bind(this);\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    this.rateW();\r\n    await this.Link();\r\n    setInterval(() => this.Link(),3*1000);\r\n    await this.Investors();\r\n    setInterval(() => this.Investors(),10*1000);\r\n  };\r\n\r\n  async consultarUsuario(direccionTRX, otro){\r\n\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'consultar/'+direccionTRX;\r\n    const response = await fetch(proxyUrl+apiUrl)\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n\r\n    if (!otro) {\r\n      this.setState({\r\n        informacionCuenta: json\r\n      });\r\n      return json;\r\n    }else{\r\n\r\n      console.log(json);\r\n      return json;\r\n    }\r\n\r\n  };\r\n\r\n  async actualizarDireccion() {\r\n\r\n    var account =  await window.tronWeb.trx.getAccount();\r\n    account = window.tronWeb.address.fromHex(account.address);\r\n\r\n    this.setState({\r\n      direccionTRX: account\r\n    });\r\n\r\n  };\r\n\r\n  async actualizarUsuario( datos, otro ){\r\n    //Asegura que es el usuario conectado con tronlink\r\n    await this.actualizarDireccion();\r\n    var { direccionTRX } = this.state;\r\n    //encaso de recibir otro usiario se escoge el uasuario enviado para ser actualizado\r\n    if ( otro ) {\r\n      direccionTRX = otro;\r\n    }\r\n\r\n    datos.token = cons.MT;\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'actualizar/'+direccionTRX;\r\n    const response = await fetch(proxyUrl+apiUrl, {\r\n       method: 'POST',\r\n       headers: {\r\n        'Content-Type': 'application/json'\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n       body: JSON.stringify(datos)\r\n    })\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n\r\n    console.log(json);\r\n    return json;\r\n\r\n  };\r\n\r\n  async rateW(){\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = 'https://api.coingecko.com/api/v3/coins/wozx';\r\n    fetch(proxyUrl+apiUrl).then(response => {\r\n      return response.json();\r\n    }).then(data => {\r\n      // Work with JSON data\r\n      this.setState({\r\n        priceUSDWOZX: data.market_data.current_price.usd\r\n      });\r\n\r\n    }).catch(err => {\r\n        console.log(err)\r\n\r\n    });\r\n\r\n  };\r\n\r\n  async Wozx (){\r\n\r\n    const { investedWozx } = this.state;\r\n\r\n    document.getElementById(\"cantidadwozx\").value = investedWozx;\r\n\r\n  };\r\n\r\n  async Link() {\r\n    const {registered} = this.state;\r\n    if(registered){\r\n\r\n      let loc = document.location.href;\r\n      if(loc.indexOf('?')>0){\r\n        loc = loc.split('?')[0];\r\n        loc = loc.split('#')[0];\r\n      }\r\n      let mydireccion = await window.tronWeb.trx.getAccount();\r\n      mydireccion = window.tronWeb.address.fromHex(mydireccion.address)\r\n      mydireccion = loc+'?ref='+mydireccion;\r\n      this.setState({\r\n        link: mydireccion,\r\n      });\r\n    }else{\r\n      this.setState({\r\n        link: \"Haz una inversión para obtener el LINK de referido\",\r\n      });\r\n    }\r\n  }\r\n\r\n  async Investors() {\r\n\r\n    this.rateW();\r\n\r\n    const {investedWozx, priceUSDWOZX} = this.state;\r\n\r\n    var direccion = await window.tronWeb.trx.getAccount();\r\n    direccion = direccion = window.tronWeb.address.fromHex(direccion.address);\r\n\r\n    var usuario =  await this.consultarUsuario(direccion, false);\r\n    var range = \"N/A\";\r\n    var prof = usuario.rango;\r\n\r\n    prof = prof.toFixed(2);\r\n    prof = parseFloat(prof);\r\n    //console.log(prof);\r\n    if (prof > 0 && prof < 1000  ) {\r\n      range = \"PIONEER\"\r\n    }\r\n    if (prof >= 1000 && prof < 5000  ) {\r\n      range = \"ZAPHIRE\"\r\n    }\r\n    if (prof >= 5000 && prof < 20000  ) {\r\n      range = \"RUBY\"\r\n    }\r\n    if (prof >= 20000 && prof < 50000  ) {\r\n      range = \"ESMERALDA\"\r\n    }\r\n    if (prof >= 50000 && prof < 140000  ) {\r\n      range = \"DIAMANTE\"\r\n    }\r\n    if (prof >= 140000 && prof < 400000  ) {\r\n      range = \"DIAMANTE AZUL\"\r\n    }\r\n    if (prof >= 400000 && prof < 1000000  ) {\r\n      range = \"DIAMANTE NEGRO\"\r\n    }\r\n    if (prof >= 1000000) {\r\n      range = \"DIAMANTE CORONA\"\r\n    }\r\n    //console.log(prof);\r\n\r\n\r\n    this.setState({\r\n      direccion: direccion,\r\n      registered: usuario.registered,\r\n      balanceTrx: usuario.balanceTrx,\r\n      withdrawnTrx: usuario.withdrawnTrx,\r\n      investedWozx: usuario.investedWozx,\r\n      withdrawnWozx: usuario.withdrawnWozx,\r\n      refe: usuario.nivel,\r\n      rango: range,\r\n      ganancia: prof,\r\n      miPrecioWozx: investedWozx*priceUSDWOZX\r\n    });\r\n\r\n  };\r\n\r\n  async enviarWozx(){\r\n\r\n    const {investedWozx} = this.state;\r\n\r\n    let direccion = document.getElementById(\"enviartronwozx\").value;\r\n    var cantidad = document.getElementById(\"cantidadwozx\").value;\r\n\r\n    var account =  await window.tronWeb.trx.getAccount();\r\n    var accountAddress = account.address;\r\n    accountAddress = window.tronWeb.address.fromHex(accountAddress);\r\n\r\n    var result= false;\r\n\r\n    console.log(direccion.length);\r\n    if ( !window.tronWeb.isAddress(direccion) || accountAddress === direccion ) {\r\n\r\n      window.alert(\"Please enter a correct address\");\r\n      document.getElementById(\"enviartronwozx\").value = \"\";\r\n\r\n    }else{\r\n\r\n\r\n      if (cantidad <= 0 || cantidad === \"\" || cantidad > investedWozx) {\r\n        window.alert(\"Please enter a correct amount\");\r\n        document.getElementById(\"cantidadwozx\").value = \"\";\r\n\r\n      }else{\r\n\r\n        result = window.confirm(\"You are sure that you want to SEND \"+cantidad+\" Wozx?, remember that this action cannot be reversed\");\r\n\r\n      }\r\n\r\n    }\r\n\r\n    account =  await window.tronWeb.trx.getAccount();\r\n    accountAddress = account.address;\r\n    accountAddress = window.tronWeb.address.fromHex(accountAddress);\r\n\r\n    var informacionCuenta = await this.consultarUsuario(accountAddress, true);\r\n    var informacionDestino = await this.consultarUsuario(direccion, true);\r\n\r\n    if (result && await Utils.contract.enviarWozx(direccion, parseInt(cantidad*1000000)).send() && informacionCuenta.registered && informacionDestino.registered) {\r\n\r\n      informacionCuenta.investedWozx -= cantidad;\r\n      informacionCuenta.withdrawnWozx += cantidad;\r\n      informacionCuenta.historial.push({\r\n          tiempo: Date.now(),\r\n          valor: cantidad,\r\n          moneda: 'WOZX',\r\n          accion: 'Sed to: '+direccion\r\n\r\n      })\r\n\r\n      var otro = accountAddress;\r\n      await this.actualizarUsuario( informacionCuenta, otro);\r\n\r\n      informacionDestino.investedWozx += cantidad;\r\n      informacionDestino.withdrawnWozx -= cantidad;\r\n      informacionDestino.historial.push({\r\n          tiempo: Date.now(),\r\n          valor: cantidad,\r\n          moneda: 'WOZX',\r\n          accion: 'Send From: '+accountAddress\r\n\r\n      })\r\n\r\n      otro = direccion;\r\n      await this.actualizarUsuario( informacionDestino, otro);\r\n\r\n      document.getElementById(\"cantidadwozx\").value = \"\";\r\n\r\n    }\r\n\r\n  };\r\n\r\n\r\n  render() {\r\n    var {miPrecioWozx, wozxPe, wozxCa, refe, balanceTrx, withdrawnTrx, investedWozx,  withdrawnWozx , direccion, link, rango, ganancia} = this.state;\r\n\r\n\r\n\r\n\r\n    if ( wozxPe ) {\r\n      wozxPe =\"(~ \"+wozxCa+\" WOZX)\";\r\n    }else{\r\n      wozxPe =\"\";\r\n    }\r\n\r\n\r\n    withdrawnTrx = parseFloat(withdrawnTrx);\r\n    withdrawnTrx = withdrawnTrx.toFixed(2);\r\n\r\n    investedWozx = parseFloat(investedWozx);\r\n    investedWozx  = investedWozx.toFixed(4);\r\n\r\n    withdrawnWozx = parseFloat(withdrawnWozx);\r\n    withdrawnWozx = withdrawnWozx.toFixed(4);\r\n\r\n    balanceTrx = parseFloat(balanceTrx);\r\n    balanceTrx = balanceTrx.toFixed(2);\r\n\r\n    return (\r\n\r\n      <div id=\"officer\" className=\"container\">\r\n\r\n        <header style={{'textAlign': 'center'}} className=\"section-header\">\r\n          <h3 className=\"white\"><span style={{'fontWeight': 'bold'}}>\r\n          My office:</span> <br></br>\r\n          <span style={{'fontSize': '18px'}}>\r\n\r\n            {direccion} <br />\r\n            <span className=\"subhead\">{investedWozx} WOZX =</span> $ {miPrecioWozx.toFixed(2)} USD <br />\r\n            <span className=\"subhead\">Career range:</span><a href=\"/range.html\"> {rango} </a> <br />\r\n            <span className=\"subhead\">Profits:</span> $ {ganancia} USD\r\n\r\n          </span></h3><br />\r\n          <ul className=\"stats-tabs\">\r\n            <li><a href=\"#officer\">{refe[0]} <em>Level 1</em></a></li>\r\n            <li><a href=\"#officer\">{refe[1]} <em>Level 2</em></a></li>\r\n            <li><a href=\"#officer\">{refe[2]} <em>Level 3</em></a></li>\r\n            <li><a href=\"#officer\">{refe[3]} <em>Level 4</em></a></li>\r\n            <li><a href=\"#officer\">{refe[4]} <em>Level 5</em></a></li>\r\n            <li><a href=\"#officer\">{refe[5]} <em>Level 6</em></a></li>\r\n            <li><a href=\"#officer\">{refe[6]} <em>Level 7</em></a></li>\r\n            <li><a href=\"#officer\">{refe[7]} <em>Level 8</em></a></li>\r\n            <li><a href=\"#officer\">{refe[8]} <em>Level 9</em></a></li>\r\n            <li><a href=\"#officer\">{refe[9]} <em>Level 10</em></a></li>\r\n          </ul>\r\n\r\n          <h3 className=\"white\" style={{'fontWeight': 'bold'}}>Referral link:</h3>\r\n          <h6 className=\"white\" ><a href={link}>{link}</a>&nbsp;<br /><br />\r\n          <CopyToClipboard text={link}>\r\n            <button type=\"button\" className=\"btn btn-info\">Copy to clipboard</button>\r\n          </CopyToClipboard>\r\n          </h6>\r\n          <hr></hr>\r\n\r\n        </header>\r\n\r\n        <div className=\"row centrartexto\">\r\n\r\n          <div className=\"col-five\">\r\n\r\n              <h1 className=\"subhead\">Balance</h1>\r\n              <h3 className=\"display-2--light\">{investedWozx} WOZX</h3>\r\n              <h3 className=\"display-2--light\">{wozxPe}</h3>\r\n              <hr></hr>\r\n\r\n          </div>\r\n\r\n          <div className=\"col-seven\">\r\n\r\n              <h1 className=\"subhead\">Withdrawn</h1>\r\n              <h3 className=\"display-2--light\">{withdrawnWozx} WOZX</h3>\r\n              <hr></hr>\r\n\r\n          </div>\r\n        </div>\r\n        <div className=\"row centrartexto\">\r\n\r\n          <div className=\"col-five\">\r\n\r\n              <h1 className=\"subhead\">Balance</h1>\r\n              <h3 className=\"display-2--light\">{balanceTrx} TRX</h3>\r\n              <hr></hr>\r\n\r\n          </div>\r\n\r\n          <div className=\"col-seven\">\r\n\r\n              <h1 className=\"subhead\">Withdrawn</h1>\r\n              <h3 className=\"display-2--light\">{withdrawnTrx} TRX</h3>\r\n              <hr></hr>\r\n\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"row centrartexto\">\r\n\r\n          <div className=\"col-seven\">\r\n\r\n              <h3 className=\"display-2--light\"> Send WOZX to USER:</h3>\r\n              <input type=\"text\" className=\"form-control\" id=\"enviartronwozx\" aria-describedby=\"emailHelp\" placeholder=\"Tron wallet Member\" />\r\n              <small id=\"emailHelp\" className=\"form-text text-muted\">make sure the address is well written, once sent, this action cannot be reversed</small>\r\n\r\n\r\n          </div>\r\n\r\n          <div className=\"col-five\">\r\n\r\n              <h3 className=\"display-2--light\" style={{cursor: \"pointer\"}} onClick={() => this.Wozx()}> Available {investedWozx} WOZX</h3>\r\n              <input type=\"number\" className=\"form-control\" id=\"cantidadwozx\" aria-describedby=\"emailHelp\" placeholder=\"how much WOZX\" />\r\n              <a className=\"btn btn-light\"  href=\"#enviartronwozx\" style={{'backgroundColor': 'red','color': 'white','borderBlockColor': 'red'}} onClick={() => this.enviarWozx()}>send WOZX</a>\r\n\r\n          </div>\r\n\r\n          <hr />\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nimport cons from \"../../cons.js\";\r\n\r\nimport TronWeb2 from 'tronweb';\r\n\r\nimport web3 from 'web3';\r\n\r\nimport ccxt from 'ccxt';\r\n\r\nconst delay = ms => new Promise(res => setTimeout(res, ms));\r\n\r\nconst exchange = new ccxt.bithumb({\r\n    nonce () { return this.milliseconds () }\r\n});\r\n\r\nexchange.proxy = cons.proxy;\r\nexchange.apiKey = cons.AK;\r\nexchange.secret = cons.SK;\r\n\r\nvar tantoTrx = cons.TRX;// para que el TRX se Venda de inmediato\r\nvar tantoWozx = cons.WOZX;// para que el WOZX se venda de inmediato\r\n\r\nvar minimo_usd = cons.USD;\r\n\r\nvar amountTrx = 0;\r\nvar ratetrx = 0;\r\nvar ratewozx = 0;\r\n\r\nvar descuento = cons.descuento;\r\n\r\nconst pry = cons.WO;\r\n\r\nvar pru = \"\";\r\nif (cons.PRU === \"shasta.\") {\r\n  pru = cons.PRU;\r\n}\r\n\r\nconst TRONGRID_API = \"https://api.\"+pru+\"trongrid.io\";\r\nconsole.log(TRONGRID_API);\r\n\r\nconst tronApp = new TronWeb2(\r\n  TRONGRID_API,\r\n  TRONGRID_API,\r\n  TRONGRID_API,\r\n  pry\r\n);\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      pago: false,\r\n      ratetrx: \"\",\r\n      ratewozx: \"\",\r\n      tipo: \"button\",\r\n      auth: \"/auth.html\",\r\n      texto: \"Loading...\",\r\n      texto3: \"Buy WOZX <- TRX\",\r\n      texto4:\"Sell WOZX -> TRX\",\r\n      value: \"\",\r\n      fee: cons.FEEW,\r\n      feetrx: cons.FEET,\r\n      funcion: false,\r\n      alerta: \"alerta0\",\r\n      direccion: \"\",\r\n      registered: false,\r\n      balanceRef: 0,\r\n      totalRef: 0,\r\n      invested: 0,\r\n      paidAt: 0,\r\n      my: 0,\r\n      withdrawn: 0\r\n\r\n    };\r\n\r\n    this.Investors = this.Investors.bind(this);\r\n    this.withdraw = this.withdraw.bind(this);\r\n    this.rateWozx = this.rateWozx.bind(this);\r\n    this.venderWozx = this.venderWozx.bind(this);\r\n    this.rateTRX = this.rateTRX.bind(this);\r\n    this.comprarTRX = this.comprarTRX.bind(this);\r\n    this.enviarTron = this.enviarTron.bind(this);\r\n    this.vereth = this.vereth.bind(this);\r\n    this.reset = this.reset.bind(this);\r\n    this.withdrawETH = this.withdrawETH.bind(this);\r\n    this.enviarEth = this.enviarEth.bind(this);\r\n    this.saldoApp = this.saldoApp.bind(this);\r\n    this.Wozx = this.Wozx.bind(this);\r\n    this.Tron = this.Tron.bind(this);\r\n    this.rateT = this.rateT.bind(this);\r\n    this.venderTRX = this.venderTRX.bind(this);\r\n    this.comprarWozx = this.comprarWozx.bind(this);\r\n    this.deposit = this.deposit.bind(this);\r\n\r\n    this.consultarUsuario = this.consultarUsuario.bind(this);\r\n    this.actualizarDireccion = this.actualizarDireccion.bind(this);\r\n    this.actualizarUsuario = this.actualizarUsuario.bind(this);\r\n\r\n    this.consultarTransaccion = this.consultarTransaccion.bind(this);\r\n\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    await this.Investors();\r\n    await this.vereth();\r\n    await this.enviarEth();\r\n    setInterval(() => this.Investors(),10*1000);\r\n    setInterval(() => this.vereth(),10*1000);\r\n    setInterval(() => this.enviarEth(),3*1000);\r\n\r\n  };\r\n\r\n  async actualizarUsuario( datos, otro ){\r\n    //Asegura que es el usuario conectado con tronlink\r\n    await this.actualizarDireccion();\r\n    var { direccionTRX } = this.state;\r\n    //encaso de recibir otro usiario se escoge el uasuario enviado para ser actualizado\r\n    if ( otro ) {\r\n      direccionTRX = otro;\r\n    }\r\n\r\n    datos.token = cons.MT;\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'actualizar/'+direccionTRX;\r\n    const response = await fetch(proxyUrl+apiUrl, {\r\n       method: 'POST',\r\n       headers: {\r\n        'Content-Type': 'application/json'\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n       body: JSON.stringify(datos)\r\n    })\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n\r\n    console.log(json);\r\n    return json;\r\n\r\n  };\r\n\r\n  async actualizarDireccion() {\r\n\r\n    var account =  await window.tronWeb.trx.getAccount();\r\n    account = window.tronWeb.address.fromHex(account.address);\r\n\r\n    this.setState({\r\n      direccionTRX: account\r\n    });\r\n\r\n  };\r\n\r\n  async consultarUsuario(direccionTRX, otro){\r\n\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'consultar/'+direccionTRX;\r\n    const response = await fetch(proxyUrl+apiUrl)\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n\r\n    if (!otro) {\r\n      this.setState({\r\n        informacionCuenta: json\r\n      });\r\n      return json;\r\n    }else{\r\n\r\n      console.log(json);\r\n      return json;\r\n    }\r\n\r\n  };\r\n\r\n  async consultarTransaccion(id){\r\n\r\n    this.setState({\r\n      texto3: \"Updating balance...\"\r\n    });\r\n    await delay(3000);\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'consultar/transaccion/'+id;\r\n    console.log(apiUrl);\r\n    const response = await fetch(proxyUrl+apiUrl)\r\n    .catch(error =>{console.error(error)});\r\n    const json = await response.json();\r\n    console.log(json);\r\n    return json.result;\r\n\r\n  };\r\n\r\n  async Wozx (){\r\n\r\n    const { investedWozx } = this.state;\r\n\r\n    document.getElementById(\"amountWOZX\").value = investedWozx;\r\n\r\n  };\r\n\r\n  async Tron (){\r\n\r\n    const { balanceTrx } = this.state;\r\n\r\n    document.getElementById(\"amountTRX\").value = balanceTrx;\r\n\r\n  };\r\n\r\n  async saldoApp(){\r\n\r\n    var cositas = await exchange.fetchBalance();\r\n\r\n    cositas = cositas['TRX'];\r\n\r\n    var balance = cositas;\r\n    balance = balance.total;\r\n\r\n    balance = parseFloat(balance);\r\n    console.log(balance);\r\n\r\n    this.setState({\r\n      tronEnApp: balance\r\n    });\r\n\r\n\r\n\r\n  };\r\n\r\n\r\n  async rateTRX(){\r\n\r\n    var cositas = await exchange.loadMarkets();\r\n\r\n    cositas = cositas['TRX/KRW'];\r\n\r\n    var precio = cositas['info'];\r\n    precio = precio.closing_price;\r\n\r\n    precio = parseFloat(precio);\r\n    console.log(precio); //precio en KRW\r\n\r\n\r\n    ratetrx = precio-precio*tantoTrx;\r\n    ratetrx = parseFloat(ratetrx.toFixed(2));\r\n\r\n    //console.log(ratetrx);\r\n\r\n\r\n  };\r\n\r\n  async rateT(){\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = 'https://api.coingecko.com/api/v3/coins/tron';\r\n    const response = await fetch(proxyUrl+apiUrl)\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n\r\n    console.log(json.market_data.current_price.usd);\r\n    this.setState({\r\n      priceUSDTRON: json.market_data.current_price.usd\r\n    });\r\n    return json.market_data.current_price.usd;\r\n\r\n\r\n  };\r\n\r\n  async venderTRX(){\r\n\r\n    await this.saldoApp();\r\n    await this.rateTRX();\r\n\r\n    this.setState({\r\n      texto3:\"Please wait\"\r\n    });\r\n\r\n    // verifica el monto sea mayor a minimo\r\n    amountTrx = document.getElementById(\"amountTRX\").value;\r\n    amountTrx = parseFloat(amountTrx);\r\n    var amountTrxsindescuento = amountTrx;\r\n\r\n    var depomin = await Utils.contract.MIN_DEPOSIT().call();\r\n    depomin = parseInt(depomin._hex)/1000000;\r\n    // verifica si ya esta registrado\r\n    const account =  await window.tronWeb.trx.getAccount();\r\n    var accountAddress = account.address;\r\n    accountAddress = window.tronWeb.address.fromHex(accountAddress);\r\n\r\n    var investors = await Utils.contract.investors(accountAddress).call();\r\n    //console.log(investors);\r\n\r\n    if ( amountTrx <= 0 || amountTrx === \"\" ) {\r\n      window.alert(\"Please enter a correct amount\");\r\n      document.getElementById(\"amountTRX\").value = \"\";\r\n      this.setState({\r\n        texto3:\"Buy WOZX <- TRX\"\r\n      });\r\n\r\n    }else{\r\n      var COMISION_RETIRO = await Utils.contract.COMISION_TRON().call();\r\n        COMISION_RETIRO = parseInt(COMISION_RETIRO._hex)/1000000;\r\n      var result = window.confirm(\"You are sure you want to reinvest \"+amountTrx+\" TRX? this action cost \"+COMISION_RETIRO+\" TRX\");\r\n    }\r\n\r\n\r\n\r\n    if ( result && investors.registered && parseInt(investors.tronDisponible)/1000000 >= amountTrx ) {\r\n        if ( amountTrx >= depomin ) {\r\n          amountTrx = amountTrx - amountTrx*descuento;\r\n          amountTrx = amountTrx.toFixed(2);\r\n\r\n          var orden = await exchange.createLimitSellOrder('TRX/KRW', amountTrx, ratetrx)\r\n\r\n          if (orden.info.status === \"0000\") {\r\n              this.setState({\r\n                texto:\"Buying WOZX\"\r\n              });\r\n              var symbol = \"TRX/KRW\";\r\n              var params = {};\r\n              //vende el tron y obtiene KRW\r\n              orden = await exchange.fetchOrder (orden.id, symbol, params);\r\n\r\n              this.setState({\r\n                texto3:\"Buying WOZX\"\r\n              });\r\n\r\n              this.comprarWozx(orden.cost, amountTrxsindescuento, accountAddress);\r\n\r\n          }else{\r\n              this.setState({\r\n                texto3:\"Error: T-Of2-267\"\r\n              });\r\n              //No hay suficiente TRON en su exchange\r\n            }\r\n\r\n        }else{\r\n          if ( depomin >= amountTrx ){\r\n            this.setState({\r\n              texto3:\"Enter a higher amount\"\r\n            });\r\n          }\r\n\r\n        }\r\n\r\n    }else{\r\n      document.getElementById(\"amount\").value = \"\";\r\n\r\n      this.setState({\r\n        texto3:\"Not registered or canceled\"\r\n      });\r\n\r\n\r\n    }\r\n\r\n    this.setState({\r\n      texto3:\"Buy WOZX <- TRX\"\r\n    });\r\n\r\n\r\n  };\r\n\r\n  async rateWozx(){\r\n\r\n    var cositas = await exchange.loadMarkets();\r\n\r\n    cositas = cositas['WOZX/KRW'];\r\n\r\n    var precio = cositas['info'];\r\n    precio = precio.closing_price;\r\n\r\n    precio = parseInt(precio);\r\n    console.log(precio);\r\n\r\n    ratewozx = precio+precio*tantoWozx;\r\n\r\n    ratewozx = parseInt(ratewozx);\r\n\r\n    return ratewozx;\r\n\r\n\r\n  }\r\n\r\n  async comprarWozx( usd, amountTrxsindescuento, accountAddress ){\r\n\r\n    await this.rateWozx();\r\n\r\n    this.setState({\r\n      texto3:\"Processing...\"\r\n    });\r\n\r\n    let amount = usd/parseFloat(ratewozx);\r\n\r\n    amount = amount.toFixed(4);\r\n    amount = parseFloat(amount);\r\n    console.log(amount);\r\n\r\n    var orden2 = await exchange.createLimitBuyOrder('WOZX/KRW', amount, ratewozx);\r\n\r\n    console.log(orden2);\r\n\r\n    if ( orden2.info.status === \"0000\" ) {\r\n\r\n      var symbol2 = \"WOZX/KRW\";\r\n      var params2 = {};\r\n\r\n      orden2 = await exchange.fetchOrder(orden2.id, symbol2, params2);\r\n\r\n      var otro = null;\r\n\r\n      var informacionCuenta = await this.consultarUsuario(accountAddress, otro);\r\n\r\n      var aumentar = false;\r\n\r\n      informacionCuenta.balanceTrx -= amountTrxsindescuento;\r\n      informacionCuenta.withdrawnTrx += amountTrxsindescuento;\r\n      if (!informacionCuenta.recompensa) {\r\n        informacionCuenta.recompensa = true;\r\n        aumentar =  true;\r\n      }\r\n\r\n      informacionCuenta.historial.push({\r\n          tiempo: Date.now(),\r\n          valor: amountTrxsindescuento,\r\n          moneda: 'TRX',\r\n          accion: 'Selled'\r\n\r\n      })\r\n\r\n      informacionCuenta.investedWozx += orden2.amount;\r\n\r\n      informacionCuenta.historial.push({\r\n          tiempo: Date.now(),\r\n          valor: orden2.amount,\r\n          moneda: 'WOZX',\r\n          accion: 'Invested'\r\n\r\n      })\r\n\r\n      otro = null;\r\n\r\n      var contractApp = await tronApp.contract().at(contractAddress);\r\n\r\n      var id = await Utils.contract.retirarTron( amountTrxsindescuento*1000000 ).send();\r\n\r\n      console.log(id);\r\n\r\n      var pago = await this.consultarTransaccion(id);\r\n\r\n      if ( pago ) {\r\n\r\n        contractApp.depositoWozx(informacionCuenta.direccion, parseInt(orden2.amount*1000000)).send();\r\n\r\n        await this.actualizarUsuario( informacionCuenta, otro );\r\n\r\n        //repartir recompensa referidos\r\n        informacionCuenta = await this.consultarUsuario(accountAddress, otro);\r\n        var informacionSponsor = await this.consultarUsuario(informacionCuenta.sponsor, true);\r\n\r\n        if ( window.tronWeb.isAddress(informacionCuenta.sponsor) && informacionSponsor.registered) {\r\n\r\n          var recompensa = [0.05, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.01];\r\n\r\n          this.setState({\r\n            texto3:\"Redwarding referers\"\r\n          });\r\n          for (var i = 0; i < recompensa.length; i++) {\r\n\r\n            if (informacionSponsor.registered && informacionSponsor.recompensa ) {\r\n\r\n              informacionSponsor.balanceTrx += amountTrxsindescuento*recompensa[i];\r\n\r\n              if (aumentar) {\r\n                informacionSponsor.nivel[i]++;\r\n              }\r\n\r\n              var precioUsdTron = await this.rateT();\r\n\r\n              console.log(precioUsdTron);\r\n\r\n              var rango = precioUsdTron*amountTrxsindescuento*recompensa[i];\r\n              rango = rango.toFixed(2);\r\n              rango = parseFloat(rango);\r\n\r\n              informacionSponsor.rango += rango;\r\n              informacionSponsor.historial.push({\r\n                  tiempo: Date.now(),\r\n                  valor: amountTrxsindescuento*recompensa[i],\r\n                  moneda: 'TRX',\r\n                  accion: 'Redward Referer -> $ '+rango+' USD'\r\n\r\n              })\r\n\r\n              otro = informacionSponsor.direccion;\r\n\r\n              var amountpararefer = amountTrxsindescuento*recompensa[i]*1000000;\r\n\r\n              await contractApp.depositoTronUsuario(informacionSponsor.direccion, parseInt(amountpararefer)).send();\r\n\r\n              await this.actualizarUsuario( informacionSponsor, otro);\r\n\r\n            }\r\n\r\n            if ( informacionSponsor.direccion === cons.WS ) {\r\n              break;\r\n            }\r\n\r\n            informacionSponsor = await this.consultarUsuario( informacionSponsor.sponsor, true);\r\n\r\n          }\r\n        }\r\n\r\n        this.setState({\r\n          texto3:\"success!\"\r\n        });\r\n      }else{\r\n        this.setState({\r\n          texto3:\"Try again Later, server Bussy\"\r\n        });\r\n      }\r\n\r\n\r\n\r\n      document.getElementById(\"amountTRX\").value = \"\";\r\n\r\n      }else{\r\n        this.setState({\r\n          texto3:\"Error: U-Of2-422\"\r\n        });\r\n        //No hay suficiente saldo de USD en Gate.io\r\n      }\r\n\r\n\r\n\r\n\r\n  };\r\n\r\n\r\n  async deposit(orden) {\r\n\r\n    let amount = document.getElementById(\"amountTRX\").value;\r\n\r\n      orden = orden * 1000000;\r\n      orden = parseInt(orden);\r\n      console.log(orden);\r\n\r\n      var account =  await window.tronWeb.trx.getAccount();\r\n      var accountAddress = account.address;\r\n      accountAddress = window.tronWeb.address.fromHex(accountAddress);\r\n\r\n      this.setState({\r\n        texto3:\"Sign order\"\r\n      });\r\n\r\n      let contract = await tronApp.contract().at(contractAddress);//direccion del contrato\r\n      var pending = await contract.depositpendiente(accountAddress).call();\r\n\r\n      console.log(pending);\r\n      //cancela cualquier deposito inconcluso para hacer uno nuevo\r\n      if (pending.res) {\r\n        console.log(pending);\r\n        await contract.cancelDepo(accountAddress).send();\r\n      }\r\n\r\n\r\n      //crea una nueva orden directa\r\n      await contract.firmarTx(accountAddress, orden).send();\r\n\r\n      this.setState({\r\n        texto3:\"Reciving TRON\"\r\n      });\r\n\r\n      account =  await window.tronWeb.trx.getAccount();\r\n      accountAddress = account.address;\r\n      accountAddress = window.tronWeb.address.fromHex(accountAddress);\r\n\r\n      amount = parseInt(amount * 1000000);\r\n\r\n      await Utils.contract.redeposit(accountAddress, amount).send();\r\n\r\n      this.setState({\r\n        texto3:\"Handing out rewards\"\r\n      });\r\n\r\n      await contract.transfers().send();\r\n      await contract.transfers01().send();\r\n      this.setState({\r\n        texto3:\"Buy WOZX -> TRX\"\r\n      });\r\n\r\n\r\n    document.getElementById(\"amountTRX\").value = \"\";\r\n\r\n\r\n  };\r\n\r\n\r\n\r\n  async venderWozx(){\r\n\r\n    this.setState({\r\n      texto4:\"Please wait...\"\r\n    });\r\n\r\n    await this.rateWozx();\r\n\r\n    ratewozx = ratewozx-ratewozx*tantoWozx*2;\r\n    ratewozx = parseInt(ratewozx);\r\n\r\n    console.log(tantoWozx);\r\n    console.log(ratewozx);\r\n\r\n    const {investedWozx} = this.state;\r\n\r\n    var amount = document.getElementById(\"amountWOZX\").value;\r\n\r\n    var ope = cons.FEEW*2;\r\n    var result = false;\r\n\r\n    if ( amount >= ope ) {\r\n\r\n      if (amount <= 0 || amount === \"\" || amount > investedWozx) {\r\n        window.alert(\"Please enter a correct amount\");\r\n\r\n      }else{\r\n        result = window.confirm(\"You are sure you want to SELL \"+amount+\" Wozx?, remember that this action cannot be reversed\");\r\n\r\n      }\r\n    }else{\r\n      window.alert(\"The minimum to operate is \"+ope+\" WOZX\");\r\n    }\r\n\r\n    amount = parseFloat(amount);\r\n    amount = amount.toFixed(4);\r\n    amount = parseFloat(amount);\r\n\r\n    var contractApp = await tronApp.contract().at(contractAddress);\r\n\r\n    if (result && amount > 0 && investedWozx > 0 && amount <= investedWozx && await contractApp.retirarWozx( parseInt( amount * 1000000 ) ).send()){\r\n\r\n      console.log( { amount, ratewozx } );\r\n\r\n      var orden = await exchange.createLimitSellOrder('WOZX/KRW', amount, ratewozx)\r\n\r\n      console.log(orden);\r\n\r\n      console.log(orden.info.status);\r\n\r\n      if (orden.info.status === \"0000\") {\r\n          this.setState({\r\n            texto4:\"Selling WOZX\"\r\n          });\r\n\r\n          var symbol = \"WOZX/KRW\";\r\n          var params = {};\r\n\r\n          var cositas = await exchange.fetchOrder (orden.id, symbol, params);\r\n\r\n          var costo = cositas.cost;\r\n          var monto = cositas.amount;\r\n\r\n          console.log(costo);\r\n          console.log(monto);\r\n\r\n          var cantidadusd = costo;\r\n          var cantidadWozx = monto;\r\n\r\n          var { informacionCuenta } = this.state;\r\n\r\n          informacionCuenta.investedWozx -= monto;\r\n          informacionCuenta.withdrawnWozx += monto;\r\n\r\n          informacionCuenta.historial.push({\r\n              tiempo: Date.now(),\r\n              valor: monto,\r\n              moneda: 'WOZX',\r\n              accion: 'Selled'\r\n\r\n          })\r\n\r\n          var otro = null;\r\n\r\n          await this.actualizarUsuario( informacionCuenta, otro );\r\n\r\n          console.log(cantidadusd);\r\n\r\n        this.comprarTRX(cantidadusd, cantidadWozx);\r\n      }\r\n\r\n\r\n    }\r\n\r\n    document.getElementById(\"amountWOZX\").value = \"\";\r\n\r\n    this.setState({\r\n      texto4:\"Sell WOZX -> TRX\"\r\n    });\r\n\r\n  };\r\n\r\n\r\n  async comprarTRX(c, w){\r\n\r\n    await this.rateTRX();\r\n\r\n    ratetrx = ratetrx+ratetrx*tantoTrx*2;\r\n    ratetrx = ratetrx.toFixed(2);\r\n    ratetrx = parseInt(ratetrx);\r\n    console.log(ratetrx);\r\n\r\n    let amount = c/ratetrx;\r\n\r\n    amount = amount.toFixed(2)\r\n    amount = parseFloat(amount);\r\n\r\n    var orden = await exchange.createLimitBuyOrder('TRX/KRW', amount, ratetrx);\r\n\r\n    console.log(orden);\r\n\r\n    if (orden.info.status === \"0000\") {\r\n\r\n      var symbol = \"TRX/KRW\";\r\n      var params = {};\r\n\r\n      var cositas = await exchange.fetchOrder(orden.id, symbol, params);\r\n\r\n      var monto = cositas.amount;\r\n\r\n      console.log(monto)\r\n\r\n      var { informacionCuenta } = this.state;\r\n\r\n      informacionCuenta.balanceTrx += monto;\r\n\r\n      informacionCuenta.historial.push({\r\n          tiempo: Date.now(),\r\n          valor: monto,\r\n          moneda: 'TRX',\r\n          accion: 'From WOZX selled'\r\n\r\n      })\r\n\r\n      var otro = null;\r\n\r\n      await this.actualizarUsuario( informacionCuenta, otro );\r\n\r\n      var contractApp = await tronApp.contract().at(contractAddress);\r\n      await contractApp.depositoTronUsuario( informacionCuenta.direccion, monto ).send();\r\n\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  async enviarTron(trx, wozx){\r\n\r\n\r\n    //enviar el tron a la direccion del contrato\r\n    let wallet = await window.tronWeb.trx.getAccount();\r\n    wallet = window.tronWeb.address.fromHex(wallet.address)\r\n\r\n    if (false) {\r\n\r\n      let amount = trx;\r\n      let currency = \"TRX\";\r\n\r\n      // envia el saldo necesario a la direccion del contrato // si está en pruebas se lo envia al owner\r\n      var address;\r\n      if (cons.PRU) {\r\n        let ownerContrato = await Utils.contract.owner().call();\r\n        ownerContrato = window.tronWeb.address.fromHex(ownerContrato);\r\n        address = ownerContrato;\r\n        wallet = ownerContrato;\r\n      }else{\r\n        address = contractAddress;\r\n      }\r\n\r\n      console.log(\"se envio \"+trx+\" TRX a \"+wallet+\" exitosamente\");\r\n\r\n      //console.log(address);\r\n\r\n      var tag = undefined;\r\n      var params = {};\r\n\r\n      var versacado = await exchange.withdraw(currency, amount, address, tag, params);\r\n      console.log(versacado);\r\n\r\n    }\r\n\r\n  };\r\n\r\n  async Investors() {\r\n\r\n    var direccion = await window.tronWeb.trx.getAccount();\r\n    direccion = window.tronWeb.address.fromHex(direccion.address);\r\n    let My = await Utils.contract.withdrawableWozx().call();\r\n\r\n    //console.log(My);\r\n\r\n    var usuario =  await this.consultarUsuario(direccion, false);\r\n    //console.log(usuario);\r\n\r\n    this.setState({\r\n      direccion: direccion,\r\n      registered: usuario.registered,\r\n      balanceTrx: usuario.balanceTrx,\r\n      investedWozx: usuario.investedWozx,\r\n      mywithdrawableWozx: parseInt(My._hex)/1000000\r\n    });\r\n\r\n  };\r\n\r\n  async withdraw(){\r\n\r\n    var hay = await Utils.contract.withdrawableTrx().call();\r\n    var minre = await Utils.contract.COMISION_TRON().call();\r\n    var balanceContract = await Utils.contract.InContract().call();\r\n\r\n    var amount = document.getElementById(\"amountTRX\").value;\r\n    amount = parseFloat(amount);\r\n\r\n    hay = parseInt(hay._hex)/1000000;\r\n    minre = parseInt(minre._hex)/1000000;\r\n    balanceContract = parseInt(balanceContract._hex)/1000000;\r\n\r\n    const account =  await window.tronWeb.trx.getAccount();\r\n    var accountAddress = window.tronWeb.address.fromHex(account.address);\r\n    var investors = await Utils.contract.investors(accountAddress).call();\r\n    var balanceTrxYo = parseInt(investors.tronDisponible._hex)/1000000;\r\n\r\n    console.log(balanceTrxYo);\r\n    console.log(balanceContract);\r\n    console.log(hay);\r\n    console.log(minre);\r\n\r\n\r\n    if (amount <= 0 || amount === \"\" || amount > balanceTrxYo ) {\r\n      window.alert(\"Please enter a correct amount\")\r\n      document.getElementById(\"amountTRX\").value = \"\";\r\n\r\n    }else{\r\n      var result = window.confirm(\"You are sure that you want to WITHDRAW \"+amount+\" TRX?, remember that this action cost \"+minre+\" TRX\");\r\n\r\n    }\r\n\r\n\r\n    if ( result ){\r\n\r\n      if ( hay >= minre*2 &&  amount >= minre*2 ) {\r\n\r\n\r\n        if ( balanceContract >= amount && amount < 150 && await Utils.contract.withdraw( amount*1000000 ).send() ) {\r\n\r\n          var informacionCuenta = await this.consultarUsuario(accountAddress, null);\r\n\r\n          console.log(informacionCuenta);\r\n          informacionCuenta.balanceTrx -= amount;\r\n          informacionCuenta.withdrawnTrx += amount;\r\n\r\n          informacionCuenta.historial.push({\r\n              tiempo: Date.now(),\r\n              valor: amount,\r\n              moneda: 'TRX',\r\n              accion: 'Withdrawl'\r\n\r\n          })\r\n\r\n          var otro = null;\r\n\r\n          await this.actualizarUsuario( informacionCuenta, otro );\r\n\r\n          document.getElementById(\"amountTRX\").value = \"\";\r\n        }else{\r\n\r\n          if ( await Utils.contract.retirarTron( amount*1000000 ).send() ) {\r\n\r\n            informacionCuenta = await this.consultarUsuario(accountAddress, null);\r\n\r\n            if ( window.tronWeb.isAddress(informacionCuenta.direccion)) {\r\n\r\n              var currency2 = \"TRX\";\r\n              var tag2 = informacionCuenta.direccion;\r\n              var params2 = {};\r\n\r\n              this.setState({\r\n                texto: \"Sendig TRX\"\r\n              });\r\n\r\n              var sacado = await exchange.withdraw(currency2, amount, informacionCuenta.direccion, tag2, params2);\r\n\r\n              console.log(sacado);\r\n\r\n              if (sacado.info.status  === \"0000\") {\r\n\r\n                this.setState({\r\n                  texto: \"TRX sended!\"\r\n                });\r\n\r\n                informacionCuenta.balanceTrx -= amount;\r\n                informacionCuenta.withdrawnTrx += amount;\r\n\r\n                informacionCuenta.historial.push({\r\n                    tiempo: Date.now(),\r\n                    valor: amount,\r\n                    moneda: 'TRX',\r\n                    accion: 'Sended to: '+informacionCuenta.direccion\r\n\r\n                });\r\n\r\n                otro = null;\r\n\r\n                await this.actualizarUsuario( informacionCuenta, otro );\r\n              }\r\n\r\n              document.getElementById(\"amountTRX\").value = \"\";\r\n\r\n          }\r\n        }\r\n}\r\n\r\n      }else{\r\n\r\n        if ( hay < minre*2 ) {\r\n          window.alert(\"Youn no have TRX aviable, minimum of withdraw is \"+minre*2+\" TRX\");\r\n        }\r\n\r\n        if ( amount < minre*2 ) {\r\n          window.alert(\"Minimum of withdraw is \"+minre*2+\" TRX\");\r\n        }\r\n\r\n        if ( balanceContract < amount ){\r\n          window.alert(\"The Aplication in this moment no have TRX available, Try again Later\");\r\n        }\r\n\r\n    }\r\n    }\r\n\r\n  };\r\n\r\n  async withdrawETH(){\r\n\r\n    const { funcion, investedWozx, fee } = this.state;\r\n\r\n    var amount = document.getElementById(\"amountWOZX\").value;\r\n\r\n    var result = false;\r\n\r\n\r\n\r\n    if ( funcion ) {\r\n\r\n      if ( amount >= fee*2 ) {\r\n\r\n        if (amount <= 0 || amount === \"\" || amount > investedWozx) {\r\n          window.alert(\"Please enter a correct amount\");\r\n          document.getElementById(\"amountWOZX\").value = \"\";\r\n        }else{\r\n\r\n          result = window.confirm(\"You are sure that you want to WITHDRAW \"+amount+\" Wozx?, remember that this action cannot be reversed\");\r\n        }\r\n        var id = await Utils.contract.retirarWozx( amount*1000000 ).send();\r\n        var pago = await this.consultarTransaccion(id);\r\n\r\n        if ( result && investedWozx > 0 && pago ){\r\n\r\n          if (amount <= investedWozx && investedWozx > fee) {\r\n            var amountsinfee = amount;\r\n            amount = amount-fee;\r\n            amount = amount.toString();\r\n\r\n            var direccion = await window.tronWeb.trx.getAccount();\r\n            direccion = window.tronWeb.address.fromHex(direccion.address);\r\n\r\n            var informacionCuenta = await this.consultarUsuario(direccion, null);\r\n            var address = informacionCuenta.ethereum;\r\n\r\n            if (cons.PRU  === \"shasta.\") {\r\n\r\n              if (web3.utils.isAddress(informacionCuenta.ethereum)) {\r\n                address = informacionCuenta.ethereum;\r\n              }else{\r\n                address = \"0x11134Bd1dd0219eb9B4Ab931c508834EA29C0F8d\";\r\n              }\r\n\r\n            }\r\n\r\n              var currency2 = \"WOZX\";\r\n              var tag2 = direccion;\r\n              var params2 = {};\r\n\r\n              this.setState({\r\n                  texto: \"Sendig WOZX\"\r\n                });\r\n\r\n              var sacado = await exchange.withdraw(currency2, amount, address, tag2, params2);\r\n\r\n              console.log(sacado);\r\n\r\n              if (sacado.info.status  === \"5600\" && pago ) {\r\n\r\n                var contractApp = await tronApp.contract().at(contractAddress);\r\n                \r\n                contractApp.depositoWozx(direccion, parseInt(amount*1000000)).send();\r\n\r\n              }\r\n\r\n              if (sacado.info.status  === \"0000\") {\r\n\r\n                informacionCuenta.investedWozx -= amount;\r\n                informacionCuenta.withdrawnWozx += amount;\r\n\r\n                informacionCuenta.historial.push({\r\n                    tiempo: Date.now(),\r\n                    valor: amountsinfee,\r\n                    moneda: 'WOZX',\r\n                    accion: 'Sended to: '+address+' | fee: '+fee\r\n\r\n                })\r\n\r\n                var otro = null;\r\n\r\n                await this.actualizarUsuario( informacionCuenta, otro );\r\n\r\n                this.setState({\r\n                  texto: \"WOZX Sended\"\r\n                });\r\n              }else{\r\n                this.setState({\r\n                  texto: \"Error: SW-Of2-814\"\r\n                });\r\n                //no hay saldo de WOZX en Bithumb\r\n              }\r\n\r\n\r\n\r\n          }\r\n        }else{\r\n          this.setState({\r\n              texto:\"Error: ETH-Of2-829\"\r\n            });\r\n          //No tienes billetera de Ethereum registrada\r\n        }\r\n\r\n      }else{\r\n        window.alert(\"The minimum amount to withdraw is \"+fee*2+\" WOZX\");\r\n      }\r\n\r\n    }else{\r\n      window.alert(\"First register your wozx wallet and then wait for validation to use it\");\r\n\r\n    }\r\n\r\n    document.getElementById(\"amountWOZX\").value = \"\";\r\n\r\n  };\r\n\r\n  async escribireth(wallet){\r\n\r\n    this.setState({\r\n       tipo:\"button\",\r\n       boton: \"Enabling address\",\r\n       cosa: false\r\n     });\r\n\r\n    var direccion = await window.tronWeb.trx.getAccount();\r\n    direccion = window.tronWeb.address.fromHex(direccion.address);\r\n\r\n    var informacionCuenta = await this.consultarUsuario(direccion, null);\r\n\r\n    informacionCuenta.eth = true;\r\n    informacionCuenta.ethereum = wallet;\r\n\r\n    informacionCuenta.historial.push({\r\n        tiempo: Date.now(),\r\n        valor: 0,\r\n        moneda: 'ETH',\r\n        accion: 'Register new address: '+wallet\r\n\r\n    })\r\n\r\n    var otro = null;\r\n\r\n\r\n    await this.actualizarUsuario( informacionCuenta, otro );\r\n\r\n\r\n    this.setState({\r\n       tipo:\"button\",\r\n       boton: \"Address Enabled!\",\r\n       cosa: false\r\n     });\r\n\r\n\r\n  };\r\n\r\n  async enviarEth(atuh){\r\n\r\n    var dirETH = document.getElementById(\"direccioneth\").value;\r\n    var esEth = web3.utils.isAddress(dirETH);\r\n\r\n    if (esEth) {\r\n      this.setState({\r\n        tipo:\"button\",\r\n        boton: \"Enable address\",\r\n        cosa: true\r\n      });\r\n      if (atuh) {\r\n        this.escribireth(dirETH);\r\n      }\r\n\r\n\r\n    }else{\r\n      this.setState({\r\n        tipo:\"button\",\r\n        boton: \"Check address\",\r\n        cosa: false\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  async reset(){\r\n    var { informacionCuenta } = this.state;\r\n    var ethereum = informacionCuenta.ethereum;\r\n    this.setState({\r\n      alerta: \"alerta1\",\r\n      funcion: false,\r\n      value: ethereum,\r\n      boton: \"Change address\",\r\n    })\r\n  }\r\n\r\n  async vereth(){\r\n\r\n    var { direccionTRX, informacionCuenta } = this.state;\r\n\r\n    var eth = informacionCuenta.eth;\r\n    var ethereum = informacionCuenta.ethereum;\r\n\r\n\r\n    if (eth) {\r\n      this.setState({\r\n        alerta: \"alerta0\",\r\n        funcion:true,\r\n        auth: \"#invested_wozx2\",\r\n        texto: \"Withdrawal WOZX\",\r\n        walleteth: ethereum\r\n      });\r\n    }else{\r\n\r\n      if ( web3.utils.isAddress(eth.ethdireccion) ){\r\n\r\n        this.setState({\r\n          alerta: \"alerta1\",\r\n          funcion:false,\r\n          auth: \"#alert\",\r\n          texto:\"Pending to approval\",\r\n          texto2:'Your WOZX wallet then wait the validation  to use it',\r\n          value: ethereum,\r\n          boton: \"Change address\",\r\n          walleteth: ethereum\r\n        });\r\n\r\n\r\n      }else{\r\n\r\n        this.setState({\r\n          alerta: \"alerta1\",\r\n          funcion:false,\r\n          auth: \"#alert\",\r\n          texto:\"Register WOZX wallet\",\r\n          texto2:'Enter your address to receive WOZX',\r\n          value: direccionTRX,\r\n          boton: \"Check address\",\r\n          walleteth: \"Undefined address\"\r\n        });\r\n\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    var { cosa, walleteth, balanceTrx, investedWozx, auth, texto, texto2, texto3, texto4, alerta, value, tipo, boton, fee, feetrx} = this.state;\r\n\r\n    //var dirwozx = \"https://etherscan.io/token/0x34950ff2b487d9e5282c5ab342d08a2f712eb79f?a=\"+walleteth;\r\n\r\n    var dirwozx = \"https://ethplorer.io/address/\"+walleteth;\r\n\r\n    investedWozx = parseFloat(investedWozx);\r\n    investedWozx  = investedWozx.toFixed(4);\r\n\r\n    balanceTrx = parseFloat(balanceTrx);\r\n    balanceTrx = balanceTrx.toFixed(2);\r\n\r\n    return (\r\n\r\n      <div className=\"container\">\r\n\r\n        <div id=\"invested_wozx2\" className=\"row\">\r\n\r\n          <div className=\"subhead\" >\r\n            <div className=\"box\">\r\n              <h3 className=\"display-2--light\" style={{cursor: \"pointer\"}} onClick={() => this.Tron()}>Available: <br></br>{balanceTrx} TRX</h3>\r\n              <input type=\"number\" className=\"form-control amount\" id=\"amountTRX\" placeholder=\"Min. 20 TRX\"></input>\r\n              <button type=\"button\" className=\"btn btn-info\" style={{'backgroundColor': 'green','color': 'white','borderBlockColor': 'green'}} onClick={() => this.venderTRX()}>{texto3}</button>\r\n              <button type=\"button\" className=\"btn btn-info\" style={{'backgroundColor': 'orange','color': 'white','borderBlockColor': 'orange'}} onClick={() => this.withdraw()}>Withdrawal TRX</button>\r\n              <p>Fee {feetrx} TRX</p>\r\n              <hr></hr>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"subhead\" >\r\n            <div className=\"box\">\r\n\r\n              <h3 className=\"display-2--light\" style={{cursor: \"pointer\"}} onClick={() => this.Wozx()}>Available: <br></br>{investedWozx} WOZX</h3>\r\n\r\n              <input type=\"number\" className=\"form-control amount\" id=\"amountWOZX\" placeholder=\"Min 8 WOZX\"></input>\r\n              <button type=\"button\" className=\"btn btn-info\" style={{'backgroundColor': 'red','color': 'white','borderBlockColor': 'red'}} onClick={() => this.venderWozx()}>{texto4}</button>\r\n              <a className=\"btn btn-light\"  href={auth} style={{'backgroundColor': 'orange','color': 'white','borderBlockColor': 'orange'}} onClick={() => this.withdrawETH()}>{texto}</a>\r\n              <p>to: <a href={dirwozx} rel=\"noopener noreferrer\" target=\"_blank\">{walleteth}</a></p>\r\n              <p><button type=\"button\" className=\"btn btn-info\" onClick={() => this.reset()}>Change Address</button></p>\r\n              <p>Fee {fee} WOZX</p>\r\n              <hr></hr>\r\n              <div id=\"alert\" className={alerta}>\r\n                {texto2}\r\n                <br></br>\r\n                <form target=\"_blank\" action=\"auth.php\" method=\"post\">\r\n                  <input name=\"tron\" id=\"walletTron\" type=\"hidden\"  value={value} />\r\n                  <input name=\"eth\" type=\"text\" className=\"form-control\" id=\"direccioneth\" placeholder=\"0x11134Bd1dd0219eb9B4Ab931c508834EA29C0F8d\"></input>\r\n                  <button type={tipo} className=\"btn btn-info\" onClick={() => this.enviarEth(cosa)}>{boton}</button>\r\n                </form>\r\n              </div>\r\n\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport TronLinkLogo from './TronLinkLogo.png';\r\n\r\n\r\nconst WEBSTORE_URL = 'https://chrome.google.com/webstore/detail/ibnejdfjmmkpcnlpebklmnkoeoihofec/';\r\n\r\nconst logo = (\r\n    <div className='col-xs-12 col-md-4 text-center'>\r\n        <img src={ TronLinkLogo } className=\"img-fluid\" alt='TronLink logo' />\r\n    </div>\r\n);\r\n\r\nconst openTronLink = () => {\r\n    window.open(WEBSTORE_URL, '_blank');\r\n};\r\n\r\nconst TronLinkGuide = props => {\r\n    const {\r\n        installed = false\r\n    } = props;\r\n\r\n    if(!installed) {\r\n        return (\r\n            <div className='row tron contact-content aos-init aos-animate' onClick={ openTronLink }>\r\n                <div>\r\n                    <h5>TronLink Required</h5>\r\n                    <p>\r\n                        To create a post or tip others you must install TronLink. TronLink is a TRON wallet for the browser\r\n                        that can be <a href={ WEBSTORE_URL } target='_blank' rel='noopener noreferrer'>installed from the Chrome Webstore</a>.\r\n                        Once installed, return back and refresh the page.\r\n                    </p>\r\n                </div>\r\n                { logo }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className='row tron contact-content aos-init aos-animate' onClick={ openTronLink }>\r\n            <div>\r\n                <h5>Log in Required</h5>\r\n                <p>\r\n                    TronLink is installed but you must first log in. Open TronLink from the browser bar and set up your\r\n                    first wallet or decrypt a previously-created wallet.\r\n                </p>\r\n            </div>\r\n            { logo }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TronLinkGuide;","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isowner: false,\r\n      retiros: \"\",\r\n      saldo: 0\r\n    };\r\n\r\n    this.isOwner = this.isOwner.bind(this);\r\n    this.pararRetiros = this.pararRetiros.bind(this);\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    setInterval(() => this.isOwner(),10*1000);\r\n  };\r\n\r\n  async isOwner() {\r\n\r\n    var ownerContrato = await Utils.contract.owner().call();\r\n    ownerContrato = window.tronWeb.address.fromHex(ownerContrato);\r\n\r\n    var ownerTronlink = await window.tronWeb.trx.getAccount();\r\n    ownerTronlink = window.tronWeb.address.fromHex(ownerTronlink.address);\r\n\r\n    if (ownerContrato === ownerTronlink) {\r\n      let sal = await Utils.contract.InContract().call();\r\n      sal = parseInt(sal._hex)/1000000;\r\n      //console.log(sal);\r\n      let si = await Utils.contract.Do().call();\r\n\r\n      if (si) {\r\n        this.setState({\r\n          retiros: \"Deshabilitar retiros\"\r\n        });\r\n      }else{\r\n        this.setState({\r\n          retiros: \"Habilitar retiros\"\r\n        });\r\n      }\r\n\r\n      this.setState({\r\n        saldo: sal,\r\n        isowner: true\r\n\r\n      });\r\n    }else{\r\n      this.setState({\r\n        isowner: false\r\n\r\n      });\r\n    }\r\n\r\n\r\n  };\r\n\r\n  async pararRetiros() {\r\n\r\n    await Utils.contract.stopWithdrawl().send();\r\n    let si = await Utils.contract.Do().call();\r\n\r\n    if (si) {\r\n      this.setState({\r\n        retiros: \"Deshabilitar retiros y depositos\"\r\n\r\n      });\r\n      alert(\"Los retiros y depositos han sido Habilitados\")\r\n    }else{\r\n      this.setState({\r\n        retiros: \"Habilitar retiros y depositos\"\r\n\r\n      });\r\n      alert(\"Los retiros y depositos han sido Deshabilitados\")\r\n    }\r\n\r\n\r\n  };\r\n\r\n  async sacarSaldo() {\r\n\r\n    await Utils.contract.withdrawAll().send();\r\n\r\n  };\r\n\r\n\r\n  render() {\r\n    const { isowner, retiros, saldo } = this.state;\r\n    if (isowner) {\r\n      return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-six\">\r\n            <h5 className=\"card-title\">Panel Owner</h5>\r\n            <button type=\"button\" className=\"btn btn-info\" onClick={() => this.pararRetiros()}>{retiros}</button><hr></hr>\r\n            <button type=\"button\" className=\"btn btn-info\" onClick={() => this.sacarSaldo()}>Sacar {saldo} TRX</button>\r\n          </div>\r\n        </div>\r\n      </div>);\r\n    }else{\r\n      return (\r\n        <>\r\n        </>\r\n        );\r\n\r\n    }\r\n\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport TronWeb from \"tronweb\";\r\n\r\nimport Utils from \"../../utils\";\r\nimport CrowdFunding from \"../CrowdFunding\";\r\n//import Datos from \"../Datos\";\r\nimport Historial from \"../Historial/\"\r\nimport Oficina from \"../Oficina\";\r\nimport Oficina2 from \"../Oficina2\";\r\nimport TronLinkGuide from \"../TronLinkGuide\";\r\nimport PanelOwner from \"../PanelOwner\";\r\n\r\n\r\nconst FOUNDATION_ADDRESS = \"TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tronWeb: {\r\n        installed: false,\r\n        loggedIn: false\r\n      }\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await new Promise(resolve => {\r\n      const tronWebState = {\r\n        installed: !!window.tronWeb,\r\n        loggedIn: window.tronWeb && window.tronWeb.ready\r\n      };\r\n\r\n      if (tronWebState.installed) {\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        return resolve();\r\n      }\r\n\r\n      let tries = 0;\r\n\r\n      const timer = setInterval(() => {\r\n        if (tries >= 10) {\r\n\r\n          const TRONGRID_API = \"https://api.trongrid.io\";\r\n\r\n          window.tronWeb = new TronWeb(\r\n            TRONGRID_API,\r\n            TRONGRID_API,\r\n            TRONGRID_API\r\n          );\r\n\r\n          this.setState({\r\n            tronWeb: {\r\n              installed: false,\r\n              loggedIn: false\r\n            }\r\n          });\r\n          clearInterval(timer);\r\n          return resolve();\r\n        }\r\n\r\n        tronWebState.installed = !!window.tronWeb;\r\n        tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n\r\n        if (!tronWebState.installed) {\r\n          return tries++;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        resolve();\r\n      }, 100);\r\n    });\r\n\r\n    if (!this.state.tronWeb.loggedIn) {\r\n      // Set default address (foundation address) used for contract calls\r\n      // Directly overwrites the address object if TronLink disabled the\r\n      // function call\r\n      window.tronWeb.defaultAddress = {\r\n        hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\r\n        base58: FOUNDATION_ADDRESS\r\n      };\r\n\r\n      window.tronWeb.on(\"addressChange\", () => {\r\n        if (this.state.tronWeb.loggedIn) {\r\n          return;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: {\r\n            installed: true,\r\n            loggedIn: true\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    Utils.setTronWeb(window.tronWeb);\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.tronWeb.installed) return (\r\n      <>\r\n        <div className=\"container\">\r\n        <TronLinkGuide />\r\n        </div>\r\n      </>\r\n      );\r\n\r\n    if (!this.state.tronWeb.loggedIn) return (\r\n      <>\r\n        <div className=\"container\">\r\n        <TronLinkGuide installed />\r\n        </div>\r\n      </>\r\n      );\r\n\r\n    return (\r\n      <>\r\n      <div className=\"row contact-content\">\r\n            \r\n        <div className=\"contact-primary\">\r\n          \r\n          <div>\r\n            \r\n            <PanelOwner />\r\n            <Oficina /> \r\n          </div>\r\n        </div>\r\n        <div className=\"contact-secondary\">\r\n          <div className=\"contact-info\">\r\n            <CrowdFunding />\r\n            <hr></hr>\r\n            <Oficina2 />\r\n            <Historial />\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      </>\r\n      \r\n\r\n\r\n      );\r\n\r\n  }\r\n}\r\nexport default App;\r\n\r\n// {tWeb()}\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\n\r\nvar root = document.getElementById(\"root\");\r\n\r\n\r\nReactDOM.render(<App />, root);\r\n"],"sourceRoot":""}