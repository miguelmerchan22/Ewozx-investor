{"version":3,"sources":["components/TronLinkGuide/TronLinkLogo.png","utils/index.js","cons.js","components/Contract/index.js","components/CrowdFunding/index.js","components/Historial/index.js","components/Oficina/index.js","components/Oficina2/index.js","components/TronLinkGuide/index.js","components/PanelOwner/index.js","components/App/index.js","index.js"],"names":["module","exports","utils","tronWeb","contract","setTronWeb","this","setContract","contractAddress","at","cons","exchange","ccxt","bithumb","nonce","milliseconds","proxy","apiKey","secret","amountTrx","ratetrx","ratewozx","cantidadusd","descuento","tantoTrx","tantoWozx","minimo_usd","rango_minimo","walletSponsor","pry","pru","TRONGRID_API","console","log","tronApp","TronWeb2","WozxInvestor","Component","constructor","props","super","state","direccionTRX","informacionCuenta","usdtrx","min","texto","tronEnApp","priceUSDTRON","deposit","bind","rateWozx","comprarWozx","rateTRX","venderTRX","postComprarWozx","postVenderTRX","reatizarTodoPost","ordenEjecutada","minDepo","rateT","saldoApp","consultarTodosUsuarios","registrarUsuario","consultarUsuario","actualizarUsuario","actualizarDireccion","componentDidMount","Utils","window","setInterval","document","getElementById","innerHTML","trx","getAccount","account","address","fromHex","setState","proxyUrl","fetch","catch","error","response","json","market_data","current_price","usd","apiUrl","otro","datos","token","method","headers","body","JSON","stringify","mini","parseInt","MIN_DEPOSIT","call","mindepo","_hex","nuevoMinDeposit","send","registered","value","txID","transfers02","result","fetchBalance","cositas","balance","free","parseFloat","loadMarkets","precio","closing_price","toFixed","depomin","getBalance","walletApp","fromSun","balanceInSun","balanceInTRX","alert","confirm","sponsor","loc","location","href","indexOf","getString","split","GET","get","i","l","length","tmp","unescape","decodeURI","amount","miRegistro","callValue","krw","createLimitBuyOrder","orden","info","status","params","fetchOrder","id","monto","depositoTron","balanceTrx","historial","push","tiempo","Date","now","valor","moneda","accion","ejecutar","acc","nOrden","tron","numeroDeOrden","_amountTrx","createLimitSellOrder","costo","cost","cantidadWozx","fillPost","render","className","type","placeholder","style","onClick","verHistorial","direccion","usuario","splice","o","ver","evento","key","toString","fontSize","title","width","height","overflow","rango","ganancia","refe","link","withdrawnTrx","investedWozx","withdrawnWozx","wozxPe","wozxCa","miPrecioWozx","priceUSDWOZX","Investors","enviarWozx","Link","Wozx","rateW","then","data","err","mydireccion","range","prof","p","wozxPendig","nivel","cantidad","accountAddress","isAddress","informacionDestino","text","aria-describedby","cursor","tipo","auth","texto3","texto4","fee","feetrx","funcion","alerta","balanceRef","totalRef","invested","paidAt","my","withdrawn","withdraw","venderWozx","comprarTRX","enviarTron","vereth","withdrawETH","enviarEth","Tron","total","amountTrxsindescuento","investors","COMISION_TRON","COMISION_RETIRO","orden2","params2","aumentar","precioUsdTron","recompensa","contractApp","depositoWozx","retirarTron","informacionSponsor","amountpararefer","depositoTronUsuario","depositpendiente","pending","res","cancelDepo","firmarTx","redeposit","transfers","transfers01","ope","retirarWozx","c","w","wozx","wallet","ownerContrato","undefined","currency","versacado","withdrawableWozx","My","mywithdrawableWozx","withdrawableTrx","hay","minre","InContract","balanceContract","balanceTrxYo","tronDisponible","tag2","sacado","amountsinfee","ethereum","web3","escribireth","boton","cosa","eth","atuh","dirETH","walleteth","ethdireccion","texto2","dirwozx","rel","target","action","name","WEBSTORE_URL","logo","src","TronLinkLogo","alt","openTronLink","open","TronLinkGuide","installed","isowner","retiros","saldo","isOwner","pararRetiros","owner","ownerTronlink","sal","Do","stopWithdrawl","sacarSaldo","withdrawAll","App","loggedIn","Promise","resolve","tronWebState","ready","tries","timer","TronWeb","clearInterval","defaultAddress","hex","toHex","base58","on","root","ReactDOM"],"mappings":"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","file":"static/js/main.09cc3409.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/TronLinkLogo.f8e7d99a.png\";","const utils = {\r\n  tronWeb: false,\r\n  contract: false,\r\n\r\n  setTronWeb(tronWeb) {\r\n    this.tronWeb = tronWeb;\r\n  },\r\n\r\n  async setContract(tronWeb, contractAddress) {\r\n    this.contract = await tronWeb.contract().at(contractAddress);\r\n  }\r\n};\r\n\r\nexport default utils;\r\n","import {APP_AK, APP_SK, APP_WO, APP_MT} from \"@env\";\r\n\r\nconst AK = APP_AK;\r\nconst SK = APP_SK;\r\nconst WO = APP_WO;\r\nconst proxy = \"https://proxy-ewozx.herokuapp.com/\";\r\nconst mongo = \"https://ewozx-mdb.herokuapp.com/\";\r\nconst MT = APP_MT;\r\nconst PRU = \"shasta.\";// shasta1. para inhabilitar red de pruebas\r\nconst WS = \"TB7RTxBPY4eMvKjceXj8SWjVnZCrWr4XvF\";//T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb recibe los huerfanos por defecto\r\nconst descuento = 0.002;// 0.24 o 24% queda en la plataforma el restante se usa para comprar el 76% en wozx para los usuarios\r\nconst WOZX = 0.07; // para que el WOZX se Compre de inmediato\r\nconst TRX = 0.035; // para que el TRX se Venda de inmediato\r\nconst SC = \"TPgF934xxAq1ff25ybra52CPAJvpxara2r\";// direccion del contrato\r\nconst USD = 1; // minimo de inversion en dolares USD (100)\r\nconst SD = 0.1; // 10% de sensibilidad para modificar el precio minimo de inversion\r\nconst EX = \"TB7RTxBPY4eMvKjceXj8SWjVnZCrWr4XvF\"; //wallet de of exchange\r\n\r\nconst FEEW = 4; //fee de retiro del wozx por la platafora de ethereum\r\nconst FEET = 10; //fee de retiro del Tron por medio del contrato\r\n\r\nexport default {AK, SK, WO, proxy, PRU, WS, descuento, WOZX, TRX, SC, USD, SD, EX, FEEW, FEET, mongo, MT};\r\n","\r\nimport cons from \"../../cons.js\";\r\n\r\nconst contractAddress = cons.SC;\r\n\r\nexport default contractAddress;","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport TronWeb2 from 'tronweb';\r\nimport ccxt from 'ccxt';\r\n\r\nimport contractAddress from \"../Contract\";\r\nimport cons from \"../../cons.js\";\r\n\r\nconst exchange = new ccxt.bithumb({\r\n    nonce () { return this.milliseconds () }\r\n});\r\n\r\nexchange.proxy = cons.proxy;\r\nexchange.apiKey = cons.AK;\r\nexchange.secret = cons.SK;\r\n\r\nvar amountTrx = 0;\r\nvar ratetrx = 0;\r\nvar ratewozx = 0;\r\nvar cantidadusd = 0;\r\n\r\nvar descuento = cons.descuento;\r\nvar tantoTrx = cons.TRX;\r\nvar tantoWozx = cons.WOZX;\r\nvar minimo_usd = cons.USD;\r\nvar rango_minimo = cons.SD;\r\nvar walletSponsor = cons.WS;\r\n\r\n//console.log(contractAddress);\r\n\r\nconst pry = cons.WO;\r\n\r\nvar pru = \"\";\r\nif (cons.PRU === \"shasta.\") {\r\n  pru = cons.PRU;\r\n\r\n}\r\n\r\nconst TRONGRID_API = \"https://api.\"+pru+\"trongrid.io\";\r\nconsole.log(TRONGRID_API);\r\n\r\nconst tronApp = new TronWeb2(\r\n  TRONGRID_API,\r\n  TRONGRID_API,\r\n  TRONGRID_API,\r\n  pry\r\n);\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      direccionTRX: \"\",\r\n      informacionCuenta: {},\r\n      amountTrx: \"\",\r\n      usdtrx: \"\",\r\n      min: 3000,\r\n      texto: \"Deposit TRX\",\r\n      tronEnApp: 0,\r\n      priceUSDTRON: 0\r\n\r\n    };\r\n\r\n    this.deposit = this.deposit.bind(this);\r\n    this.rateWozx = this.rateWozx.bind(this);\r\n    this.comprarWozx = this.comprarWozx.bind(this);\r\n    this.rateTRX = this.rateTRX.bind(this);\r\n    this.venderTRX = this.venderTRX.bind(this);\r\n    this.postComprarWozx = this.postComprarWozx.bind(this);\r\n    this.postVenderTRX = this.postVenderTRX.bind(this);\r\n    this.reatizarTodoPost = this.reatizarTodoPost.bind(this);\r\n    this.ordenEjecutada = this.ordenEjecutada.bind(this);\r\n    this.minDepo = this.minDepo.bind(this);\r\n    this.rateT = this.rateT.bind(this);\r\n    this.saldoApp = this.saldoApp.bind(this);\r\n\r\n    this.consultarTodosUsuarios = this.consultarTodosUsuarios.bind(this);\r\n    this.registrarUsuario = this.registrarUsuario.bind(this);\r\n    this.consultarUsuario = this.consultarUsuario.bind(this);\r\n    this.actualizarUsuario = this.actualizarUsuario.bind(this);\r\n\r\n    this.actualizarDireccion = this.actualizarDireccion.bind(this);\r\n\r\n\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    setInterval(() => this.reatizarTodoPost(),120*1000);\r\n    this.minDepo();\r\n    setInterval(() => this.minDepo(),30*1000);\r\n    setInterval(() => this.actualizarDireccion(),3*1000);\r\n    await this.actualizarDireccion();\r\n    var { direccionTRX } = this.state;\r\n    await this.consultarUsuario(direccionTRX,false);\r\n    setInterval(() => this.consultarUsuario(direccionTRX,false),3*1000);\r\n    this.reatizarTodoPost();\r\n\r\n  };\r\n\r\n  async actualizarDireccion() {\r\n\r\n    document.getElementById(\"linkContrato\").innerHTML = \"<a class='smoothscroll'   href='https://\"+pru+\"tronscan.org/#/contract/\"+contractAddress+\"/code' target='_blank' rel='noopener noreferrer'>Contract</a>\";\r\n\r\n    var account =  await window.tronWeb.trx.getAccount();\r\n    account = window.tronWeb.address.fromHex(account.address);\r\n\r\n    this.setState({\r\n      direccionTRX: account\r\n    });\r\n\r\n  };\r\n\r\n  async rateT(){\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = 'https://api.coingecko.com/api/v3/coins/tron';\r\n    const response = await fetch(proxyUrl+apiUrl)\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n    console.log(json.market_data.current_price.usd);\r\n    this.setState({\r\n      priceUSDTRON: json.market_data.current_price.usd\r\n    });\r\n    return json.market_data.current_price.usd;\r\n\r\n\r\n  };\r\n\r\n  async consultarTodosUsuarios(){\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'consultar/todos';\r\n    const response = await fetch(proxyUrl+apiUrl)\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n    console.log(json);\r\n\r\n    return json;\r\n\r\n  };\r\n\r\n  async consultarUsuario(direccionTRX, otro){\r\n\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'consultar/'+direccionTRX;\r\n    const response = await fetch(proxyUrl+apiUrl)\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n\r\n    if (!otro) {\r\n      this.setState({\r\n        informacionCuenta: json\r\n      });\r\n      return json;\r\n    }else{\r\n\r\n      console.log(json);\r\n      return json;\r\n    }\r\n\r\n  };\r\n\r\n  async actualizarUsuario( datos, otro ){\r\n    //Asegura que es el usuario conectado con tronlink\r\n    await this.actualizarDireccion();\r\n    var { direccionTRX } = this.state;\r\n    //encaso de recibir otro usiario se escoge el uasuario enviado para ser actualizado\r\n    if ( otro ) {\r\n      direccionTRX = otro;\r\n    }\r\n\r\n    datos.token = cons.MT;\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'actualizar/'+direccionTRX;\r\n    const response = await fetch(proxyUrl+apiUrl, {\r\n       method: 'POST',\r\n       headers: {\r\n        'Content-Type': 'application/json'\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n       body: JSON.stringify(datos)\r\n    })\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n\r\n    console.log(json);\r\n    return json;\r\n\r\n  };\r\n\r\n  async registrarUsuario(datos){\r\n    //Asegura que es el usuario conectado\r\n    var { direccionTRX } = this.state;\r\n    //console.log(direccionTRX);\r\n    datos.token = cons.MT;\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'registrar/'+direccionTRX;\r\n    const response = await fetch(proxyUrl+apiUrl, {\r\n       method: 'POST',\r\n       headers: {\r\n        'Content-Type': 'application/json'\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n       body: JSON.stringify(datos)\r\n    })\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n\r\n    console.log(json);\r\n    return true;\r\n\r\n\r\n  };\r\n\r\n  async minDepo(){\r\n\r\n    var priceUSDTRON = await this.rateT();\r\n\r\n    var mini = parseInt(minimo_usd/priceUSDTRON);\r\n\r\n    var mindepo = await Utils.contract.MIN_DEPOSIT().call();\r\n    mindepo = parseInt(mindepo._hex)/1000000;\r\n\r\n    if ( mini > 0 && mindepo !== mini && ( ( mindepo >= mini+mini*rango_minimo) || ( mindepo <= mini-mini*rango_minimo) ) ) {\r\n\r\n      let contract = await tronApp.contract().at(contractAddress);//direccion del contrato para la W app\r\n      await contract.nuevoMinDeposit( mini * 1000000 ).send();\r\n      this.setState({\r\n        min: mini+1,\r\n\r\n      });\r\n      console.log(\"EVENTO: Nuevo minimo de deposito \"+mini+\" TRX // anterior \"+mindepo+\" TRX\");\r\n\r\n    }else{\r\n      this.setState({\r\n        min: mindepo+1,\r\n      });\r\n      console.log(\"INFO: Minimo de deposito \"+mini+\" TRX // aplicación \"+mindepo+\" TRX\");\r\n    }\r\n\r\n    await this.actualizarDireccion();// asegura que es la wallet conectada con el tronlik\r\n    var { direccionTRX } = this.state;\r\n    await this.consultarUsuario(direccionTRX,false);\r\n    var { informacionCuenta } = this.state;\r\n\r\n    if (!informacionCuenta.registered) {\r\n      document.getElementById(\"amount\").value = \"\";\r\n      this.setState({\r\n        texto:\"Click to register\"\r\n      });\r\n    }else{\r\n      this.setState({\r\n        texto:\"Deposit TRX\"\r\n      });\r\n    }\r\n    const contract = await tronApp.contract().at(contractAddress);\r\n    var transPe = 0;\r\n    //console.log(transPe.valor_hex)\r\n    if (transPe > 0) {\r\n      await contract.transfers().send();\r\n\r\n    }\r\n\r\n    var cantidadEnvio = 0;\r\n    //console.log(cantidadEnvio);\r\n\r\n    //console.log(cantidadEnvio);\r\n    if (cantidadEnvio > 0) {\r\n      var abono = 1-cons.descuento;\r\n      var txID = await tronApp.trx.sendTransaction(cons.EX, cantidadEnvio*abono);\r\n      await contract.transfers02(txID.result).send();\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n  };\r\n\r\n  async saldoApp(){\r\n\r\n    var cositas = await exchange.fetchBalance();\r\n\r\n    cositas = cositas['TRX'];\r\n\r\n    var balance = cositas;\r\n    //console.log(balance);\r\n    balance = balance.free;\r\n\r\n    balance = parseFloat(balance);\r\n    //console.log(balance);\r\n\r\n\r\n    this.setState({\r\n      tronEnApp: balance\r\n    });\r\n\r\n\r\n  };\r\n\r\n  async rateTRX(){\r\n\r\n    var cositas = await exchange.loadMarkets();\r\n\r\n    cositas = cositas['TRX/KRW'];\r\n\r\n    var precio = cositas['info'];\r\n    precio = precio.closing_price;\r\n\r\n    precio = parseFloat(precio);\r\n    console.log(precio); //precio en KRW\r\n\r\n\r\n    ratetrx = precio-precio*tantoTrx;\r\n    ratetrx = parseFloat(ratetrx.toFixed(2));\r\n\r\n    console.log(ratetrx);\r\n\r\n\r\n\r\n  };\r\n\r\n  async venderTRX(){\r\n\r\n    await this.saldoApp();\r\n    await this.rateTRX();\r\n\r\n    this.setState({\r\n      texto:\"Please wait\"\r\n    });\r\n\r\n    // verifica el monto sea mayor a minimo\r\n    amountTrx = document.getElementById(\"amount\").value;\r\n\r\n    var result = false;\r\n\r\n    var depomin = await Utils.contract.MIN_DEPOSIT().call();\r\n    depomin = parseInt(depomin._hex)/1000000;\r\n    console.log(depomin);\r\n\r\n    // mira que el saldo de la wallet app sea por lo menos 1000 TRX\r\n    var walletApp = await tronApp.trx.getBalance();\r\n    walletApp = window.tronWeb.fromSun(walletApp); //string\r\n    walletApp = parseInt(walletApp);//number\r\n\r\n    console.log(walletApp);\r\n\r\n    // verifica si ya esta registrado\r\n    await this.actualizarDireccion();// asegura que es la wallet conectada con el tronlik\r\n    var { direccionTRX } = this.state;\r\n    await this.consultarUsuario(direccionTRX,false);\r\n    var { informacionCuenta } = this.state;\r\n\r\n    const balanceInSun = await window.tronWeb.trx.getBalance(); //number\r\n    var balanceInTRX = window.tronWeb.fromSun(balanceInSun); //string\r\n    balanceInTRX = parseInt(balanceInTRX);//number\r\n\r\n    if (walletApp > 1000){\r\n\r\n      if (informacionCuenta.registered) {\r\n\r\n        if (amountTrx <= 0 || amountTrx > balanceInTRX-50) {\r\n\r\n          if ( amountTrx <= 0 ) {\r\n            window.alert(\"Please enter a correct amount\");\r\n          }\r\n\r\n          if (amountTrx > balanceInTRX-50) {\r\n            window.alert(\"You not enough TRON\");\r\n          }\r\n\r\n          document.getElementById(\"amount\").value = \"\";\r\n          this.setState({\r\n            texto:\"Deposit TRX\"\r\n          });\r\n\r\n        }else{\r\n\r\n          result = window.confirm(\"You are sure that you want to invest \"+amountTrx+\" TRX?, remember that this action have cost\");\r\n\r\n        }\r\n\r\n        if (result) {\r\n\r\n          if (amountTrx >= depomin && amountTrx <= balanceInTRX-50) {\r\n            this.deposit();\r\n          }\r\n\r\n        }else{\r\n          if ( depomin >= amountTrx ){\r\n            this.setState({\r\n              texto:\"Enter a higher amount\"\r\n            });\r\n          }\r\n\r\n          if (balanceInTRX-50 <= amountTrx ){\r\n            this.setState({\r\n              texto:\"Not enough TRON\"\r\n            });\r\n          }\r\n\r\n        }\r\n\r\n      }else{\r\n        if ( balanceInTRX >= 100) {\r\n            //registra a la persona con los referidos\r\n            var sponsor = walletSponsor;\r\n            var loc = document.location.href;\r\n            if(loc.indexOf('?')>0){\r\n                var getString = loc.split('?')[1];\r\n                var GET = getString.split('&');\r\n                var get = {};\r\n                for(var i = 0, l = GET.length; i < l; i++){\r\n                    var tmp = GET[i].split('=');\r\n                    get[tmp[0]] = unescape(decodeURI(tmp[1]));\r\n                }\r\n\r\n                if (get['ref']) {\r\n                  tmp = get['ref'].split('#');\r\n\r\n                  var infoSponsor = await this.consultarUsuario(tmp[0],true);\r\n\r\n                  if ( infoSponsor.registered ) {\r\n                    sponsor = tmp[0];\r\n                  }\r\n                }\r\n            }\r\n\r\n            document.getElementById(\"amount\").value = 50;\r\n\r\n            await this.actualizarDireccion();\r\n            direccionTRX = this.state;\r\n\r\n            var amount = parseInt(50 * 1000000);\r\n\r\n            if(await Utils.contract.miRegistro().send({ callValue: amount})) {\r\n\r\n              await this.registrarUsuario({ sponsor: sponsor });\r\n\r\n              document.getElementById(\"amount\").value = \"\";\r\n              this.setState({\r\n                texto:\"Registration completed\"\r\n              });\r\n            }else{\r\n            document.getElementById(\"amount\").value = \"\";\r\n            this.setState({\r\n              texto:\"Not enough TRON or cancelled\"\r\n            });\r\n\r\n          }\r\n\r\n\r\n        }else{\r\n          window.alert(\"You wallet will has 100 trx to do the register\");\r\n        }\r\n      }\r\n    }else {\r\n      window.alert(\"Please contact the administrator Code: IMT-E-WA\");\r\n      // IMT-E-WA = Ingrese Mas Tron En la  Wallet de la Aplicación.\r\n      console.log(\"Minimo de 1000 tron Alcanzado ingresa más tron a la wallet de la plicación: \"+cons.SC)\r\n    }\r\n\r\n\r\n  };\r\n\r\n  async rateWozx(){\r\n\r\n    var cositas = await exchange.loadMarkets();\r\n\r\n    cositas = cositas['WOZX/KRW'];\r\n\r\n    var precio = cositas['info'];\r\n    precio = precio.closing_price;\r\n\r\n    precio = parseInt(precio);\r\n    console.log(precio);\r\n\r\n    ratewozx = precio+precio*tantoWozx;\r\n\r\n    ratewozx = parseInt(ratewozx);\r\n\r\n    //console.log(ratewozx);\r\n\r\n\r\n\r\n  }\r\n\r\n  async comprarWozx(krw){\r\n\r\n    await this.rateWozx();\r\n\r\n    this.setState({\r\n      texto:\"Processing...\"\r\n    });\r\n\r\n    var amount = krw/ratewozx;\r\n    amount = amount.toFixed(4);\r\n    console.log(amount);\r\n\r\n    var orden = await exchange.createLimitBuyOrder('WOZX/KRW', amount, ratewozx);\r\n\r\n    console.log(orden);\r\n\r\n    if (orden.info.status === \"0000\") {\r\n\r\n      var symbol = \"WOZX/KRW\";\r\n      var params = {};\r\n\r\n      var cositas = await exchange.fetchOrder(orden.id, symbol, params);\r\n\r\n      var monto = cositas.amount;\r\n\r\n      console.log(monto)\r\n\r\n    }else{\r\n      this.setState({\r\n        texto:\"Error: U-Cf-408\"\r\n      });\r\n      //No hay suficiente saldo de USD en Bithumb.com\r\n    }\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  async deposit() {\r\n\r\n    let amount = document.getElementById(\"amount\").value;\r\n\r\n    this.setState({\r\n      texto:\"Reciving TRON\"\r\n    });\r\n\r\n    amount = parseInt(amount * 1000000);\r\n\r\n    if ( await Utils.contract.depositoTron().send({callValue: amount }) ) {\r\n\r\n      amount = amount/1000000;\r\n\r\n      var { informacionCuenta } = this.state;\r\n\r\n      informacionCuenta.balanceTrx += amount;\r\n\r\n      informacionCuenta.historial.push({\r\n          tiempo: Date.now(),\r\n          valor: amount,\r\n          moneda: 'TRX',\r\n          accion: 'Deposit to plataform'\r\n\r\n      })\r\n\r\n      var otro = null;\r\n\r\n      await this.actualizarUsuario( informacionCuenta, otro );\r\n\r\n      this.setState({\r\n        texto:\"Done deposit TRX\"\r\n      });\r\n\r\n    }else{\r\n\r\n      this.setState({\r\n        texto:\"Canceled for User\"\r\n      });\r\n    }\r\n\r\n    document.getElementById(\"amount\").value = \"\";\r\n\r\n\r\n  };\r\n\r\n\r\n  async reatizarTodoPost(){\r\n\r\n    await this.saldoApp();\r\n\r\n    var { tronEnApp } = this.state;\r\n\r\n    var orden = 0;\r\n    var ejecutar = 0;\r\n\r\n    if ( orden.acc && tronEnApp >= ejecutar ){\r\n      await this.postVenderTRX(orden.nOrden, orden.tron);\r\n    }else{\r\n      if (orden.acc) {\r\n        console.log(\"ALERTA: Ingrese almenos \"+ejecutar+\" TRON a Bithumb.com para ejecutar las ordenes pendientes\");\r\n      }else{\r\n        console.log(\"INFO: No hay ordenes pendientes\");\r\n      }\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n  async postVenderTRX(numeroDeOrden, _amountTrx){\r\n\r\n    await this.rateTRX();\r\n\r\n    amountTrx = _amountTrx-_amountTrx*descuento;\r\n\r\n    amountTrx = amountTrx.toFixed(2);\r\n\r\n    amountTrx = parseFloat(amountTrx);\r\n\r\n    console.log(amountTrx);\r\n\r\n    var orden = await exchange.createLimitSellOrder('TRX/KRW', amountTrx, ratetrx)\r\n\r\n    if (orden.info.status === \"0000\") {\r\n        this.setState({\r\n          texto:\"Buying WOZX\"\r\n        });\r\n\r\n        var symbol = \"TRX/KRW\";\r\n        var params = {};\r\n\r\n        var cositas = await exchange.fetchOrder (orden.id, symbol, params);\r\n\r\n        var monto = cositas.amount;\r\n        var costo = cositas.cost;\r\n        console.log(monto);\r\n\r\n        cantidadusd = costo;\r\n\r\n        console.log(cantidadusd);\r\n\r\n\r\n        this.postComprarWozx(cantidadusd, numeroDeOrden);\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n  async postComprarWozx(usd, numeroDeOrden){\r\n\r\n    await this.rateWozx();\r\n\r\n    var amount = usd/ratewozx;\r\n\r\n    amount = amount.toFixed(4);\r\n\r\n    amount = parseFloat(amount);\r\n\r\n    console.log(amount);\r\n\r\n    var orden = await exchange.createLimitBuyOrder('WOZX/KRW', amount, ratewozx)\r\n\r\n    if (orden.info.status === \"0000\") {\r\n\r\n        var symbol = \"WOZX/KRW\";\r\n        var params = {};\r\n\r\n        var cositas = await exchange.fetchOrder (orden.id, symbol, params);\r\n\r\n        var monto = cositas.amount;\r\n\r\n        console.log(monto);\r\n\r\n        var cantidadWozx = monto;\r\n\r\n        console.log(cantidadWozx);\r\n\r\n        //la app actualiza en blockchain la orden POST se completo\r\n        this.ordenEjecutada(numeroDeOrden, parseInt(cantidadWozx*1000000));\r\n\r\n    }else{\r\n      console.log(\"Ingrese más KRW a Bithumb.com\");\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n  };\r\n\r\n  async ordenEjecutada(numeroDeOrden, cantidadWozx){\r\n\r\n    // se emite que la orden POST ya fue ejecutada\r\n\r\n    let contract = await tronApp.contract().at(contractAddress);\r\n    await contract.fillPost(numeroDeOrden, cantidadWozx).send();\r\n\r\n    console.log(\"Orden POST N°: \"+numeroDeOrden+\" se ejecutó exitosamente por: \"+cantidadWozx/1000000+\" WOZX\");\r\n\r\n  }\r\n\r\n  render() {\r\n    var { min, texto} = this.state;\r\n\r\n    min = \"Min. deposit \"+min+\" TRX\";\r\n\r\n    return (\r\n\r\n      <div className=\"card wow bounceInUp\">\r\n        <div className=\"card-body\">\r\n        <header className=\"section-header\">\r\n              <h3>Make a deposit</h3>\r\n          </header>\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <input type=\"number\" className=\"form-control amount\" id=\"amount\" placeholder={min}></input>\r\n                <p className=\"card-text\">You must have ~ 40 TRX to make the transaction</p>\r\n              </div>\r\n            </form>\r\n          <button type=\"button\" className=\"btn btn-light\" style={{'backgroundColor': 'green','color': 'white','borderBlockColor': 'green'}} onClick={() => this.venderTRX()}>{texto}</button>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\nimport cons from \"../../cons.js\";\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      historial: []\r\n\r\n    }\r\n\r\n    this.verHistorial = this.verHistorial.bind(this);\r\n    this.consultarUsuario = this.consultarUsuario.bind(this);\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    this.verHistorial();\r\n    setInterval(() => this.verHistorial(),360*1000);\r\n  };\r\n\r\n  async consultarUsuario(direccionTRX, otro){\r\n\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = 'https://ewozx-mdb.herokuapp.com/consultar/'+direccionTRX;\r\n    const response = await fetch(proxyUrl+apiUrl)\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n\r\n    if (!otro) {\r\n      this.setState({\r\n        informacionCuenta: json\r\n      });\r\n      return json;\r\n    }else{\r\n\r\n      console.log(json);\r\n      return json;\r\n    }\r\n\r\n  };\r\n\r\n  async verHistorial(){\r\n\r\n    var { historial } = this.state;\r\n\r\n    var direccion =  await window.tronWeb.trx.getAccount();\r\n    direccion = window.tronWeb.address.fromHex(direccion.address);\r\n\r\n    var usuario =  await this.consultarUsuario(direccion, false);\r\n\r\n    if ( usuario.registered ) {\r\n\r\n      if ( usuario.historial.length > 0) {\r\n        historial.splice(0);\r\n        var o = 0\r\n        if (usuario.historial.length > 10) {\r\n          o = usuario.historial.length-10;\r\n        }\r\n        for (var i = o; i < usuario.historial.length; i++) {\r\n\r\n          var ver = usuario.historial[i];\r\n          ver.tiempo = new Date(ver.tiempo);\r\n          //console.log(ver);\r\n\r\n          let evento = (\r\n            <div className=\"col-full\" key={i.toString()}>\r\n              <span style={{fontSize: '18px'}} title={ver.tiempo}> {ver.valor} | {ver.moneda} | {ver.accion} </span>\r\n            </div>\r\n          );\r\n          historial.splice(0,0,evento);\r\n          this.setState({\r\n            historial: historial\r\n          });\r\n\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n  };\r\n\r\n  render() {\r\n    var { historial } = this.state;\r\n\r\n    const divStyle = {\r\n      width: '100%',\r\n      height:'115px',\r\n      overflow: 'scroll'\r\n    };\r\n\r\n    return (\r\n\r\n      <div>\r\n        <h3>Transactions <button type=\"button\" className=\"btn btn-light\" onClick={() => this.verHistorial()}>Reload</button></h3>\r\n\r\n        <div style={divStyle}>\r\n\r\n          {historial}\r\n\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nimport cons from \"../../cons.js\";\r\n\r\nimport ccxt from 'ccxt';\r\n\r\nconst exchange = new ccxt.bithumb({\r\n    nonce () { return this.milliseconds () }\r\n});\r\n\r\nexchange.proxy = cons.proxy;\r\nexchange.apiKey = cons.AK;\r\nexchange.secret = cons.SK;\r\n\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      rango: \"N/A\",\r\n      ganancia: 0,\r\n      refe: [],\r\n      direccion: \"\",\r\n      link: \"Make an investment to get the referral LINK\",\r\n      registered: false,\r\n      balanceTrx: \"0\",\r\n      withdrawnTrx: \"0\",\r\n      investedWozx: \"0\",\r\n      withdrawnWozx: \"0\",\r\n      wozxPe: false,\r\n      wozxCa: 0,\r\n      miPrecioWozx: 0,\r\n      priceUSDWOZX: 0\r\n\r\n    };\r\n\r\n    this.Investors = this.Investors.bind(this);\r\n    this.enviarWozx = this.enviarWozx.bind(this);\r\n    this.Link = this.Link.bind(this);\r\n    this.Wozx = this.Wozx.bind(this);\r\n    this.rateW = this.rateW.bind(this);\r\n\r\n    this.consultarUsuario = this.consultarUsuario.bind(this);\r\n    this.actualizarDireccion = this.actualizarDireccion.bind(this);\r\n    this.actualizarUsuario = this.actualizarUsuario.bind(this);\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    this.rateW();\r\n    await this.Link();\r\n    setInterval(() => this.Link(),3*1000);\r\n    await this.Investors();\r\n    setInterval(() => this.Investors(),10*1000);\r\n  };\r\n\r\n  async consultarUsuario(direccionTRX, otro){\r\n\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'consultar/'+direccionTRX;\r\n    const response = await fetch(proxyUrl+apiUrl)\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n\r\n    if (!otro) {\r\n      this.setState({\r\n        informacionCuenta: json\r\n      });\r\n      return json;\r\n    }else{\r\n\r\n      console.log(json);\r\n      return json;\r\n    }\r\n\r\n  };\r\n\r\n  async actualizarDireccion() {\r\n\r\n    var account =  await window.tronWeb.trx.getAccount();\r\n    account = window.tronWeb.address.fromHex(account.address);\r\n\r\n    this.setState({\r\n      direccionTRX: account\r\n    });\r\n\r\n  };\r\n\r\n  async actualizarUsuario( datos, otro ){\r\n    //Asegura que es el usuario conectado con tronlink\r\n    await this.actualizarDireccion();\r\n    var { direccionTRX } = this.state;\r\n    //encaso de recibir otro usiario se escoge el uasuario enviado para ser actualizado\r\n    if ( otro ) {\r\n      direccionTRX = otro;\r\n    }\r\n\r\n    datos.token = cons.MT;\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'actualizar/'+direccionTRX;\r\n    const response = await fetch(proxyUrl+apiUrl, {\r\n       method: 'POST',\r\n       headers: {\r\n        'Content-Type': 'application/json'\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n       body: JSON.stringify(datos)\r\n    })\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n\r\n    console.log(json);\r\n    return json;\r\n\r\n  };\r\n\r\n  async rateW(){\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = 'https://api.coingecko.com/api/v3/coins/wozx';\r\n    fetch(proxyUrl+apiUrl).then(response => {\r\n      return response.json();\r\n    }).then(data => {\r\n      // Work with JSON data\r\n      this.setState({\r\n        priceUSDWOZX: data.market_data.current_price.usd\r\n      });\r\n\r\n    }).catch(err => {\r\n        console.log(err)\r\n\r\n    });\r\n\r\n  };\r\n\r\n  async Wozx (){\r\n\r\n    const { investedWozx } = this.state;\r\n\r\n    document.getElementById(\"cantidadwozx\").value = investedWozx;\r\n\r\n  };\r\n\r\n  async Link() {\r\n    const {registered} = this.state;\r\n    if(registered){\r\n\r\n      let loc = document.location.href;\r\n      if(loc.indexOf('?')>0){\r\n        loc = loc.split('?')[0];\r\n        loc = loc.split('#')[0];\r\n      }\r\n      let mydireccion = await window.tronWeb.trx.getAccount();\r\n      mydireccion = window.tronWeb.address.fromHex(mydireccion.address)\r\n      mydireccion = loc+'?ref='+mydireccion;\r\n      this.setState({\r\n        link: mydireccion,\r\n      });\r\n    }else{\r\n      this.setState({\r\n        link: \"Haz una inversión para obtener el LINK de referido\",\r\n      });\r\n    }\r\n  }\r\n\r\n  async Investors() {\r\n\r\n    this.rateW();\r\n\r\n    const {investedWozx, priceUSDWOZX} = this.state;\r\n\r\n    var direccion = await window.tronWeb.trx.getAccount();\r\n    direccion = direccion = window.tronWeb.address.fromHex(direccion.address);\r\n\r\n    var usuario =  await this.consultarUsuario(direccion, false);\r\n    var range = \"N/A\";\r\n    var prof = usuario.rango;\r\n\r\n    prof = prof.toFixed(2);\r\n    prof = parseFloat(prof);\r\n    //console.log(prof);\r\n    if (prof > 0 && prof < 1000  ) {\r\n      range = \"PIONEER\"\r\n    }\r\n    if (prof >= 1000 && prof < 5000  ) {\r\n      range = \"ZAPHIRE\"\r\n    }\r\n    if (prof >= 5000 && prof < 20000  ) {\r\n      range = \"RUBY\"\r\n    }\r\n    if (prof >= 20000 && prof < 50000  ) {\r\n      range = \"ESMERALDA\"\r\n    }\r\n    if (prof >= 50000 && prof < 140000  ) {\r\n      range = \"DIAMANTE\"\r\n    }\r\n    if (prof >= 140000 && prof < 400000  ) {\r\n      range = \"DIAMANTE AZUL\"\r\n    }\r\n    if (prof >= 400000 && prof < 1000000  ) {\r\n      range = \"DIAMANTE NEGRO\"\r\n    }\r\n    if (prof >= 1000000) {\r\n      range = \"DIAMANTE CORONA\"\r\n    }\r\n    //console.log(prof);\r\n\r\n\r\n    this.setState({\r\n      direccion: direccion,\r\n      registered: usuario.registered,\r\n      balanceTrx: usuario.balanceTrx,\r\n      withdrawnTrx: usuario.withdrawnTrx,\r\n      investedWozx: usuario.investedWozx,\r\n      withdrawnWozx: usuario.withdrawnWozx,\r\n      wozxPe: usuario.p,\r\n      wozxCa: usuario.wozxPendig,\r\n      refe: usuario.nivel,\r\n      rango: range,\r\n      ganancia: prof,\r\n      miPrecioWozx: investedWozx*priceUSDWOZX\r\n    });\r\n\r\n  };\r\n\r\n  async enviarWozx(){\r\n\r\n    const {investedWozx} = this.state;\r\n\r\n    let direccion = document.getElementById(\"enviartronwozx\").value;\r\n    var cantidad = document.getElementById(\"cantidadwozx\").value;\r\n\r\n    var account =  await window.tronWeb.trx.getAccount();\r\n    var accountAddress = account.address;\r\n    accountAddress = window.tronWeb.address.fromHex(accountAddress);\r\n\r\n    var result= false;\r\n\r\n    console.log(direccion.length);\r\n    if ( !window.tronWeb.isAddress(direccion) || accountAddress === direccion ) {\r\n\r\n      window.alert(\"Please enter a correct address\");\r\n      document.getElementById(\"enviartronwozx\").value = \"\";\r\n\r\n    }else{\r\n\r\n\r\n      if (cantidad <= 0 || cantidad === \"\" || cantidad > investedWozx) {\r\n        window.alert(\"Please enter a correct amount\");\r\n        document.getElementById(\"cantidadwozx\").value = \"\";\r\n\r\n      }else{\r\n\r\n        result = window.confirm(\"You are sure that you want to SEND \"+cantidad+\" Wozx?, remember that this action cannot be reversed\");\r\n\r\n      }\r\n\r\n    }\r\n\r\n    account =  await window.tronWeb.trx.getAccount();\r\n    accountAddress = account.address;\r\n    accountAddress = window.tronWeb.address.fromHex(accountAddress);\r\n\r\n    var informacionCuenta = await this.consultarUsuario(accountAddress, true);\r\n    var informacionDestino = await this.consultarUsuario(direccion, true);\r\n\r\n    if (result && await Utils.contract.enviarWozx(direccion, parseInt(cantidad*1000000)).send() && informacionCuenta.registered && informacionDestino.registered) {\r\n\r\n      informacionCuenta.investedWozx -= cantidad;\r\n      informacionCuenta.withdrawnWozx += cantidad;\r\n      informacionCuenta.historial.push({\r\n          tiempo: Date.now(),\r\n          valor: cantidad,\r\n          moneda: 'WOZX',\r\n          accion: 'Sed to: '+direccion\r\n\r\n      })\r\n\r\n      var otro = accountAddress;\r\n      await this.actualizarUsuario( informacionCuenta, otro);\r\n\r\n      informacionDestino.investedWozx += cantidad;\r\n      informacionDestino.withdrawnWozx -= cantidad;\r\n      informacionDestino.historial.push({\r\n          tiempo: Date.now(),\r\n          valor: cantidad,\r\n          moneda: 'WOZX',\r\n          accion: 'Send From: '+accountAddress\r\n\r\n      })\r\n\r\n      otro = direccion;\r\n      await this.actualizarUsuario( informacionDestino, otro);\r\n\r\n      document.getElementById(\"cantidadwozx\").value = \"\";\r\n\r\n    }\r\n\r\n  };\r\n\r\n\r\n  render() {\r\n    var {miPrecioWozx, wozxPe, wozxCa, refe, balanceTrx, withdrawnTrx, investedWozx,  withdrawnWozx , direccion, link, rango, ganancia} = this.state;\r\n\r\n\r\n\r\n\r\n    if ( wozxPe ) {\r\n      wozxPe =\"(~ \"+wozxCa+\" WOZX)\";\r\n    }else{\r\n      wozxPe =\"\";\r\n    }\r\n\r\n\r\n    withdrawnTrx = parseFloat(withdrawnTrx);\r\n    withdrawnTrx = withdrawnTrx.toFixed(4);\r\n\r\n    investedWozx = parseFloat(investedWozx);\r\n    investedWozx  = investedWozx.toFixed(4);\r\n\r\n    withdrawnWozx = parseFloat(withdrawnWozx);\r\n    withdrawnWozx = withdrawnWozx.toFixed(4);\r\n\r\n    balanceTrx = parseFloat(balanceTrx);\r\n    balanceTrx = balanceTrx.toFixed(2);\r\n\r\n    return (\r\n\r\n      <div id=\"officer\" className=\"container\">\r\n\r\n        <header style={{'textAlign': 'center'}} className=\"section-header\">\r\n          <h3 className=\"white\"><span style={{'fontWeight': 'bold'}}>\r\n          My office:</span> <br></br>\r\n          <span style={{'fontSize': '18px'}}>\r\n\r\n            {direccion} <br />\r\n            <span className=\"subhead\">{investedWozx} WOZX =</span> $ {miPrecioWozx.toFixed(2)} USD <br />\r\n            <span className=\"subhead\">Career range:</span><a href=\"/range.html\"> {rango} </a> <br />\r\n            <span className=\"subhead\">Profits:</span> $ {ganancia} USD\r\n\r\n          </span></h3><br />\r\n          <ul className=\"stats-tabs\">\r\n            <li><a href=\"#officer\">{refe[0]} <em>Level 1</em></a></li>\r\n            <li><a href=\"#officer\">{refe[1]} <em>Level 2</em></a></li>\r\n            <li><a href=\"#officer\">{refe[2]} <em>Level 3</em></a></li>\r\n            <li><a href=\"#officer\">{refe[3]} <em>Level 4</em></a></li>\r\n            <li><a href=\"#officer\">{refe[4]} <em>Level 5</em></a></li>\r\n            <li><a href=\"#officer\">{refe[5]} <em>Level 6</em></a></li>\r\n            <li><a href=\"#officer\">{refe[6]} <em>Level 7</em></a></li>\r\n            <li><a href=\"#officer\">{refe[7]} <em>Level 8</em></a></li>\r\n            <li><a href=\"#officer\">{refe[8]} <em>Level 9</em></a></li>\r\n            <li><a href=\"#officer\">{refe[9]} <em>Level 10</em></a></li>\r\n          </ul>\r\n\r\n          <h3 className=\"white\" style={{'fontWeight': 'bold'}}>Referral link:</h3>\r\n          <h6 className=\"white\" ><a href={link}>{link}</a>&nbsp;<br /><br />\r\n          <CopyToClipboard text={link}>\r\n            <button type=\"button\" className=\"btn btn-info\">Copy to clipboard</button>\r\n          </CopyToClipboard>\r\n          </h6>\r\n          <hr></hr>\r\n\r\n        </header>\r\n\r\n        <div className=\"row centrartexto\">\r\n\r\n          <div className=\"col-five\">\r\n\r\n              <h1 className=\"subhead\">Balance</h1>\r\n              <h3 className=\"display-2--light\">{investedWozx} WOZX</h3>\r\n              <h3 className=\"display-2--light\">{wozxPe}</h3>\r\n              <hr></hr>\r\n\r\n          </div>\r\n\r\n          <div className=\"col-seven\">\r\n\r\n              <h1 className=\"subhead\">Withdrawn</h1>\r\n              <h3 className=\"display-2--light\">{withdrawnWozx} WOZX</h3>\r\n              <hr></hr>\r\n\r\n          </div>\r\n        </div>\r\n        <div className=\"row centrartexto\">\r\n\r\n          <div className=\"col-five\">\r\n\r\n              <h1 className=\"subhead\">Balance</h1>\r\n              <h3 className=\"display-2--light\">{balanceTrx} TRX</h3>\r\n              <hr></hr>\r\n\r\n          </div>\r\n\r\n          <div className=\"col-seven\">\r\n\r\n              <h1 className=\"subhead\">Withdrawn</h1>\r\n              <h3 className=\"display-2--light\">{withdrawnTrx} TRX</h3>\r\n              <hr></hr>\r\n\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"row centrartexto\">\r\n\r\n          <div className=\"col-seven\">\r\n\r\n              <h3 className=\"display-2--light\"> Send WOZX to USER:</h3>\r\n              <input type=\"text\" className=\"form-control\" id=\"enviartronwozx\" aria-describedby=\"emailHelp\" placeholder=\"Tron wallet Member\" />\r\n              <small id=\"emailHelp\" className=\"form-text text-muted\">make sure the address is well written, once sent, this action cannot be reversed</small>\r\n\r\n\r\n          </div>\r\n\r\n          <div className=\"col-five\">\r\n\r\n              <h3 className=\"display-2--light\" style={{cursor: \"pointer\"}} onClick={() => this.Wozx()}> Available {investedWozx} WOZX</h3>\r\n              <input type=\"number\" className=\"form-control\" id=\"cantidadwozx\" aria-describedby=\"emailHelp\" placeholder=\"how much WOZX\" />\r\n              <a className=\"btn btn-light\"  href=\"#enviartronwozx\" style={{'backgroundColor': 'red','color': 'white','borderBlockColor': 'red'}} onClick={() => this.enviarWozx()}>send WOZX</a>\r\n\r\n          </div>\r\n\r\n          <hr />\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nimport cons from \"../../cons.js\";\r\n\r\nimport TronWeb2 from 'tronweb';\r\n\r\nimport web3 from 'web3';\r\n\r\nimport ccxt from 'ccxt';\r\n\r\nconst exchange = new ccxt.bithumb({\r\n    nonce () { return this.milliseconds () }\r\n});\r\n\r\nexchange.proxy = cons.proxy;\r\nexchange.apiKey = cons.AK;\r\nexchange.secret = cons.SK;\r\n\r\nvar tantoTrx = cons.TRX;// para que el TRX se Venda de inmediato\r\nvar tantoWozx = cons.WOZX;// para que el WOZX se venda de inmediato\r\n\r\nvar minimo_usd = cons.USD;\r\n\r\nvar amountTrx = 0;\r\nvar ratetrx = 0;\r\nvar ratewozx = 0;\r\n\r\nvar descuento = cons.descuento;\r\n\r\nconst pry = cons.WO;\r\n\r\nvar pru = \"\";\r\nif (cons.PRU === \"shasta.\") {\r\n  pru = cons.PRU;\r\n}\r\n\r\nconst TRONGRID_API = \"https://api.\"+pru+\"trongrid.io\";\r\nconsole.log(TRONGRID_API);\r\n\r\nconst tronApp = new TronWeb2(\r\n  TRONGRID_API,\r\n  TRONGRID_API,\r\n  TRONGRID_API,\r\n  pry\r\n);\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      ratetrx: \"\",\r\n      ratewozx: \"\",\r\n      tipo: \"button\",\r\n      auth: \"/auth.html\",\r\n      texto: \"Loading...\",\r\n      texto3: \"Buy WOZX <- TRX\",\r\n      texto4:\"Sell WOZX -> TRX\",\r\n      value: \"\",\r\n      fee: cons.FEEW,\r\n      feetrx: cons.FEET,\r\n      funcion: false,\r\n      alerta: \"alerta0\",\r\n      direccion: \"\",\r\n      registered: false,\r\n      balanceRef: 0,\r\n      totalRef: 0,\r\n      invested: 0,\r\n      paidAt: 0,\r\n      my: 0,\r\n      withdrawn: 0\r\n\r\n    };\r\n\r\n    this.Investors = this.Investors.bind(this);\r\n    this.withdraw = this.withdraw.bind(this);\r\n    this.rateWozx = this.rateWozx.bind(this);\r\n    this.venderWozx = this.venderWozx.bind(this);\r\n    this.rateTRX = this.rateTRX.bind(this);\r\n    this.comprarTRX = this.comprarTRX.bind(this);\r\n    this.enviarTron = this.enviarTron.bind(this);\r\n    this.vereth = this.vereth.bind(this);\r\n    this.withdrawETH = this.withdrawETH.bind(this);\r\n    this.enviarEth = this.enviarEth.bind(this);\r\n    this.saldoApp = this.saldoApp.bind(this);\r\n    this.Wozx = this.Wozx.bind(this);\r\n    this.Tron = this.Tron.bind(this);\r\n    this.rateT = this.rateT.bind(this);\r\n    this.venderTRX = this.venderTRX.bind(this);\r\n    this.comprarWozx = this.comprarWozx.bind(this);\r\n    this.deposit = this.deposit.bind(this);\r\n\r\n    this.consultarUsuario = this.consultarUsuario.bind(this);\r\n    this.actualizarDireccion = this.actualizarDireccion.bind(this);\r\n    this.actualizarUsuario = this.actualizarUsuario.bind(this);\r\n\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    await this.Investors();\r\n    await this.vereth();\r\n    await this.enviarEth();\r\n    setInterval(() => this.Investors(),10*1000);\r\n    setInterval(() => this.vereth(),10*1000);\r\n    setInterval(() => this.enviarEth(),3*1000);\r\n  };\r\n\r\n  async actualizarUsuario( datos, otro ){\r\n    //Asegura que es el usuario conectado con tronlink\r\n    await this.actualizarDireccion();\r\n    var { direccionTRX } = this.state;\r\n    //encaso de recibir otro usiario se escoge el uasuario enviado para ser actualizado\r\n    if ( otro ) {\r\n      direccionTRX = otro;\r\n    }\r\n\r\n    datos.token = cons.MT;\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'actualizar/'+direccionTRX;\r\n    const response = await fetch(proxyUrl+apiUrl, {\r\n       method: 'POST',\r\n       headers: {\r\n        'Content-Type': 'application/json'\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n       body: JSON.stringify(datos)\r\n    })\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n\r\n    console.log(json);\r\n    return json;\r\n\r\n  };\r\n\r\n  async actualizarDireccion() {\r\n\r\n    var account =  await window.tronWeb.trx.getAccount();\r\n    account = window.tronWeb.address.fromHex(account.address);\r\n\r\n    this.setState({\r\n      direccionTRX: account\r\n    });\r\n\r\n  };\r\n\r\n  async consultarUsuario(direccionTRX, otro){\r\n\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'/consultar/'+direccionTRX;\r\n    const response = await fetch(proxyUrl+apiUrl)\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n\r\n    if (!otro) {\r\n      this.setState({\r\n        informacionCuenta: json\r\n      });\r\n      return json;\r\n    }else{\r\n\r\n      console.log(json);\r\n      return json;\r\n    }\r\n\r\n  };\r\n\r\n  async Wozx (){\r\n\r\n    const { investedWozx } = this.state;\r\n\r\n    document.getElementById(\"amountWOZX\").value = investedWozx;\r\n\r\n  };\r\n\r\n  async Tron (){\r\n\r\n    const { balanceTrx } = this.state;\r\n\r\n    document.getElementById(\"amountTRX\").value = balanceTrx;\r\n\r\n  };\r\n\r\n  async saldoApp(){\r\n\r\n    var cositas = await exchange.fetchBalance();\r\n\r\n    cositas = cositas['TRX'];\r\n\r\n    var balance = cositas;\r\n    balance = balance.total;\r\n\r\n    balance = parseFloat(balance);\r\n    console.log(balance);\r\n\r\n    this.setState({\r\n      tronEnApp: balance\r\n    });\r\n\r\n\r\n\r\n  };\r\n\r\n\r\n  async rateTRX(){\r\n\r\n    var cositas = await exchange.loadMarkets();\r\n\r\n    cositas = cositas['TRX/KRW'];\r\n\r\n    var precio = cositas['info'];\r\n    precio = precio.closing_price;\r\n\r\n    precio = parseFloat(precio);\r\n    console.log(precio); //precio en KRW\r\n\r\n\r\n    ratetrx = precio-precio*tantoTrx;\r\n    ratetrx = parseFloat(ratetrx.toFixed(2));\r\n\r\n    //console.log(ratetrx);\r\n\r\n\r\n  };\r\n\r\n  async rateT(){\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = 'https://api.coingecko.com/api/v3/coins/tron';\r\n    const response = await fetch(proxyUrl+apiUrl)\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n\r\n    console.log(json.market_data.current_price.usd);\r\n    this.setState({\r\n      priceUSDTRON: json.market_data.current_price.usd\r\n    });\r\n    return json.market_data.current_price.usd;\r\n\r\n\r\n  };\r\n\r\n  async venderTRX(){\r\n\r\n    await this.saldoApp();\r\n    await this.rateTRX();\r\n\r\n    this.setState({\r\n      texto3:\"Please wait\"\r\n    });\r\n\r\n    // verifica el monto sea mayor a minimo\r\n    amountTrx = document.getElementById(\"amountTRX\").value;\r\n    amountTrx = parseFloat(amountTrx);\r\n    var amountTrxsindescuento = amountTrx;\r\n\r\n    var depomin = await Utils.contract.MIN_DEPOSIT().call();\r\n    depomin = parseInt(depomin._hex)/1000000;\r\n    // verifica si ya esta registrado\r\n    const account =  await window.tronWeb.trx.getAccount();\r\n    var accountAddress = account.address;\r\n    accountAddress = window.tronWeb.address.fromHex(accountAddress);\r\n\r\n    var investors = await Utils.contract.investors(accountAddress).call();\r\n    //console.log(investors);\r\n\r\n    if ( amountTrx <= 0 || amountTrx === \"\" ) {\r\n      window.alert(\"Please enter a correct amount\");\r\n      document.getElementById(\"amountTRX\").value = \"\";\r\n      this.setState({\r\n        texto3:\"Buy WOZX <- TRX\"\r\n      });\r\n\r\n    }else{\r\n      var COMISION_RETIRO = await Utils.contract.COMISION_TRON().call();\r\n        COMISION_RETIRO = parseInt(COMISION_RETIRO._hex)/1000000;\r\n      var result = window.confirm(\"You are sure you want to reinvest \"+amountTrx+\" TRX? this action cost \"+COMISION_RETIRO+\" TRX\");\r\n    }\r\n\r\n\r\n\r\n    if ( result && investors.registered ) {\r\n        if ( amountTrx >= depomin ) {\r\n          amountTrx = amountTrx - amountTrx*descuento;\r\n          amountTrx = amountTrx.toFixed(2);\r\n\r\n          var orden = await exchange.createLimitSellOrder('TRX/KRW', amountTrx, ratetrx)\r\n\r\n          if (orden.info.status === \"0000\") {\r\n              this.setState({\r\n                texto:\"Buying WOZX\"\r\n              });\r\n              var symbol = \"TRX/KRW\";\r\n              var params = {};\r\n              //vende el tron y obtiene KRW\r\n              orden = await exchange.fetchOrder (orden.id, symbol, params);\r\n\r\n              this.setState({\r\n                texto3:\"Buying WOZX\"\r\n              });\r\n\r\n              this.comprarWozx(orden.cost, amountTrxsindescuento, accountAddress);\r\n\r\n          }else{\r\n              this.setState({\r\n                texto3:\"Error: T-Of2-267\"\r\n              });\r\n              //No hay suficiente TRON en su exchange\r\n            }\r\n\r\n        }else{\r\n          if ( depomin >= amountTrx ){\r\n            this.setState({\r\n              texto3:\"Enter a higher amount\"\r\n            });\r\n          }\r\n\r\n        }\r\n\r\n    }else{\r\n      document.getElementById(\"amount\").value = \"\";\r\n\r\n      this.setState({\r\n        texto3:\"Not registered or canceled\"\r\n      });\r\n\r\n\r\n    }\r\n\r\n    this.setState({\r\n      texto3:\"Buy WOZX <- TRX\"\r\n    });\r\n\r\n\r\n  };\r\n\r\n  async rateWozx(){\r\n\r\n    var cositas = await exchange.loadMarkets();\r\n\r\n    cositas = cositas['WOZX/KRW'];\r\n\r\n    var precio = cositas['info'];\r\n    precio = precio.closing_price;\r\n\r\n    precio = parseInt(precio);\r\n    console.log(precio);\r\n\r\n    ratewozx = precio+precio*tantoWozx;\r\n\r\n    ratewozx = parseInt(ratewozx);\r\n\r\n    return ratewozx;\r\n\r\n\r\n  }\r\n\r\n  async comprarWozx( usd, amountTrxsindescuento, accountAddress ){\r\n\r\n    await this.rateWozx();\r\n\r\n    this.setState({\r\n      texto3:\"Processing...\"\r\n    });\r\n\r\n    let amount = usd/parseFloat(ratewozx);\r\n\r\n    amount = amount.toFixed(4);\r\n    amount = parseFloat(amount);\r\n    console.log(amount);\r\n\r\n    var orden2 = await exchange.createLimitBuyOrder('WOZX/KRW', amount, ratewozx);\r\n\r\n    console.log(orden2);\r\n\r\n    if ( orden2.info.status === \"0000\" ) {\r\n\r\n      var symbol2 = \"WOZX/KRW\";\r\n      var params2 = {};\r\n\r\n      orden2 = await exchange.fetchOrder(orden2.id, symbol2, params2);\r\n\r\n      var otro = null;\r\n\r\n      var informacionCuenta = await this.consultarUsuario(accountAddress, otro);\r\n\r\n      var aumentar = false;\r\n      var precioUsdTron = await this.rateT();\r\n\r\n      informacionCuenta.rango += precioUsdTron*amountTrxsindescuento;\r\n      informacionCuenta.balanceTrx -= amountTrxsindescuento;\r\n      informacionCuenta.withdrawnTrx += amountTrxsindescuento;\r\n      if (!informacionCuenta.recompensa) {\r\n        informacionCuenta.recompensa = true;\r\n        aumentar =  true;\r\n      }\r\n\r\n      informacionCuenta.historial.push({\r\n          tiempo: Date.now(),\r\n          valor: amountTrxsindescuento,\r\n          moneda: 'TRX',\r\n          accion: 'Selled'\r\n\r\n      })\r\n\r\n      informacionCuenta.investedWozx += orden2.amount;\r\n\r\n      informacionCuenta.historial.push({\r\n          tiempo: Date.now(),\r\n          valor: orden2.amount,\r\n          moneda: 'WOZX',\r\n          accion: 'Invested'\r\n\r\n      })\r\n\r\n      otro = null;\r\n\r\n      var contractApp = await tronApp.contract().at(contractAddress);\r\n\r\n      if ( await contractApp.depositoWozx(informacionCuenta.direccion, parseInt(orden2.amount*1000000)).send() && await Utils.contract.retirarTron( amountTrxsindescuento*1000000 ).send() ) {\r\n\r\n        await this.actualizarUsuario( informacionCuenta, otro );\r\n\r\n        //repartir recompensa referidos\r\n        informacionCuenta = await this.consultarUsuario(accountAddress, otro);\r\n        var informacionSponsor = await this.consultarUsuario(informacionCuenta.sponsor, true);\r\n\r\n        if ( window.tronWeb.isAddress(informacionCuenta.sponsor) && informacionSponsor.registered) {\r\n\r\n          var recompensa = [0.05, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.01];\r\n\r\n          this.setState({\r\n            texto3:\"Redwarding referers\"\r\n          });\r\n          for (var i = 0; i < recompensa.length; i++) {\r\n\r\n            if (informacionSponsor.registered && informacionSponsor.recompensa ) {\r\n\r\n              informacionSponsor.balanceTrx += amountTrxsindescuento*recompensa[i];\r\n\r\n              if (aumentar) {\r\n                informacionSponsor.nivel[i]++;\r\n              }\r\n\r\n              informacionSponsor.rango += precioUsdTron*amountTrxsindescuento*recompensa[i];\r\n              informacionSponsor.historial.push({\r\n                  tiempo: Date.now(),\r\n                  valor: amountTrxsindescuento*recompensa[i],\r\n                  moneda: 'TRX',\r\n                  accion: 'Redward Referer'\r\n\r\n              })\r\n\r\n              otro = informacionSponsor.direccion;\r\n\r\n              var amountpararefer = amountTrxsindescuento*recompensa[i]*1000000;\r\n\r\n              await contractApp.depositoTronUsuario(informacionSponsor.direccion, parseInt(amountpararefer)).send();\r\n\r\n              await this.actualizarUsuario( informacionSponsor, otro);\r\n\r\n              informacionSponsor = await this.consultarUsuario( informacionSponsor.sponsor, true);\r\n\r\n            }\r\n\r\n            if ( informacionSponsor.direccion === cons.WS ) {\r\n              break;\r\n            }\r\n\r\n          }\r\n        }\r\n\r\n        this.setState({\r\n          texto3:\"success!\"\r\n        });\r\n      }else{\r\n        this.setState({\r\n          texto3:\"Try again Later, server Bussy\"\r\n        });\r\n      }\r\n\r\n\r\n\r\n      document.getElementById(\"amountTRX\").value = \"\";\r\n\r\n      }else{\r\n        this.setState({\r\n          texto3:\"Error: U-Of2-422\"\r\n        });\r\n        //No hay suficiente saldo de USD en Gate.io\r\n      }\r\n\r\n\r\n\r\n\r\n  };\r\n\r\n\r\n  async deposit(orden) {\r\n\r\n    let amount = document.getElementById(\"amountTRX\").value;\r\n\r\n      orden = orden * 1000000;\r\n      orden = parseInt(orden);\r\n      console.log(orden);\r\n\r\n      var account =  await window.tronWeb.trx.getAccount();\r\n      var accountAddress = account.address;\r\n      accountAddress = window.tronWeb.address.fromHex(accountAddress);\r\n\r\n      this.setState({\r\n        texto3:\"Sign order\"\r\n      });\r\n\r\n      let contract = await tronApp.contract().at(contractAddress);//direccion del contrato\r\n      var pending = await contract.depositpendiente(accountAddress).call();\r\n\r\n      console.log(pending);\r\n      //cancela cualquier deposito inconcluso para hacer uno nuevo\r\n      if (pending.res) {\r\n        console.log(pending);\r\n        await contract.cancelDepo(accountAddress).send();\r\n      }\r\n\r\n\r\n      //crea una nueva orden directa\r\n      await contract.firmarTx(accountAddress, orden).send();\r\n\r\n      this.setState({\r\n        texto3:\"Reciving TRON\"\r\n      });\r\n\r\n      account =  await window.tronWeb.trx.getAccount();\r\n      accountAddress = account.address;\r\n      accountAddress = window.tronWeb.address.fromHex(accountAddress);\r\n\r\n      amount = parseInt(amount * 1000000);\r\n\r\n      await Utils.contract.redeposit(accountAddress, amount).send();\r\n\r\n      this.setState({\r\n        texto3:\"Handing out rewards\"\r\n      });\r\n\r\n      await contract.transfers().send();\r\n      await contract.transfers01().send();\r\n      this.setState({\r\n        texto3:\"Buy WOZX -> TRX\"\r\n      });\r\n\r\n\r\n    document.getElementById(\"amountTRX\").value = \"\";\r\n\r\n\r\n  };\r\n\r\n\r\n\r\n  async venderWozx(){\r\n\r\n    this.setState({\r\n      texto4:\"Please wait...\"\r\n    });\r\n\r\n    await this.rateWozx();\r\n\r\n    ratewozx = ratewozx-ratewozx*tantoWozx*2;\r\n    ratewozx = parseInt(ratewozx);\r\n\r\n    console.log(tantoWozx);\r\n    console.log(ratewozx);\r\n\r\n    const {investedWozx} = this.state;\r\n\r\n    var amount = document.getElementById(\"amountWOZX\").value;\r\n\r\n    var ope = minimo_usd/ratewozx;\r\n    ope = ope.toFixed(4);\r\n    ope = parseFloat(ope);\r\n\r\n    var result = false;\r\n    if ( amount >= ope ) {\r\n\r\n      if (amount <= 0 || amount === \"\" || amount > investedWozx) {\r\n        window.alert(\"Please enter a correct amount\");\r\n\r\n      }else{\r\n        result = window.confirm(\"You are sure you want to SELL \"+amount+\" Wozx?, remember that this action cannot be reversed\");\r\n\r\n      }\r\n    }else{\r\n      window.alert(\"The minimum to operate is \"+ope+\" WOZX\");\r\n    }\r\n\r\n    amount = parseFloat(amount);\r\n    amount = amount.toFixed(4);\r\n    amount = parseFloat(amount);\r\n\r\n    var contractApp = await tronApp.contract().at(contractAddress);\r\n\r\n    if (result && amount > 0 && investedWozx > 0 && amount <= investedWozx && await contractApp.retirarWozx( parseInt( amount * 1000000 ) ).send()){\r\n\r\n      console.log( { amount, ratewozx } );\r\n\r\n      var orden = await exchange.createLimitSellOrder('WOZX/KRW', amount, ratewozx)\r\n\r\n      console.log(orden);\r\n\r\n      console.log(orden.info.status);\r\n\r\n      if (orden.info.status === \"0000\") {\r\n          this.setState({\r\n            texto4:\"Selling WOZX\"\r\n          });\r\n\r\n          var symbol = \"WOZX/KRW\";\r\n          var params = {};\r\n\r\n          var cositas = await exchange.fetchOrder (orden.id, symbol, params);\r\n\r\n          var costo = cositas.cost;\r\n          var monto = cositas.amount;\r\n\r\n          console.log(costo);\r\n          console.log(monto);\r\n\r\n          var cantidadusd = costo;\r\n          var cantidadWozx = monto;\r\n\r\n          var { informacionCuenta } = this.state;\r\n\r\n          informacionCuenta.investedWozx -= monto;\r\n          informacionCuenta.withdrawnWozx += monto;\r\n\r\n          informacionCuenta.historial.push({\r\n              tiempo: Date.now(),\r\n              valor: amount,\r\n              moneda: 'WOZX',\r\n              accion: 'Selled'\r\n\r\n          })\r\n\r\n          var otro = null;\r\n\r\n          await this.actualizarUsuario( informacionCuenta, otro );\r\n\r\n          console.log(cantidadusd);\r\n\r\n        this.comprarTRX(cantidadusd, cantidadWozx);\r\n      }\r\n\r\n\r\n    }\r\n\r\n    document.getElementById(\"amountWOZX\").value = \"\";\r\n\r\n    this.setState({\r\n      texto4:\"Sell WOZX -> TRX\"\r\n    });\r\n\r\n  };\r\n\r\n\r\n  async comprarTRX(c, w){\r\n\r\n    await this.rateTRX();\r\n\r\n    ratetrx = ratetrx+ratetrx*tantoTrx*2;\r\n    ratetrx = ratetrx.toFixed(2);\r\n    ratetrx = parseInt(ratetrx);\r\n    console.log(ratetrx);\r\n\r\n    let amount = c/ratetrx;\r\n\r\n    amount = amount.toFixed(2)\r\n    amount = parseFloat(amount);\r\n\r\n    var orden = await exchange.createLimitBuyOrder('TRX/KRW', amount, ratetrx);\r\n\r\n    console.log(orden);\r\n\r\n    if (orden.info.status === \"0000\") {\r\n\r\n      var symbol = \"TRX/KRW\";\r\n      var params = {};\r\n\r\n      var cositas = await exchange.fetchOrder(orden.id, symbol, params);\r\n\r\n      var monto = cositas.amount;\r\n\r\n      console.log(monto)\r\n\r\n      var { informacionCuenta } = this.state;\r\n\r\n      informacionCuenta.balanceTrx += monto;\r\n\r\n      informacionCuenta.historial.push({\r\n          tiempo: Date.now(),\r\n          valor: monto,\r\n          moneda: 'TRX',\r\n          accion: 'From wozx invested'\r\n\r\n      })\r\n\r\n      var otro = null;\r\n\r\n      await this.actualizarUsuario( informacionCuenta, otro );\r\n\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  async enviarTron(trx, wozx){\r\n\r\n\r\n    //enviar el tron a la direccion del contrato\r\n    let wallet = await window.tronWeb.trx.getAccount();\r\n    wallet = window.tronWeb.address.fromHex(wallet.address)\r\n\r\n    if (false) {\r\n\r\n      let amount = trx;\r\n      let currency = \"TRX\";\r\n\r\n      // envia el saldo necesario a la direccion del contrato // si está en pruebas se lo envia al owner\r\n      var address;\r\n      if (cons.PRU) {\r\n        let ownerContrato = await Utils.contract.owner().call();\r\n        ownerContrato = window.tronWeb.address.fromHex(ownerContrato);\r\n        address = ownerContrato;\r\n        wallet = ownerContrato;\r\n      }else{\r\n        address = contractAddress;\r\n      }\r\n\r\n      console.log(\"se envio \"+trx+\" TRX a \"+wallet+\" exitosamente\");\r\n\r\n      //console.log(address);\r\n\r\n      var tag = undefined;\r\n      var params = {};\r\n\r\n      var versacado = await exchange.withdraw(currency, amount, address, tag, params);\r\n      console.log(versacado);\r\n\r\n    }\r\n\r\n  };\r\n\r\n  async Investors() {\r\n\r\n    var direccion = await window.tronWeb.trx.getAccount();\r\n    direccion = window.tronWeb.address.fromHex(direccion.address);\r\n    let My = await Utils.contract.withdrawableWozx().call();\r\n\r\n    //console.log(My);\r\n\r\n    var usuario =  await this.consultarUsuario(direccion, false);\r\n    //console.log(usuario);\r\n\r\n    this.setState({\r\n      direccion: direccion,\r\n      registered: usuario.registered,\r\n      balanceTrx: usuario.balanceTrx,\r\n      investedWozx: usuario.investedWozx,\r\n      mywithdrawableWozx: parseInt(My._hex)/1000000\r\n    });\r\n\r\n  };\r\n\r\n  async withdraw(){\r\n\r\n    var hay = await Utils.contract.withdrawableTrx().call();\r\n    var minre = await Utils.contract.COMISION_TRON().call();\r\n    var balanceContract = await Utils.contract.InContract().call();\r\n\r\n    var amount = document.getElementById(\"amountTRX\").value;\r\n    amount = parseFloat(amount);\r\n\r\n    hay = parseInt(hay._hex)/1000000;\r\n    minre = parseInt(minre._hex)/1000000;\r\n    balanceContract = parseInt(balanceContract._hex)/1000000;\r\n\r\n    const account =  await window.tronWeb.trx.getAccount();\r\n    var accountAddress = window.tronWeb.address.fromHex(account.address);\r\n    var investors = await Utils.contract.investors(accountAddress).call();\r\n    var balanceTrxYo = parseInt(investors.tronDisponible._hex)/1000000;\r\n\r\n    console.log(balanceTrxYo);\r\n    console.log(balanceContract);\r\n    console.log(hay);\r\n    console.log(minre);\r\n\r\n\r\n    if (amount <= 0 || amount === \"\" || amount > balanceTrxYo ) {\r\n      window.alert(\"Please enter a correct amount\")\r\n      document.getElementById(\"amountTRX\").value = \"\";\r\n\r\n    }else{\r\n      var result = window.confirm(\"You are sure that you want to WITHDRAW \"+amount+\" TRX?, remember that this action cost \"+minre+\" TRX\");\r\n\r\n    }\r\n\r\n\r\n    if ( result ){\r\n\r\n      if ( hay >= minre*2 &&  amount >= minre*2 ) {\r\n\r\n\r\n        if ( balanceContract >= amount && amount < 150 && await Utils.contract.withdraw( amount*1000000 ).send() ) {\r\n\r\n          var informacionCuenta = await this.consultarUsuario(accountAddress, null);\r\n\r\n          console.log(informacionCuenta);\r\n          informacionCuenta.balanceTrx -= amount;\r\n          informacionCuenta.withdrawnTrx += amount;\r\n\r\n          informacionCuenta.historial.push({\r\n              tiempo: Date.now(),\r\n              valor: amount,\r\n              moneda: 'TRX',\r\n              accion: 'Withdrawl'\r\n\r\n          })\r\n\r\n          var otro = null;\r\n\r\n          await this.actualizarUsuario( informacionCuenta, otro );\r\n\r\n          document.getElementById(\"amountTRX\").value = \"\";\r\n        }else{\r\n\r\n          if ( await Utils.contract.retirarTron( amount*1000000 ).send() ) {\r\n\r\n            informacionCuenta = await this.consultarUsuario(accountAddress, null);\r\n\r\n            if ( window.tronWeb.isAddress(informacionCuenta.direccion)) {\r\n\r\n              var currency2 = \"TRX\";\r\n              var tag2 = informacionCuenta.direccion;\r\n              var params2 = {};\r\n\r\n              this.setState({\r\n                texto: \"Sendig TRX\"\r\n              });\r\n\r\n              var sacado = await exchange.withdraw(currency2, amount, informacionCuenta.direccion, tag2, params2);\r\n\r\n              console.log(sacado);\r\n\r\n              if (sacado.info.status  === \"0000\") {\r\n\r\n                this.setState({\r\n                  texto: \"TRX sended!\"\r\n                });\r\n\r\n                informacionCuenta.balanceTrx -= amount;\r\n                informacionCuenta.withdrawnTrx += amount;\r\n\r\n                informacionCuenta.historial.push({\r\n                    tiempo: Date.now(),\r\n                    valor: amount,\r\n                    moneda: 'TRX',\r\n                    accion: 'Sended to: '+informacionCuenta.direccion\r\n\r\n                });\r\n\r\n                otro = null;\r\n\r\n                await this.actualizarUsuario( informacionCuenta, otro );\r\n              }\r\n\r\n              document.getElementById(\"amountTRX\").value = \"\";\r\n\r\n          }\r\n        }\r\n}\r\n\r\n      }else{\r\n\r\n        if ( hay < minre*2 ) {\r\n          window.alert(\"Youn no have TRX aviable, minimum of withdraw is \"+minre*2+\" TRX\");\r\n        }\r\n\r\n        if ( amount < minre*2 ) {\r\n          window.alert(\"Minimum of withdraw is \"+minre*2+\" TRX\");\r\n        }\r\n\r\n        if ( balanceContract < amount ){\r\n          window.alert(\"The Aplication in this moment no have TRX available, Try again Later\");\r\n        }\r\n\r\n    }\r\n    }\r\n\r\n  };\r\n\r\n  async withdrawETH(){\r\n\r\n    const { funcion, investedWozx, fee } = this.state;\r\n\r\n    var amount = document.getElementById(\"amountWOZX\").value;\r\n\r\n    var result = false;\r\n\r\n\r\n\r\n    if ( funcion ) {\r\n\r\n      if ( amount >= fee*2 ) {\r\n\r\n        if (amount <= 0 || amount === \"\" || amount > investedWozx) {\r\n          window.alert(\"Please enter a correct amount\");\r\n          document.getElementById(\"amountWOZX\").value = \"\";\r\n        }else{\r\n\r\n          result = window.confirm(\"You are sure that you want to WITHDRAW \"+amount+\" Wozx?, remember that this action cannot be reversed\");\r\n        }\r\n\r\n        if ( result && investedWozx > 0 && await Utils.contract.retirarWozx( amount*1000000 ).send() ){\r\n\r\n          if (amount <= investedWozx && investedWozx > fee) {\r\n            var amountsinfee = amount;\r\n            amount = amount-fee;\r\n            amount = amount.toString();\r\n\r\n            var direccion = await window.tronWeb.trx.getAccount();\r\n            direccion = window.tronWeb.address.fromHex(direccion.address);\r\n\r\n            var informacionCuenta = await this.consultarUsuario(direccion, null);\r\n            var address = informacionCuenta.ethereum;\r\n\r\n            if (cons.PRU  === \"shasta.\") {\r\n\r\n              if (web3.utils.isAddress(informacionCuenta.ethereum)) {\r\n                address = informacionCuenta.ethereum;\r\n              }else{\r\n                address = \"0x11134Bd1dd0219eb9B4Ab931c508834EA29C0F8d\";\r\n              }\r\n\r\n            }\r\n\r\n              var currency2 = \"WOZX\";\r\n              var tag2 = direccion;\r\n              var params2 = {};\r\n\r\n              this.setState({\r\n                  texto: \"Sendig WOZX\"\r\n                });\r\n\r\n              var sacado = await exchange.withdraw(currency2, amount, address, tag2, params2);\r\n\r\n              console.log(sacado);\r\n\r\n              if (sacado.info.status  === \"0000\") {\r\n\r\n                informacionCuenta.investedWozx -= amount;\r\n                informacionCuenta.withdrawnWozx += amount;\r\n\r\n                informacionCuenta.historial.push({\r\n                    tiempo: Date.now(),\r\n                    valor: amountsinfee,\r\n                    moneda: 'WOZX',\r\n                    accion: 'Sended to: '+address+' | fee: '+fee\r\n\r\n                })\r\n\r\n                var otro = null;\r\n\r\n                await this.actualizarUsuario( informacionCuenta, otro );\r\n\r\n                this.setState({\r\n                  texto: \"WOZX Sended\"\r\n                });\r\n              }else{\r\n                this.setState({\r\n                  texto: \"Error: SW-Of2-814\"\r\n                });\r\n                //no hay saldo de WOZX en Bithumb\r\n              }\r\n\r\n\r\n\r\n          }\r\n        }else{\r\n          this.setState({\r\n              texto:\"Error: ETH-Of2-829\"\r\n            });\r\n          //No tienes billetera de Ethereum registrada\r\n        }\r\n\r\n      }else{\r\n        window.alert(\"The minimum amount to withdraw is \"+fee*2+\" WOZX\");\r\n      }\r\n\r\n    }else{\r\n      window.alert(\"First register your wozx wallet and then wait for validation to use it\");\r\n\r\n    }\r\n\r\n    document.getElementById(\"amountWOZX\").value = \"\";\r\n\r\n  };\r\n\r\n  async escribireth(wallet){\r\n\r\n    this.setState({\r\n       tipo:\"button\",\r\n       boton: \"Enabling address\",\r\n       cosa: false\r\n     });\r\n\r\n    var direccion = await window.tronWeb.trx.getAccount();\r\n    direccion = window.tronWeb.address.fromHex(direccion.address);\r\n\r\n    var informacionCuenta = await this.consultarUsuario(direccion, null);\r\n\r\n    informacionCuenta.eth = true;\r\n    informacionCuenta.ethereum = wallet;\r\n\r\n    informacionCuenta.historial.push({\r\n        tiempo: Date.now(),\r\n        valor: 0,\r\n        moneda: 'ETH',\r\n        accion: 'Register new address: '+wallet\r\n\r\n    })\r\n\r\n    var otro = null;\r\n\r\n\r\n    await this.actualizarUsuario( informacionCuenta, otro );\r\n\r\n\r\n    this.setState({\r\n       tipo:\"button\",\r\n       boton: \"Address Enabled!\",\r\n       cosa: false\r\n     });\r\n\r\n\r\n  };\r\n\r\n  async enviarEth(atuh){\r\n\r\n    var dirETH = document.getElementById(\"direccioneth\").value;\r\n    var esEth = web3.utils.isAddress(dirETH);\r\n\r\n    if (esEth) {\r\n      this.setState({\r\n        tipo:\"button\",\r\n        boton: \"Enable address\",\r\n        cosa: true\r\n      });\r\n      if (atuh) {\r\n        this.escribireth(dirETH);\r\n      }\r\n\r\n\r\n    }else{\r\n      this.setState({\r\n        tipo:\"button\",\r\n        boton: \"Check address\",\r\n        cosa: false\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  async vereth(){\r\n\r\n    var { direccionTRX, informacionCuenta } = this.state;\r\n\r\n    var eth = informacionCuenta.eth;\r\n    var ethereum = informacionCuenta.ethereum;\r\n\r\n\r\n    if (eth) {\r\n      this.setState({\r\n        alerta: \"alerta0\",\r\n        funcion:true,\r\n        auth: \"#invested_wozx2\",\r\n        texto: \"Withdrawal WOZX\",\r\n        walleteth: ethereum\r\n      });\r\n    }else{\r\n\r\n      if ( web3.utils.isAddress(eth.ethdireccion) ){\r\n\r\n        this.setState({\r\n          alerta: \"alerta1\",\r\n          funcion:false,\r\n          auth: \"#alert\",\r\n          texto:\"Pending to approval\",\r\n          texto2:'Your WOZX wallet then wait the validation  to use it',\r\n          value: ethereum,\r\n          boton: \"Change address\",\r\n          walleteth: ethereum\r\n        });\r\n\r\n\r\n      }else{\r\n\r\n        this.setState({\r\n          alerta: \"alerta1\",\r\n          funcion:false,\r\n          auth: \"#alert\",\r\n          texto:\"Register WOZX wallet\",\r\n          texto2:'Enter your address to receive WOZX',\r\n          value: direccionTRX,\r\n          boton: \"Check address\",\r\n          walleteth: \"Undefined address\"\r\n        });\r\n\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const { cosa, walleteth, balanceTrx, investedWozx, auth, texto, texto2, texto3, texto4, alerta, value, tipo, boton, fee, feetrx} = this.state;\r\n\r\n    //var dirwozx = \"https://etherscan.io/token/0x34950ff2b487d9e5282c5ab342d08a2f712eb79f?a=\"+walleteth;\r\n\r\n    var dirwozx = \"https://ethplorer.io/address/\"+walleteth;\r\n\r\n    return (\r\n\r\n      <div className=\"container\">\r\n\r\n        <div id=\"invested_wozx2\" className=\"row\">\r\n\r\n          <div className=\"subhead\" >\r\n            <div className=\"box\">\r\n              <h3 className=\"display-2--light\" style={{cursor: \"pointer\"}} onClick={() => this.Tron()}>Available: <br></br>{balanceTrx} TRX</h3>\r\n              <input type=\"number\" className=\"form-control amount\" id=\"amountTRX\" placeholder=\"Min. 20 TRX\"></input>\r\n              <button type=\"button\" className=\"btn btn-info\" style={{'backgroundColor': 'green','color': 'white','borderBlockColor': 'green'}} onClick={() => this.venderTRX()}>{texto3}</button>\r\n              <button type=\"button\" className=\"btn btn-info\" style={{'backgroundColor': 'orange','color': 'white','borderBlockColor': 'orange'}} onClick={() => this.withdraw()}>Withdrawal TRX</button>\r\n              <p>Fee {feetrx} TRX</p>\r\n              <hr></hr>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"subhead\" >\r\n            <div className=\"box\">\r\n\r\n              <h3 className=\"display-2--light\" style={{cursor: \"pointer\"}} onClick={() => this.Wozx()}>Available: <br></br>{investedWozx} WOZX</h3>\r\n\r\n              <input type=\"number\" className=\"form-control amount\" id=\"amountWOZX\" placeholder=\"Min 8 WOZX\"></input>\r\n              <button type=\"button\" className=\"btn btn-info\" style={{'backgroundColor': 'red','color': 'white','borderBlockColor': 'red'}} onClick={() => this.venderWozx()}>{texto4}</button>\r\n              <a className=\"btn btn-light\"  href={auth} style={{'backgroundColor': 'orange','color': 'white','borderBlockColor': 'orange'}} onClick={() => this.withdrawETH()}>{texto}</a>\r\n              <p>to: <a href={dirwozx} rel=\"noopener noreferrer\" target=\"_blank\">{walleteth}</a></p>\r\n              <p>Fee {fee} WOZX</p>\r\n              <hr></hr>\r\n              <div id=\"alert\" className={alerta}>\r\n                {texto2}\r\n                <br></br>\r\n                <form target=\"_blank\" action=\"auth.php\" method=\"post\">\r\n                  <input name=\"tron\" id=\"walletTron\" type=\"hidden\"  value={value} />\r\n                  <input name=\"eth\" type=\"text\" className=\"form-control\" id=\"direccioneth\" placeholder=\"0x11134Bd1dd0219eb9B4Ab931c508834EA29C0F8d\"></input>\r\n                  <button type={tipo} className=\"btn btn-info\" onClick={() => this.enviarEth(cosa)}>{boton}</button>\r\n                </form>\r\n              </div>\r\n\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport TronLinkLogo from './TronLinkLogo.png';\r\n\r\n\r\nconst WEBSTORE_URL = 'https://chrome.google.com/webstore/detail/ibnejdfjmmkpcnlpebklmnkoeoihofec/';\r\n\r\nconst logo = (\r\n    <div className='col-xs-12 col-md-4 text-center'>\r\n        <img src={ TronLinkLogo } className=\"img-fluid\" alt='TronLink logo' />\r\n    </div>\r\n);\r\n\r\nconst openTronLink = () => {\r\n    window.open(WEBSTORE_URL, '_blank');\r\n};\r\n\r\nconst TronLinkGuide = props => {\r\n    const {\r\n        installed = false\r\n    } = props;\r\n\r\n    if(!installed) {\r\n        return (\r\n            <div className='row tron contact-content aos-init aos-animate' onClick={ openTronLink }>\r\n                <div>\r\n                    <h5>TronLink Required</h5>\r\n                    <p>\r\n                        To create a post or tip others you must install TronLink. TronLink is a TRON wallet for the browser\r\n                        that can be <a href={ WEBSTORE_URL } target='_blank' rel='noopener noreferrer'>installed from the Chrome Webstore</a>.\r\n                        Once installed, return back and refresh the page.\r\n                    </p>\r\n                </div>\r\n                { logo }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className='row tron contact-content aos-init aos-animate' onClick={ openTronLink }>\r\n            <div>\r\n                <h5>Log in Required</h5>\r\n                <p>\r\n                    TronLink is installed but you must first log in. Open TronLink from the browser bar and set up your\r\n                    first wallet or decrypt a previously-created wallet.\r\n                </p>\r\n            </div>\r\n            { logo }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TronLinkGuide;","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isowner: false,\r\n      retiros: \"\",\r\n      saldo: 0\r\n    };\r\n\r\n    this.isOwner = this.isOwner.bind(this);\r\n    this.pararRetiros = this.pararRetiros.bind(this);\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    setInterval(() => this.isOwner(),10*1000);\r\n  };\r\n\r\n  async isOwner() {\r\n\r\n    var ownerContrato = await Utils.contract.owner().call();\r\n    ownerContrato = window.tronWeb.address.fromHex(ownerContrato);\r\n\r\n    var ownerTronlink = await window.tronWeb.trx.getAccount();\r\n    ownerTronlink = window.tronWeb.address.fromHex(ownerTronlink.address);\r\n\r\n    if (ownerContrato === ownerTronlink) {\r\n      let sal = await Utils.contract.InContract().call();\r\n      sal = parseInt(sal._hex)/1000000;\r\n      //console.log(sal);\r\n      let si = await Utils.contract.Do().call();\r\n\r\n      if (si) {\r\n        this.setState({\r\n          retiros: \"Deshabilitar retiros\"\r\n        });\r\n      }else{\r\n        this.setState({\r\n          retiros: \"Habilitar retiros\"\r\n        });\r\n      }\r\n\r\n      this.setState({\r\n        saldo: sal,\r\n        isowner: true\r\n\r\n      });\r\n    }else{\r\n      this.setState({\r\n        isowner: false\r\n\r\n      });\r\n    }\r\n\r\n\r\n  };\r\n\r\n  async pararRetiros() {\r\n\r\n    await Utils.contract.stopWithdrawl().send();\r\n    let si = await Utils.contract.Do().call();\r\n\r\n    if (si) {\r\n      this.setState({\r\n        retiros: \"Deshabilitar retiros y depositos\"\r\n\r\n      });\r\n      alert(\"Los retiros y depositos han sido Habilitados\")\r\n    }else{\r\n      this.setState({\r\n        retiros: \"Habilitar retiros y depositos\"\r\n\r\n      });\r\n      alert(\"Los retiros y depositos han sido Deshabilitados\")\r\n    }\r\n\r\n\r\n  };\r\n\r\n  async sacarSaldo() {\r\n\r\n    await Utils.contract.withdrawAll().send();\r\n\r\n  };\r\n\r\n\r\n  render() {\r\n    const { isowner, retiros, saldo } = this.state;\r\n    if (isowner) {\r\n      return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-six\">\r\n            <h5 className=\"card-title\">Panel Owner</h5>\r\n            <button type=\"button\" className=\"btn btn-info\" onClick={() => this.pararRetiros()}>{retiros}</button><hr></hr>\r\n            <button type=\"button\" className=\"btn btn-info\" onClick={() => this.sacarSaldo()}>Sacar {saldo} TRX</button>\r\n          </div>\r\n        </div>\r\n      </div>);\r\n    }else{\r\n      return (\r\n        <>\r\n        </>\r\n        );\r\n\r\n    }\r\n\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport TronWeb from \"tronweb\";\r\n\r\nimport Utils from \"../../utils\";\r\nimport CrowdFunding from \"../CrowdFunding\";\r\n//import Datos from \"../Datos\";\r\nimport Historial from \"../Historial/\"\r\nimport Oficina from \"../Oficina\";\r\nimport Oficina2 from \"../Oficina2\";\r\nimport TronLinkGuide from \"../TronLinkGuide\";\r\nimport PanelOwner from \"../PanelOwner\";\r\n\r\n\r\nconst FOUNDATION_ADDRESS = \"TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tronWeb: {\r\n        installed: false,\r\n        loggedIn: false\r\n      }\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await new Promise(resolve => {\r\n      const tronWebState = {\r\n        installed: !!window.tronWeb,\r\n        loggedIn: window.tronWeb && window.tronWeb.ready\r\n      };\r\n\r\n      if (tronWebState.installed) {\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        return resolve();\r\n      }\r\n\r\n      let tries = 0;\r\n\r\n      const timer = setInterval(() => {\r\n        if (tries >= 10) {\r\n\r\n          const TRONGRID_API = \"https://api.trongrid.io\";\r\n\r\n          window.tronWeb = new TronWeb(\r\n            TRONGRID_API,\r\n            TRONGRID_API,\r\n            TRONGRID_API\r\n          );\r\n\r\n          this.setState({\r\n            tronWeb: {\r\n              installed: false,\r\n              loggedIn: false\r\n            }\r\n          });\r\n          clearInterval(timer);\r\n          return resolve();\r\n        }\r\n\r\n        tronWebState.installed = !!window.tronWeb;\r\n        tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n\r\n        if (!tronWebState.installed) {\r\n          return tries++;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        resolve();\r\n      }, 100);\r\n    });\r\n\r\n    if (!this.state.tronWeb.loggedIn) {\r\n      // Set default address (foundation address) used for contract calls\r\n      // Directly overwrites the address object if TronLink disabled the\r\n      // function call\r\n      window.tronWeb.defaultAddress = {\r\n        hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\r\n        base58: FOUNDATION_ADDRESS\r\n      };\r\n\r\n      window.tronWeb.on(\"addressChange\", () => {\r\n        if (this.state.tronWeb.loggedIn) {\r\n          return;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: {\r\n            installed: true,\r\n            loggedIn: true\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    Utils.setTronWeb(window.tronWeb);\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.tronWeb.installed) return (\r\n      <>\r\n        <div className=\"container\">\r\n        <TronLinkGuide />\r\n        </div>\r\n      </>\r\n      );\r\n\r\n    if (!this.state.tronWeb.loggedIn) return (\r\n      <>\r\n        <div className=\"container\">\r\n        <TronLinkGuide installed />\r\n        </div>\r\n      </>\r\n      );\r\n\r\n    return (\r\n      <>\r\n      <div className=\"row contact-content\">\r\n            \r\n        <div className=\"contact-primary\">\r\n          \r\n          <div>\r\n            \r\n            <PanelOwner />\r\n            <Oficina /> \r\n          </div>\r\n        </div>\r\n        <div className=\"contact-secondary\">\r\n          <div className=\"contact-info\">\r\n            <CrowdFunding />\r\n            <hr></hr>\r\n            <Oficina2 />\r\n            <Historial />\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      </>\r\n      \r\n\r\n\r\n      );\r\n\r\n  }\r\n}\r\nexport default App;\r\n\r\n// {tWeb()}\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\n\r\nvar root = document.getElementById(\"root\");\r\n\r\n\r\nReactDOM.render(<App />, root);\r\n"],"sourceRoot":""}