{"version":3,"sources":["utils/index.js","components/Contract/index.js","components/CrowdFunding/index.js","components/Datos/index.js","cons.js","components/Oficina/index.js","components/TronLinkInfo/index.js","components/TronLinkGuide/index.js","components/PanelOwner/index.js","components/App/index.js","index.js","components/TronLinkGuide/TronLinkLogo.png"],"names":["utils","tronWeb","contract","setTronWeb","this","setContract","contractAddress","at","WozxInvestor","Component","constructor","props","super","deposit","bind","componentDidMount","Utils","window","loc","document","location","href","indexOf","getString","split","GET","get","i","l","length","tmp","unescape","decodeURI","getElementById","value","amount","sponsor","tarifa","send","shouldPollResponse","callValue","render","className","type","id","placeholder","onClick","state","totalInvestors","totalInvested","totalRefRewards","setInterval","setstate","call","esto","setState","parseInt","Investors","_hex","Invested","RefRewards","data-toggle","ratetrx","ratewozx","proxyUrl","KEY","cons","SECRET","estado","result","texto1","texto2","texto3","datos","direccion","link","registered","balanceRef","totalRef","invested","paidAt","my","withdrawn","Link","withdraw","rateWozx","comprarWozx","rateTRX","venderTRX","esTrx","cripto","symbol","header1","fetch","method","headers","then","res","json","data","find","rate","parseFloat","toFixed","toString","catch","error","console","log","body","querystring","stringify","header","hasher","sha512","hmac","hash","finalize","firma","SIGN","esWozx","trx","getAccount","mydireccion","address","fromHex","investors","MYwithdrawable","My","style","text","data-wow-duration","color","data-wow-delay","TronLinkInfo","accountAddress","accountBalance","accountBandwidth","fetchAccountAddress","fetchAccountBalance","fetchAccountBandwidth","account","accountAddressInBase58","getBalance","balanceInSun","balanceInTRX","fromSun","getBandwidth","WEBSTORE_URL","logo","src","TronLinkLogo","alt","openTronLink","open","TronLinkGuide","installed","target","rel","isowner","retiros","saldo","isOwner","pararRetiros","consultarSaldo","Do","owner","ownerContrato","ownerTronlink","withdraw000","alert","sacarSaldo","withdraw001","InContract","sal","App","loggedIn","Promise","resolve","tronWebState","ready","tries","timer","TronWeb","clearInterval","defaultAddress","hex","toHex","base58","on","root","ReactDOM","module","exports"],"mappings":"0MAaeA,EAbD,CACZC,SAAS,EACTC,UAAU,EAEVC,WAAWF,GACTG,KAAKH,QAAUA,GAGXI,YAAYJ,EAASK,GAAkB,IAAD,kIACpBL,EAAQC,WAAWK,GAAGD,GADF,OAC1C,EAAKJ,SADqC,sDCJ/BI,EAFS,qCCET,MAAME,UAAqBC,YACxCC,YAAYC,GACVC,MAAMD,GAENP,KAAKS,QAAUT,KAAKS,QAAQC,KAAKV,MAG7BW,oBAAqB,OAAD,oHAClBC,EAAMX,YAAYY,OAAOhB,QAASK,GADhB,6CAKpBO,UAAW,OAAD,4HAGd,IADIK,EAAMC,SAASC,SAASC,MACrBC,QAAQ,KAAK,EAAE,CAIlB,IAHIC,EAAYL,EAAIM,MAAM,KAAK,GAC3BC,EAAMF,EAAUC,MAAM,KACtBE,EAAM,GACFC,EAAI,EAAGC,EAAIH,EAAII,OAAQF,EAAIC,EAAGD,IAC9BG,EAAML,EAAIE,GAAGH,MAAM,KACvBE,EAAII,EAAI,IAAMC,SAASC,UAAUF,EAAI,KAGf,KAAtBJ,EAAG,IAAQG,QACbV,SAASc,eAAe,UAAUC,MAAQ,EAC1Cf,SAASc,eAAe,WAAWC,MAAQR,EAAG,MAE9CP,SAASc,eAAe,UAAUC,MAAQ,EACzCf,SAASc,eAAe,WAAWC,MAAQ,2CAK9Cf,SAASc,eAAe,UAAUC,MAAQ,EAC1Cf,SAASc,eAAe,WAAWC,MAAQ,qCAvBjC,OA0BVC,EAAShB,SAASc,eAAe,UAAUC,MAC3CE,EAAUjB,SAASc,eAAe,WAAWC,MAC7CG,EAASlB,SAASc,eAAe,UAAUC,MAE/Cf,SAASc,eAAe,UAAUC,MAAQ,GA9B5B,kBAgCPlB,EAAMd,SAASW,QAAQwB,EAAQD,GAASE,KAAK,CAClDC,oBAAoB,EACpBC,UAAoB,IAATL,KAlCC,6CAuChBM,SAEE,OAEE,yBAAKC,UAAU,uBACX,uBAAGA,UAAU,kBACf,yBAAKA,UAAU,aACb,wBAAIA,UAAU,cAAd,YACA,wBAAIA,UAAU,aAAd,YACW,wCAAqB,6BAC9B,sCAFF,cAE6B,8BAE3B,8BACE,yBAAKA,UAAU,cACb,2BAAOC,KAAK,OAAOD,UAAU,eAAeE,GAAG,SAASC,YAAY,gBACpE,uBAAGH,UAAU,aAAb,sDAGN,4BAAQC,KAAK,SAASD,UAAU,gBAAgBI,QAAS,IAAM1C,KAAKS,WAApE,eCrEK,MAAML,UAAqBC,YACxCC,YAAYC,GACVC,MAAMD,GAENP,KAAK2C,MAAQ,CACXC,eAAgB,EAChBC,cAAe,EACfC,gBAAiB,GAGnB9C,KAAK4C,eAAiB5C,KAAK4C,eAAelC,KAAKV,MAG3CW,oBAAqB,IAAD,kIAClBC,EAAMX,YAAYY,OAAOhB,QAASK,GADhB,OAExB6C,YAAY,IAAM,EAAKH,iBAAiB,KAFhB,6CAKpBA,iBAAkB,IAAD,wIAEJhC,EAAMd,SAASkD,WAAWC,OAFtB,OAEjBC,EAFiB,OAIrB,EAAKC,SAAS,CACZP,eAAgBQ,SAASF,EAAKG,UAAUC,MACxCT,cAAeO,SAASF,EAAKK,SAASD,MAAM,IAC5CR,gBAAiBM,SAASF,EAAKM,WAAWF,MAAM,MAP7B,6CAavBjB,SAAU,IAAD,EACoDrC,KAAK2C,MAAxDC,EADD,EACCA,eAAgBC,EADjB,EACiBA,cAAeC,EADhC,EACgCA,gBAEvC,OACE,yBAAKR,UAAU,gBAEb,yBAAKA,UAAU,0BACb,0BAAMmB,cAAY,cAAcb,GAChC,mDAGF,yBAAKN,UAAU,+BACb,0BAAMmB,cAAY,cAAcZ,EAAhC,QACA,gDAGF,yBAAKP,UAAU,+BACb,0BAAMmB,cAAY,cAAcX,EAAhC,QACA,iE,YClDK,EAHC,uCAGD,EAFG,mE,kCCSdY,EAAU,GACVC,EAAW,GACXC,EAAW,uCAETC,EAAOC,EACPC,EAAUD,EAED,MAAM1D,UAAqBC,YACxCC,YAAYC,GACVC,MAAMD,GAENP,KAAK2C,MAAQ,CACXe,QAAS,GACTM,OAAO,CACLC,QAAO,EACPC,OAAO,YACPC,OAAO,aACPC,OAAO,eAETT,SAAU,GACVU,MAAO,GACPC,UAAW,GACXC,KAAM,wDACNC,YAAY,EACZC,WAAY,EACZC,SAAU,EACVC,SAAU,EACVC,OAAQ,EACRC,GAAI,EACJC,UAAW,GAIb9E,KAAKqD,UAAYrD,KAAKqD,UAAU3C,KAAKV,MACrCA,KAAK+E,KAAO/E,KAAK+E,KAAKrE,KAAKV,MAC3BA,KAAKgF,SAAWhF,KAAKgF,SAAStE,KAAKV,MACnCA,KAAKiF,SAAWjF,KAAKiF,SAASvE,KAAKV,MACnCA,KAAKkF,YAAclF,KAAKkF,YAAYxE,KAAKV,MACzCA,KAAKmF,QAAUnF,KAAKmF,QAAQzE,KAAKV,MACjCA,KAAKoF,UAAYpF,KAAKoF,UAAU1E,KAAKV,MAKjCW,oBAAqB,IAAD,kIAClBC,EAAMX,YAAYY,OAAOhB,QAASK,GADhB,OAExB6C,YAAY,IAAM,EAAKM,YAAY,KACnCN,YAAY,IAAM,EAAKgC,OAAO,KAHN,6CAMpBI,UAAU,IAAD,qDAEJE,EAFI,0EAEJA,EAFI,SAEEC,GACT,MAAyB,QAAlBA,EAAOC,QAGD,YACfC,EAAU,CACZ,8BAA+B,IAC/B,aAHiB,YAIjB,+BAAgC,4BAVrB,SAYPC,MAAM7B,EAAS,6CAA6C,CAAC8B,OAAQ,MAAOC,QAASH,IAC1FI,KAAKC,GAAOA,EAAIC,QAChBF,KAAKG,IAEJrC,EAAUqC,EAAKA,KAAKC,KAAKX,GAAOY,KAChCvC,EAAUwC,WAAWxC,GAASyC,QAAQ,GAEtCzC,GADAA,GAA0B,IAARA,GACA0C,aAGnBC,MAAMC,GAASC,QAAQC,IAAI,SAAUF,IAtBzB,OAwBb,EAAKnD,SAAS,CACZO,QAASA,IAzBE,6CA8BT0B,YAAY,IAAD,gJAET,EAAKD,UAFI,aAIF,KACM,WAEfsB,EAAOC,IAAYC,UAAU,CAAC,aAFf,WAE2C,KAAOjD,EAAQ,OAHhE,OAKTkD,EAAS,CAAC,eAAgB,qCAE1BC,EAASC,IAAOC,KAAKhD,GACrBiD,EAAOH,EAAOI,SAASR,GACvBS,EAAQF,EAAKZ,SAAS,OAE1BQ,EAAO/C,IAAMA,EACb+C,EAAOO,KAAOD,EAhBC,UAiBTzB,MAAM7B,EAAS,+CAA+C,CAAC8B,OAAQ,OAAQC,QAASiB,EAAQH,KAAKA,IAC1Gb,KAAKC,GAAOA,EAAIC,QAChBF,KAAKG,IACJQ,QAAQC,IAAIT,KAEbM,MAAMC,GAASC,QAAQC,IAAI,SAAUF,IAtBvB,8CA2BXrB,WAAW,IAAD,qDAELmC,EAFK,0EAELA,EAFK,SAEE9B,GACV,MAAyB,SAAlBA,EAAOC,QAGD,YACfC,EAAU,CACZ,8BAA+B,IAC/B,aAHiB,YAIjB,+BAAgC,4BAVpB,SAYRC,MAAM7B,EAAS,6CAA6C,CAAC8B,OAAQ,MAAOC,QAASH,IAC1FI,KAAKC,GAAOA,EAAIC,QAChBF,KAAKG,IAEJpC,EAAWoC,EAAKA,KAAKC,KAAKoB,GAAQnB,KAClCtC,EAAWuC,WAAWvC,GAAUwC,QAAQ,GAExCxC,GADAA,GAA6B,IAATA,GACAyC,aAGrBC,MAAMC,GAASC,QAAQC,IAAI,SAAUF,IAtBxB,OAwBd,EAAKnD,SAAS,CACZQ,SAAUA,IAzBE,6CA8BVuB,cAAc,IAAD,gJAEX,EAAKD,WAFM,aAIJ,IACM,YAEfwB,EAAOC,IAAYC,UAAU,CAAC,aAFf,YAE2C,KAAOhD,EAAS,OAHjE,MAKTiD,EAAS,CAAC,eAAgB,qCAE1BC,EAASC,IAAOC,KAAKhD,GACrBiD,EAAOH,EAAOI,SAASR,GACvBS,EAAQF,EAAKZ,SAAS,OAE1BQ,EAAO/C,IAAMA,EACb+C,EAAOO,KAAOD,EAhBG,UAiBXzB,MAAM7B,EAAS,8CAA8C,CAAC8B,OAAQ,OAAQC,QAASiB,EAAQH,KAAKA,IACzGb,KAAKC,GAAOA,EAAIC,QAChBF,KAAKG,IACJQ,QAAQC,IAAIT,KAEbM,MAAMC,GAASC,QAAQC,IAAI,SAAUF,IAtBrB,8CA2BbvB,OAAQ,IAAD,8HACU,EAAKpC,MAAnB6B,WADI,wBAIL1D,EAAMC,SAASC,SAASC,MACrBC,QAAQ,KAAK,IAClBJ,EAAMA,EAAIM,MAAM,KAAK,IANd,SAQeP,OAAOhB,QAAQwH,IAAIC,aARlC,OAQLC,EARK,OASTA,EAAc1G,OAAOhB,QAAQ2H,QAAQC,QAAQF,EAAYC,SACzDD,EAAczG,EAAI,QAAQyG,EAC1B,EAAKpE,SAAS,CACZoB,KAAMgD,IAZC,wBAeT,EAAKpE,SAAS,CACZoB,KAAM,0DAhBC,8CAsBPlB,YAAa,IAAD,4IAEMxC,OAAOhB,QAAQwH,IAAIC,aAFzB,cAEZhD,EAFY,gBAGC1D,EAAMd,SAAS4H,UAAUpD,EAAUkD,SAASvE,OAH7C,cAGZC,EAHY,gBAIDtC,EAAMd,SAAS6H,iBAAiB1E,OAJ/B,OAIZ2E,EAJY,OAOhB,EAAKzE,SAAS,CACZmB,UAAWzD,OAAOhB,QAAQ2H,QAAQC,QAAQnD,EAAUkD,SACpDhD,WAAYtB,EAAKsB,WACjBC,WAAYrB,SAASF,EAAKuB,WAAWnB,MAAM,IAC3CoB,SAAUtB,SAASF,EAAKwB,SAASpB,MAAM,IACvCqB,SAAUvB,SAASF,EAAKyB,SAASrB,MAAM,IACvCsB,OAAQxB,SAASF,EAAK0B,OAAOtB,MAAM,IACnCuB,GAAIzB,SAASwE,EAAG7F,OAAOuB,MAAM,IAC7BwB,UAAW1B,SAASF,EAAK4B,UAAUxB,MAAM,MAf3B,8CAoBZ0B,WAAW,OAAD,oHACRpE,EAAMd,SAASkF,WAAW9C,OADlB,6CAKhBG,SAAU,IAAD,EACqErC,KAAK2C,MAAzE8B,EADD,EACCA,WAAYC,EADb,EACaA,SAAUC,EADvB,EACuBA,SAAWG,EADlC,EACkCA,UAAYD,EAD9C,EAC8CA,GAAIP,EADlD,EACkDA,UAAWC,EAD7D,EAC6DA,KAEpE,OAEE,yBAAKjC,UAAU,aAEb,4BAAQuF,MAAO,CAAC,aAAc,UAAWvF,UAAU,kBACjD,wBAAIA,UAAU,SAAQ,0BAAMuF,MAAO,CAAC,cAAe,SAA7B,eAAtB,IACmB,6BACnB,0BAAMA,MAAO,CAAC,YAAa,SAAUvD,IAAsB,6BAC3D,wBAAIhC,UAAU,QAAQuF,MAAO,CAAC,cAAe,SAA7C,qBACA,wBAAIvF,UAAU,SAAS,uBAAGrB,KAAMsD,GAAOA,GAAvC,OACA,kBAAC,kBAAD,CAAiBuD,KAAMvD,GACrB,4BAAQhC,KAAK,SAASD,UAAU,gBAAhC,YAGF,8BAIF,yBAAKA,UAAU,OAEb,yBAAKA,UAAU,+CAA+CyF,oBAAkB,QAC9E,yBAAKzF,UAAU,OACb,yBAAKA,UAAU,QAAO,uBAAGA,UAAU,4BAA4BuF,MAAO,CAACG,MAAO,cAC9E,wBAAI1F,UAAU,SAAQ,uBAAGrB,KAAK,aAAa0D,EAArB,SACtB,uBAAGrC,UAAU,eAAb,qBAGJ,yBAAKA,UAAU,mCAAmCyF,oBAAkB,QAClE,yBAAKzF,UAAU,OACb,yBAAKA,UAAU,QAAO,uBAAGA,UAAU,4BAA4BuF,MAAO,CAACG,MAAO,cAC9E,wBAAI1F,UAAU,SAAQ,uBAAGrB,KAAK,aAAayD,EAArB,SACtB,uBAAGpC,UAAU,eAAb,mCAIJ,yBAAKA,UAAU,+CAA+C2F,iBAAe,OAAOF,oBAAkB,QACpG,yBAAKzF,UAAU,OACb,yBAAKA,UAAU,QAAO,uBAAGA,UAAU,wBAAwBuF,MAAO,CAACG,MAAO,cAC1E,uBAAG1F,UAAU,eAAb,cACA,wBAAIA,UAAU,SAAQ,uBAAGrB,KAAK,aAAa4D,EAArB,WAI1B,yBAAKvC,UAAU,mCAAmC2F,iBAAe,OAAOF,oBAAkB,QACxF,yBAAKzF,UAAU,OACb,yBAAKA,UAAU,QAAO,uBAAGA,UAAU,wBAAwBuF,MAAO,CAACG,MAAO,cAC1E,uBAAG1F,UAAU,eAAb,yBACA,wBAAIA,UAAU,SAAQ,uBAAGrB,KAAK,aAAR,IAAsBwD,EAAtB,WAK1B,yBAAKnC,UAAU,+CAA+C2F,iBAAe,OAAOF,oBAAkB,QACpG,yBAAKzF,UAAU,OACb,yBAAKA,UAAU,QAAO,uBAAGA,UAAU,8BAA8BuF,MAAO,CAACG,MAAM,cAC/E,wBAAI1F,UAAU,SAAQ,uBAAGrB,KAAK,aAAR,eACtB,uBAAGqB,UAAU,eAAemC,EAAWI,EAAvC,QAA+C,4BAAQtC,KAAK,SAASD,UAAU,eAAeI,QAAS,IAAM1C,KAAKkF,eAAnE,eAC/C,4BAAQ3C,KAAK,SAASD,UAAU,eAAeI,QAAS,IAAM1C,KAAKoF,aAAnE,cACA,4BAAQ7C,KAAK,SAASD,UAAU,eAAeI,QAAS,IAAM1C,KAAKkF,eAAnE,kBAGJ,yBAAK5C,UAAU,mCAAmC2F,iBAAe,OAAOF,oBAAkB,QACxF,yBAAKzF,UAAU,OACb,yBAAKA,UAAU,QAAO,uBAAGA,UAAU,wBAAwBuF,MAAO,CAACG,MAAO,cAC1E,wBAAI1F,UAAU,SAAQ,uBAAGrB,KAAK,aAAR,aACtB,uBAAGqB,UAAU,eAAewC,EAA5B,aC/RC,MAAMoD,UAAqB7H,YACxCC,YAAYC,GACVC,MAAMD,GAENP,KAAK2C,MAAQ,CACXwF,eAAgB,yBAChBC,eAAgB,yBAChBC,iBAAkB,0BAKtB1H,oBACEoC,YAAY,IAAM/C,KAAKsI,sBAAsB,KAC7CvF,YAAY,IAAM/C,KAAKuI,sBAAsB,KAC7CxF,YAAY,IAAM/C,KAAKwI,wBAAwB,KAI3CF,sBAAuB,IAAD,4IACHzH,OAAOhB,QAAQwH,IAAIC,aADhB,OACpBmB,EADoB,OAEpBN,EAAiBM,EAAQjB,QACzBkB,EAAyB7H,OAAOhB,QAAQ2H,QAAQC,QACpDU,GAGF,EAAKhF,SAAS,CACZgF,eAAgBO,IARQ,6CAYtBH,sBAAuB,IAAD,0IACC1H,OAAOhB,QAAQwH,IAAIsB,aADpB,OACpBC,EADoB,OAEpBC,EAAehI,OAAOhB,QAAQiJ,QAAQF,GAG5C,EAAKzF,SAAS,CAEZiF,eAAgBS,IAPQ,6CAYtBL,wBAAyB,IAAD,wIACG3H,OAAOhB,QAAQwH,IAAI0B,eADtB,OACtBV,EADsB,OAG5B,EAAKlF,SAAS,CACZkF,iBAAkBA,IAJQ,6CAS9BhG,SAAU,IAAD,EACqDrC,KAAK2C,MAAzDwF,EADD,EACCA,eAAgBC,EADjB,EACiBA,eAAgBC,EADjC,EACiCA,iBACxC,OACE,yBAAK/F,UAAU,iBACb,yBAAKA,UAAU,uBACX,uBAAGA,UAAU,yBACf,yBAAKA,UAAU,aACb,wBAAIA,UAAU,cAAd,uBACA,wBAAIA,UAAU,aAAd,gBACY,6BACT,gCAAQ,8BAAO6F,IAA+B,6BAAS,6BAF1D,WAGU,6BACP,gCAAQ,8BAAOC,EAAP,SAA0C,6BAAS,6BAJ9D,aAKY,6BACT,gCAAQ,8BAAOC,IAAiC,kC,qBC/DzDW,EAAe,8EAEfC,EACF,yBAAK3G,UAAU,kCACX,yBAAK4G,IAAMC,IAAe7G,UAAU,YAAY8G,IAAI,mBAItDC,EAAe,KACjBxI,OAAOyI,KAAKN,EAAc,WAsCfO,EAnCOhJ,IAAU,IAAD,EAGvBA,EADAiJ,UAGJ,YAL2B,SAsBvB,yBAAKlH,UAAU,eAAeI,QAAU2G,GACpC,yBAAK/G,UAAU,2BACX,+CACA,wLAKF2G,GAvBF,yBAAK3G,UAAU,MAAMI,QAAU2G,GAC3B,yBAAK/G,UAAU,sBACX,iDACA,8IAEgB,uBAAGrB,KAAO+H,EAAeS,OAAO,SAASC,IAAI,uBAA7C,sCAFhB,wDAMFT,IC7BH,MAAM7I,UAAqBC,YACxCC,YAAYC,GACVC,MAAMD,GAENP,KAAK2C,MAAQ,CACXgH,SAAS,EACTC,QAAS,GACTC,MAAO,GAGT7J,KAAK8J,QAAU9J,KAAK8J,QAAQpJ,KAAKV,MACjCA,KAAK+J,aAAe/J,KAAK+J,aAAarJ,KAAKV,MAC3CA,KAAKgK,eAAiBhK,KAAKgK,eAAetJ,KAAKV,MAI3CW,oBAAqB,IAAD,kIAClBC,EAAMX,YAAYY,OAAOhB,QAASK,GADhB,uBAGTU,EAAMd,SAASmK,KAAKhH,OAHX,cAKtB,EAAKE,SAAS,CACZyG,QAAS,yBAGX,EAAKzG,SAAS,CACZyG,QAAS,sBAIb7G,YAAY,IAAM,EAAK+G,UAAU,KACjC/G,YAAY,IAAM,EAAKiH,iBAAiB,KAfhB,6CAkBpBF,UAAW,IAAD,0IAEYlJ,EAAMd,SAASoK,QAAQjH,OAFnC,cAEVkH,EAFU,OAGdA,EAAgBtJ,OAAOhB,QAAQ2H,QAAQC,QAAQ0C,GAHjC,SAKYtJ,OAAOhB,QAAQwH,IAAIC,aAL/B,OAMd8C,GADIA,EALU,QAMgB5C,QAC9B4C,EAAgBvJ,OAAOhB,QAAQ2H,QAAQC,QAAQ2C,GAK3CD,IAAkBC,EACpB,EAAKjH,SAAS,CACZwG,SAAS,IAIX,EAAKxG,SAAS,CACZwG,SAAS,IAnBC,8CA2BVI,eAAgB,IAAD,kIAEbnJ,EAAMd,SAASuK,cAAcnI,OAFhB,uBAGJtB,EAAMd,SAASmK,KAAKhH,OAHhB,eAMjB,EAAKE,SAAS,CACZyG,QAAS,yBAGXU,MAAM,sCAEN,EAAKnH,SAAS,CACZyG,QAAS,sBAGXU,MAAM,wCAhBW,6CAsBfC,aAAc,OAAD,oHAEX3J,EAAMd,SAAS0K,cAActI,OAFlB,6CAMb8H,iBAAkB,IAAD,wIAELpJ,EAAMd,SAAS2K,aAAaxH,OAFvB,OAEjByH,EAFiB,OAGrBA,EAAMtH,SAASsH,EAAIpH,MAAM,IACzB,EAAKH,SAAS,CACV0G,MAAOa,IALU,6CAYvBrI,SAAU,IAAD,EAC6BrC,KAAK2C,MAAjCgH,EADD,EACCA,QAASC,EADV,EACUA,QAASC,EADnB,EACmBA,MAC1B,OAAIF,EAEF,yBAAKrH,UAAU,iBACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,cAAd,eACA,wBAAIA,UAAU,aACZ,4BAAQC,KAAK,SAASD,UAAU,gBAAgBI,QAAS,IAAM1C,KAAK+J,gBAAiBH,GAAiB,6BACtG,4BAAQrH,KAAK,SAASD,UAAU,gBAAgBI,QAAS,IAAM1C,KAAKuK,cAApE,SAAyFV,EAAzF,YAON,oCACA,gCC7GR,MAAMc,UAAYtK,YAChBC,YAAYC,GACVC,MAAMD,GAENP,KAAK2C,MAAQ,CACX9C,QAAS,CACP2J,WAAW,EACXoB,UAAU,IAKVjK,oBAAqB,IAAD,kIAClB,IAAIkK,QAAQC,IAChB,IAAMC,EAAe,CACnBvB,YAAa3I,OAAOhB,QACpB+K,SAAU/J,OAAOhB,SAAWgB,OAAOhB,QAAQmL,OAG7C,GAAID,EAAavB,UAKf,OAJA,EAAKrG,SAAS,CACZtD,QAASkL,IAGJD,IAGT,IAAIG,EAAQ,EAENC,EAAQnI,YAAY,KACxB,GAAIkI,GAAS,GAAI,CAiBf,OAbApK,OAAOhB,QAAU,IAAIsL,IAFA,+EAQrB,EAAKhI,SAAS,CACZtD,QAAS,CACP2J,WAAW,EACXoB,UAAU,KAGdQ,cAAcF,GACPJ,IAMT,GAHAC,EAAavB,YAAc3I,OAAOhB,QAClCkL,EAAaH,SAAW/J,OAAOhB,SAAWgB,OAAOhB,QAAQmL,OAEpDD,EAAavB,UAChB,OAAOyB,IAGT,EAAK9H,SAAS,CACZtD,QAASkL,IAGXD,KACC,OAlDmB,OAqDnB,EAAKnI,MAAM9C,QAAQ+K,WAItB/J,OAAOhB,QAAQwL,eAAiB,CAC9BC,IAAKzK,OAAOhB,QAAQ2H,QAAQ+D,MAxET,sCAyEnBC,OAzEmB,sCA4ErB3K,OAAOhB,QAAQ4L,GAAG,gBAAiB,KAC7B,EAAK9I,MAAM9C,QAAQ+K,UAIvB,EAAKzH,SAAS,CACZtD,QAAS,CACP2J,WAAW,EACXoB,UAAU,QAMlBhK,EAAMb,WAAWc,OAAOhB,SA5EA,6CA+E1BwC,SACE,OAAKrC,KAAK2C,MAAM9C,QAAQ2J,UAQnBxJ,KAAK2C,MAAM9C,QAAQ+K,SAStB,6BACE,6BACE,6BAASpI,GAAG,SAASF,UAAU,cAC7B,yBAAKA,UAAU,aACb,4BAAQA,UAAU,kBACd,oDAEJ,yBAAMA,UAAU,OACd,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,yBAAKA,UAAU,aACb,kBAAC,EAAD,SAKN,6BAASE,GAAG,WAAWF,UAAU,cAC/B,kBAAC,EAAD,SA3BN,oCACE,yBAAKA,UAAU,aACf,kBAAC,EAAD,CAAekH,WAAS,MAV1B,oCACE,yBAAKlH,UAAU,aACf,kBAAC,EAAD,SA4COqI,QCnJXe,EAAO3K,SAASc,eAAe,QAGnC8J,IAAStJ,OAAO,kBAAC,EAAD,MAASqJ,I,mBCTzBE,EAAOC,QAAU,IAA0B,0C","file":"static/js/main.acb9ca86.chunk.js","sourcesContent":["const utils = {\r\n  tronWeb: false,\r\n  contract: false,\r\n\r\n  setTronWeb(tronWeb) {\r\n    this.tronWeb = tronWeb;\r\n  },\r\n\r\n  async setContract(tronWeb, contractAddress) {\r\n    this.contract = await tronWeb.contract().at(contractAddress);\r\n  }\r\n};\r\n\r\nexport default utils;\r\n","\r\n/// La direccion de su contrato acá ///////////////////////////////////\r\nconst contractAddress = \"TJE8gGkYX7YxzjfrsJb5GZdiny6o94QNEb\";\r\n\r\nexport default contractAddress;","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.deposit = this.deposit.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n  };\r\n\r\n\r\n  async deposit() {\r\n\r\n    var loc = document.location.href;\r\n    if(loc.indexOf('?')>0){\r\n        var getString = loc.split('?')[1];\r\n        var GET = getString.split('&');\r\n        var get = {};\r\n        for(var i = 0, l = GET.length; i < l; i++){\r\n            var tmp = GET[i].split('=');\r\n            get[tmp[0]] = unescape(decodeURI(tmp[1]));\r\n        }\r\n        \r\n        if (get['ref'].length === 34) {\r\n          document.getElementById('tarifa').value = 0;\r\n          document.getElementById('sponsor').value = get['ref'];            \r\n        }else{\r\n          document.getElementById('tarifa').value = 0;\r\n           document.getElementById('sponsor').value = 'T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb';\r\n        }\r\n        \r\n        \r\n    }else{\r\n        document.getElementById('tarifa').value = 0;\r\n        document.getElementById('sponsor').value = 'T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb'; \r\n    }\r\n\r\n    let amount = document.getElementById(\"amount\").value;\r\n    let sponsor = document.getElementById(\"sponsor\").value;\r\n    let tarifa = document.getElementById(\"tarifa\").value;\r\n\r\n    document.getElementById(\"amount\").value = \"\";\r\n  \r\n    return Utils.contract.deposit(tarifa, sponsor).send({\r\n      shouldPollResponse: true,\r\n      callValue: amount * 1000000 // converted to SUN\r\n    });\r\n    \r\n  };\r\n\r\n  render() {\r\n    \r\n    return (\r\n      \r\n      <div className=\"card wow bounceInUp\">\r\n          <i className=\"fa fa-diamond\"></i>\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">Diamante</h5>\r\n          <h6 className=\"card-text\">\r\n            Retorno: <strong>200%</strong><br></br>\r\n            <strong>2%</strong> por día<br></br>\r\n          </h6>\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <input type=\"text\" className=\"form-control\" id=\"amount\" placeholder=\"Min. 50 TRX\"></input>\r\n                <p className=\"card-text\">Debes tener ~10 TRX para hacer la transacción</p>\r\n              </div>\r\n            </form>\r\n          <button type=\"button\" className=\"btn btn-light\" onClick={() => this.deposit()}>Invertir</button>\r\n          \r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      totalInvestors: 0,\r\n      totalInvested: 0,\r\n      totalRefRewards: 0\r\n    };\r\n\r\n    this.totalInvestors = this.totalInvestors.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    setInterval(() => this.totalInvestors(),1000);\r\n  };\r\n\r\n  async totalInvestors() {\r\n\r\n    let esto = await Utils.contract.setstate().call();\r\n    //console.log(esto);\r\n    this.setState({\r\n      totalInvestors: parseInt(esto.Investors._hex),\r\n      totalInvested: parseInt(esto.Invested._hex)/1000000,\r\n      totalRefRewards: parseInt(esto.RefRewards._hex)/1000000\r\n\r\n    });\r\n\r\n  };\r\n\r\n  render() {\r\n    const { totalInvestors, totalInvested, totalRefRewards } = this.state;\r\n\r\n    return (\r\n      <div className=\"row counters\">\r\n            \r\n        <div className=\"col-md-12  text-center\">\r\n          <span data-toggle=\"counter-up\">{totalInvestors}</span>\r\n          <p>Inversores Globales</p>\r\n        </div>\r\n\r\n        <div className=\"col-md-12 w-100 text-center\">\r\n          <span data-toggle=\"counter-up\">{totalInvested} TRX</span>\r\n          <p>Invertido Global</p>\r\n        </div>\r\n\r\n        <div className=\"col-md-12 w-100 text-center\">\r\n          <span data-toggle=\"counter-up\">{totalRefRewards} TRX</span>\r\n          <p>Recompensas  Globales Referidos</p>\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n","const API_KEY = \"2E37A3CE-63DF-4BA1-8C4F-13A82E27AC59\";\r\nconst secretKey = \"624620b9b7c29ee6704288f27c3e60b41e9fa0e5415cf1dbae296951e091fc48\";\r\n\r\nexport default {API_KEY, secretKey};","import React, { Component } from \"react\";\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nimport cons from \"../../cons.js\";\r\n\r\nimport querystring from 'querystring';\r\nimport sha512 from 'sha512';\r\n\r\nvar ratetrx = \"\";\r\nvar ratewozx = \"\";\r\nvar proxyUrl = 'https://cors-anywhere.herokuapp.com/';\r\n\r\nconst KEY  = cons.API_KEY;\r\nconst SECRET  = cons.secretKey;\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      ratetrx: \"\",\r\n      estado:{\r\n        result:false,\r\n        texto1:\"cargando.\",\r\n        texto2:\"cargando..\",\r\n        texto3:\"cargando...\",\r\n      },\r\n      ratewozx: \"\",\r\n      datos: {},\r\n      direccion: \"\",\r\n      link: \"Haz una inversión para obtener el LINK de referido\",\r\n      registered: false,\r\n      balanceRef: 0,\r\n      totalRef: 0,\r\n      invested: 0,\r\n      paidAt: 0,\r\n      my: 0,\r\n      withdrawn: 0\r\n\r\n    };\r\n\r\n    this.Investors = this.Investors.bind(this);\r\n    this.Link = this.Link.bind(this);\r\n    this.withdraw = this.withdraw.bind(this);\r\n    this.rateWozx = this.rateWozx.bind(this);\r\n    this.comprarWozx = this.comprarWozx.bind(this);\r\n    this.rateTRX = this.rateTRX.bind(this);\r\n    this.venderTRX = this.venderTRX.bind(this);\r\n    \r\n    \r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    setInterval(() => this.Investors(),3000);\r\n    setInterval(() => this.Link(),3000);\r\n  };\r\n\r\n  async rateTRX(){\r\n\r\n    function esTrx(cripto) {\r\n          return cripto.symbol === 'TRX';\r\n      }\r\n\r\n    const USER_AGENT = 'stevenSTC';\r\n    let header1 = {\r\n      'Access-Control-Allow-Origin' :'*',\r\n      'User-Agent' : USER_AGENT,\r\n      'Access-Control-Allow-Headers': 'Origin, X-Requested-With'\r\n    };\r\n    await fetch(proxyUrl+'https://data.gateio.life/api2/1/marketlist',{method: 'GET', headers: header1})\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      //console.log(data);\r\n      ratetrx = data.data.find(esTrx).rate; \r\n      ratetrx = parseFloat(ratetrx).toFixed(6);\r\n      ratetrx = ratetrx-ratetrx*0.01;\r\n      ratetrx = ratetrx.toString();\r\n      //console.log(ratetrx);\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n\r\n    this.setState({\r\n      ratetrx: ratetrx\r\n    });\r\n\r\n  }\r\n\r\n  async venderTRX(){    \r\n\r\n    await this.rateTRX();\r\n    \r\n    let amount = \"40\";\r\n    let currencyPair = \"trx_usdt\";\r\n\r\n    let body = querystring.stringify({'currencyPair':currencyPair,'rate':ratetrx,'amount':amount});\r\n\r\n    let header = {'Content-Type': 'application/x-www-form-urlencoded'};\r\n\r\n    var hasher = sha512.hmac(SECRET);\r\n    var hash = hasher.finalize(body);\r\n    var firma = hash.toString('hex');\r\n\r\n    header.KEY = KEY;\r\n    header.SIGN = firma;\r\n    await fetch(proxyUrl+'https://api.gateio.life/api2/1/private/sell/',{method: 'POST', headers: header, body:body })\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      console.log(data);\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n    \r\n\r\n  }\r\n\r\n  async rateWozx(){\r\n\r\n    function esWozx(cripto) {\r\n          return cripto.symbol === 'WOZX';\r\n      }\r\n\r\n    const USER_AGENT = 'stevenSTC';\r\n    let header1 = {\r\n      'Access-Control-Allow-Origin' :'*',\r\n      'User-Agent' : USER_AGENT,\r\n      'Access-Control-Allow-Headers': 'Origin, X-Requested-With'\r\n    };\r\n    await fetch(proxyUrl+'https://data.gateio.life/api2/1/marketlist',{method: 'GET', headers: header1})\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      //console.log(data);\r\n      ratewozx = data.data.find(esWozx).rate; \r\n      ratewozx = parseFloat(ratewozx).toFixed(6);\r\n      ratewozx = ratewozx+ratewozx*0.01;\r\n      ratewozx = ratewozx.toString();\r\n      //console.log(ratewozx);\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n\r\n    this.setState({\r\n      ratewozx: ratewozx\r\n    });\r\n\r\n  }\r\n\r\n  async comprarWozx(){    \r\n\r\n    await this.rateWozx();\r\n    \r\n    let amount = \"1\";\r\n    let currencyPair = \"wozx_usdt\";\r\n\r\n    let body = querystring.stringify({'currencyPair':currencyPair,'rate':ratewozx,'amount':amount});\r\n\r\n    let header = {'Content-Type': 'application/x-www-form-urlencoded'};\r\n\r\n    var hasher = sha512.hmac(SECRET);\r\n    var hash = hasher.finalize(body);\r\n    var firma = hash.toString('hex');\r\n\r\n    header.KEY = KEY;\r\n    header.SIGN = firma;\r\n    await fetch(proxyUrl+'https://api.gateio.life/api2/1/private/buy/',{method: 'POST', headers: header, body:body })\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      console.log(data);\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n    \r\n\r\n  }\r\n\r\n  async Link() {\r\n    const {registered} = this.state;\r\n    if(registered){\r\n\r\n      let loc = document.location.href;\r\n      if(loc.indexOf('?')>0){\r\n        loc = loc.split('?')[0]\r\n      }\r\n      let mydireccion = await window.tronWeb.trx.getAccount();\r\n      mydireccion = window.tronWeb.address.fromHex(mydireccion.address)\r\n      mydireccion = loc+'?ref='+mydireccion;\r\n      this.setState({\r\n        link: mydireccion,\r\n      });\r\n    }else{\r\n      this.setState({\r\n        link: \"Haz una inversión para obtener el LINK de referido\",\r\n      });\r\n    }\r\n  }\r\n    \r\n\r\n  async Investors() {\r\n\r\n    let direccion = await window.tronWeb.trx.getAccount();\r\n    let esto = await Utils.contract.investors(direccion.address).call();\r\n    let My = await Utils.contract.MYwithdrawable().call();\r\n    //console.log(esto);\r\n    //console.log(My);\r\n    this.setState({\r\n      direccion: window.tronWeb.address.fromHex(direccion.address),\r\n      registered: esto.registered,\r\n      balanceRef: parseInt(esto.balanceRef._hex)/1000000,\r\n      totalRef: parseInt(esto.totalRef._hex)/1000000,\r\n      invested: parseInt(esto.invested._hex)/1000000,\r\n      paidAt: parseInt(esto.paidAt._hex)/1000000,\r\n      my: parseInt(My.amount._hex)/1000000,\r\n      withdrawn: parseInt(esto.withdrawn._hex)/1000000\r\n    });\r\n\r\n  };\r\n\r\n  async withdraw(){\r\n    await Utils.contract.withdraw().send()\r\n  };\r\n\r\n\r\n  render() {\r\n    const { balanceRef, totalRef, invested,  withdrawn , my, direccion, link} = this.state;\r\n\r\n    return (\r\n      \r\n      <div className=\"container\">\r\n\r\n        <header style={{'text-align': 'center'}} className=\"section-header\">\r\n          <h3 className=\"white\"><span style={{'font-weight': 'bold'}}>\r\n          Mi Oficina:</span> <br></br>\r\n          <span style={{'font-size': '18px'}}>{direccion}</span></h3><br></br>\r\n          <h3 className=\"white\" style={{'font-weight': 'bold'}}>Link de referido:</h3>\r\n          <h6 className=\"white\" ><a href={link}>{link}</a>&nbsp;\r\n          <CopyToClipboard text={link}>\r\n            <button type=\"button\" className=\"btn btn-info\">COPIAR</button>\r\n          </CopyToClipboard>\r\n          </h6>\r\n          <hr></hr>\r\n          \r\n        </header>\r\n\r\n        <div className=\"row\">\r\n\r\n          <div className=\"col-md-6 col-lg-5 offset-lg-1 wow bounceInUp\" data-wow-duration=\"1.4s\">\r\n            <div className=\"box\">\r\n              <div className=\"icon\"><i className=\"ion-ios-analytics-outline\" style={{color: '#ff689b'}}></i></div>\r\n              <h4 className=\"title\"><a href=\"#services\">{invested} TRX</a></h4>\r\n              <p className=\"description\">Total invertido</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6 col-lg-5 wow bounceInUp\" data-wow-duration=\"1.4s\">\r\n            <div className=\"box\">\r\n              <div className=\"icon\"><i className=\"ion-ios-bookmarks-outline\" style={{color: '#e9bf06'}}></i></div>\r\n              <h4 className=\"title\"><a href=\"#services\">{totalRef} TRX</a></h4>\r\n              <p className=\"description\">Total ganancias por referidos</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-6 col-lg-5 offset-lg-1 wow bounceInUp\" data-wow-delay=\"0.1s\" data-wow-duration=\"1.4s\">\r\n            <div className=\"box\">\r\n              <div className=\"icon\"><i className=\"ion-ios-paper-outline\" style={{color: '#3fcdc7'}}></i></div>\r\n              <p className=\"description\">Mi balance</p>\r\n              <h4 className=\"title\"><a href=\"#services\">{my} TRX</a></h4>\r\n              \r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6 col-lg-5 wow bounceInUp\" data-wow-delay=\"0.1s\" data-wow-duration=\"1.4s\">\r\n            <div className=\"box\">\r\n              <div className=\"icon\"><i className=\"ion-ios-paper-outline\" style={{color: '#3fcdc7'}}></i></div>\r\n              <p className=\"description\">Balance por referidos</p>\r\n              <h4 className=\"title\"><a href=\"#services\"> {balanceRef} TRX</a></h4>\r\n              \r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-6 col-lg-5 offset-lg-1 wow bounceInUp\" data-wow-delay=\"0.1s\" data-wow-duration=\"1.4s\">\r\n            <div className=\"box\">\r\n              <div className=\"icon\"><i className=\"ion-ios-speedometer-outline\" style={{color:'#41cf2e'}}></i></div>\r\n              <h4 className=\"title\"><a href=\"#services\">Disponible</a></h4>\r\n              <p className=\"description\">{balanceRef+my} TRX <button type=\"button\" className=\"btn btn-info\" onClick={() => this.comprarWozx()}>llamar API</button></p>\r\n              <button type=\"button\" className=\"btn btn-info\" onClick={() => this.venderTRX()}>vender TRX</button>\r\n              <button type=\"button\" className=\"btn btn-info\" onClick={() => this.comprarWozx()}>comprar Wozx</button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6 col-lg-5 wow bounceInUp\" data-wow-delay=\"0.2s\" data-wow-duration=\"1.4s\">\r\n            <div className=\"box\">\r\n              <div className=\"icon\"><i className=\"ion-ios-clock-outline\" style={{color: '#4680ff'}}></i></div>\r\n              <h4 className=\"title\"><a href=\"#services\">Retirado</a></h4>\r\n              <p className=\"description\">{withdrawn} TRX</p>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    \r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class TronLinkInfo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      accountAddress: \"Billetera NO conectada\",\r\n      accountBalance: \"Billetera NO conectada\",\r\n      accountBandwidth: \"Billetera NO conectada\"\r\n    };\r\n  };\r\n\r\n  \r\n  componentDidMount() {\r\n    setInterval(() => this.fetchAccountAddress(),1000);\r\n    setInterval(() => this.fetchAccountBalance(),1000);\r\n    setInterval(() => this.fetchAccountBandwidth(),1000);\r\n  };\r\n\r\n\r\n  async fetchAccountAddress() {\r\n    const account =  await window.tronWeb.trx.getAccount();\r\n    const accountAddress = account.address;\r\n    const accountAddressInBase58 = window.tronWeb.address.fromHex(\r\n      accountAddress\r\n    );\r\n\r\n    this.setState({\r\n      accountAddress: accountAddressInBase58\r\n    });\r\n  };\r\n\r\n  async fetchAccountBalance() {\r\n    const balanceInSun = await window.tronWeb.trx.getBalance(); //number\r\n    const balanceInTRX = window.tronWeb.fromSun(balanceInSun); //string\r\n    //const changeBackToSun = window.tronWeb.toSun(balanceInTRX); //string\r\n\r\n    this.setState({\r\n      //accountBalance: balanceInSun // Muestra el balance en SUN\r\n      accountBalance: balanceInTRX\r\n    });\r\n  };\r\n  //\r\n  // // La funcion aqui abajo muestra el ancho de banda como un numero\r\n  async fetchAccountBandwidth() {\r\n    const accountBandwidth = await window.tronWeb.trx.getBandwidth(); // number\r\n\r\n    this.setState({\r\n      accountBandwidth: accountBandwidth\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    const { accountAddress, accountBalance, accountBandwidth} = this.state;\r\n    return (\r\n      <div className=\"col-lg-5 mb-5\">\r\n        <div className=\"card wow bounceInUp\">\r\n            <i className=\"fa fa-address-card-o\"></i>\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">Billetera Conectada</h5>\r\n            <h6 className=\"card-text\">\r\n              Dirección:<br></br>\r\n               <strong><span>{accountAddress}</span></strong><br></br><br></br>\r\n              Balance:<br></br>\r\n               <strong><span>{accountBalance} TRX</span></strong><br></br><br></br>\r\n              Bandwidth:<br></br>\r\n               <strong><span>{accountBandwidth}</span></strong><br></br>\r\n              \r\n            </h6>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n","import React from 'react';\r\n\r\nimport TronLinkLogo from './TronLinkLogo.png';\r\n\r\n\r\nconst WEBSTORE_URL = 'https://chrome.google.com/webstore/detail/ibnejdfjmmkpcnlpebklmnkoeoihofec/';\r\n\r\nconst logo = (\r\n    <div className='col-xs-12 col-md-4 text-center'>\r\n        <img src={ TronLinkLogo } className=\"img-fluid\" alt='TronLink logo' />\r\n    </div>\r\n);\r\n\r\nconst openTronLink = () => {\r\n    window.open(WEBSTORE_URL, '_blank');\r\n};\r\n\r\nconst TronLinkGuide = props => {\r\n    const {\r\n        installed = false\r\n    } = props;\r\n\r\n    if(!installed) {\r\n        return (\r\n            <div className='row' onClick={ openTronLink }>\r\n                <div className='col-xs-12 col-md-8'>\r\n                    <h1>TronLink Required</h1>\r\n                    <p>\r\n                        To create a post or tip others you must install TronLink. TronLink is a TRON wallet for the browser\r\n                        that can be <a href={ WEBSTORE_URL } target='_blank' rel='noopener noreferrer'>installed from the Chrome Webstore</a>.\r\n                        Once installed, return back and refresh the page.\r\n                    </p>\r\n                </div>\r\n                { logo }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className='tronLink row' onClick={ openTronLink }>\r\n            <div className='info col-xs-12 col-md-8'>\r\n                <h1>Log in Required</h1>\r\n                <p>\r\n                    TronLink is installed but you must first log in. Open TronLink from the browser bar and set up your\r\n                    first wallet or decrypt a previously-created wallet.\r\n                </p>\r\n            </div>\r\n            { logo }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TronLinkGuide;","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isowner: false,\r\n      retiros: \"\",\r\n      saldo: 0\r\n    };\r\n\r\n    this.isOwner = this.isOwner.bind(this);\r\n    this.pararRetiros = this.pararRetiros.bind(this);\r\n    this.consultarSaldo = this.consultarSaldo.bind(this);\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n\r\n    let si = await Utils.contract.Do().call();\r\n    if (si) {\r\n      this.setState({\r\n        retiros: \"Deshabilitar retiros\"\r\n      });\r\n    }else{\r\n      this.setState({\r\n        retiros: \"Habilitar retiros\"\r\n      });\r\n    }\r\n    \r\n    setInterval(() => this.isOwner(),1000);\r\n    setInterval(() => this.consultarSaldo(),1000);\r\n  };\r\n\r\n  async isOwner() {\r\n\r\n    let ownerContrato = await Utils.contract.owner().call();\r\n    ownerContrato = window.tronWeb.address.fromHex(ownerContrato);\r\n\r\n    let ownerTronlink = await window.tronWeb.trx.getAccount();\r\n    ownerTronlink = ownerTronlink.address;\r\n    ownerTronlink = window.tronWeb.address.fromHex(ownerTronlink);\r\n\r\n    //console.log(ownerContrato);\r\n    //console.log(ownerTronlink);\r\n\r\n    if (ownerContrato === ownerTronlink) {\r\n      this.setState({\r\n        isowner: true\r\n\r\n      });\r\n    }else{\r\n      this.setState({\r\n        isowner: false\r\n\r\n      });\r\n    }\r\n    \r\n\r\n  };\r\n\r\n  async pararRetiros() {\r\n\r\n    await Utils.contract.withdraw000().send();\r\n    let si = await Utils.contract.Do().call();\r\n\r\n    if (si) {\r\n      this.setState({\r\n        retiros: \"Deshabilitar retiros\"\r\n\r\n      });\r\n      alert(\"Los retiros han sido Habilitados\")\r\n    }else{\r\n      this.setState({\r\n        retiros: \"Habilitar retiros\"\r\n\r\n      });\r\n      alert(\"Los retiros han sido Deshabilitados\")\r\n    }\r\n    \r\n\r\n  };\r\n\r\n  async sacarSaldo() {\r\n\r\n    await Utils.contract.withdraw001().send(); \r\n\r\n  };\r\n\r\n  async consultarSaldo() {\r\n\r\n    let sal = await Utils.contract.InContract().call(); \r\n    sal = parseInt(sal._hex)/1000000;\r\n    this.setState({\r\n        saldo: sal\r\n    });\r\n\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    const { isowner, retiros, saldo } = this.state;\r\n    if (isowner) {\r\n      return (\r\n      <div className=\"col-lg-5 mb-5\">\r\n        <div className=\"card wow bounceInUp\">\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">Panel Owner</h5>\r\n            <h6 className=\"card-text\">\r\n              <button type=\"button\" className=\"btn btn-light\" onClick={() => this.pararRetiros()}>{retiros}</button><hr></hr>\r\n              <button type=\"button\" className=\"btn btn-light\" onClick={() => this.sacarSaldo()}>Sacar {saldo} TRX</button>\r\n            </h6>\r\n          </div>\r\n        </div>\r\n      </div>);\r\n    }else{\r\n      return (\r\n        <>\r\n        <div>\r\n        </div>\r\n        </>\r\n        );\r\n\r\n    }\r\n    \r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport TronWeb from \"tronweb\";\r\n\r\nimport Utils from \"../../utils\";\r\nimport CrowdFunding from \"../CrowdFunding\";\r\nimport Datos from \"../Datos\";\r\nimport Oficina from \"../Oficina\";\r\nimport TronLinkInfo from \"../TronLinkInfo\";\r\nimport TronLinkGuide from \"../TronLinkGuide\";\r\nimport PanelOwner from \"../PanelOwner\";\r\n\r\n\r\nconst FOUNDATION_ADDRESS = \"TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tronWeb: {\r\n        installed: false,\r\n        loggedIn: false\r\n      }\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await new Promise(resolve => {\r\n      const tronWebState = {\r\n        installed: !!window.tronWeb,\r\n        loggedIn: window.tronWeb && window.tronWeb.ready\r\n      };\r\n\r\n      if (tronWebState.installed) {\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        return resolve();\r\n      }\r\n\r\n      let tries = 0;\r\n\r\n      const timer = setInterval(() => {\r\n        if (tries >= 10) {\r\n\r\n          const TRONGRID_API = \"https://api.trongrid.io\";\r\n\r\n          window.tronWeb = new TronWeb(\r\n            TRONGRID_API,\r\n            TRONGRID_API,\r\n            TRONGRID_API\r\n          );\r\n\r\n          this.setState({\r\n            tronWeb: {\r\n              installed: false,\r\n              loggedIn: false\r\n            }\r\n          });\r\n          clearInterval(timer);\r\n          return resolve();\r\n        }\r\n\r\n        tronWebState.installed = !!window.tronWeb;\r\n        tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n\r\n        if (!tronWebState.installed) {\r\n          return tries++;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        resolve();\r\n      }, 100);\r\n    });\r\n\r\n    if (!this.state.tronWeb.loggedIn) {\r\n      // Set default address (foundation address) used for contract calls\r\n      // Directly overwrites the address object if TronLink disabled the\r\n      // function call\r\n      window.tronWeb.defaultAddress = {\r\n        hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\r\n        base58: FOUNDATION_ADDRESS\r\n      };\r\n\r\n      window.tronWeb.on(\"addressChange\", () => {\r\n        if (this.state.tronWeb.loggedIn) {\r\n          return;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: {\r\n            installed: true,\r\n            loggedIn: true\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    Utils.setTronWeb(window.tronWeb);\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.tronWeb.installed) return (\r\n      <>\r\n        <div className=\"container\">\r\n        <TronLinkGuide />\r\n        </div>\r\n      </>\r\n      );\r\n\r\n    if (!this.state.tronWeb.loggedIn) return (\r\n      <>\r\n        <div className=\"container\">\r\n        <TronLinkGuide installed />\r\n        </div>\r\n      </>\r\n      );\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <section id=\"why-us\" className=\"wow fadeIn\">\r\n            <div className=\"container\">\r\n              <header className=\"section-header\">\r\n                  <h3>Has tu inversión</h3>\r\n              </header>\r\n              <div  className=\"row\">\r\n                <CrowdFunding />\r\n                <TronLinkInfo />\r\n                <PanelOwner />\r\n              </div>\r\n              <div className=\"container\">\r\n                <Datos />\r\n              </div>\r\n            </div>\r\n          </section>\r\n          \r\n          <section id=\"services\" className=\"section-bg\">\r\n            <Oficina /> \r\n          </section>\r\n        </div>\r\n      </div>\r\n      \r\n\r\n\r\n      );\r\n\r\n  }\r\n}\r\nexport default App;\r\n\r\n// {tWeb()}\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\n\r\nvar root = document.getElementById(\"root\");\r\n\r\n\r\nReactDOM.render(<App />, root);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/TronLinkLogo.d3a8f115.png\";"],"sourceRoot":""}