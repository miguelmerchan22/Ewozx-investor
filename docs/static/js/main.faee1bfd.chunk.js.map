{"version":3,"sources":["components/TronLinkGuide/TronLinkLogo.png","utils/index.js","cons.js","components/Contract/index.js","components/CrowdFunding/index.js","components/Historial/index.js","components/Oficina/index.js","components/Oficina2/index.js","components/TronLinkGuide/index.js","components/PanelOwner/index.js","components/App/index.js","index.js"],"names":["module","exports","utils","tronWeb","contract","setTronWeb","this","setContract","contractAddress","at","cons","delay","ms","Promise","res","setTimeout","exchange","ccxt","bithumb","nonce","milliseconds","proxy","apiKey","secret","amountTrx","ratetrx","ratewozx","tantoTrx","tantoWozx","minimo_usd","rango_minimo","walletSponsor","pry","pru","TRONGRID_API","console","log","tronApp","TronWeb2","WozxInvestor","Component","constructor","props","super","state","direccionTRX","informacionCuenta","usdtrx","min","texto","tronEnApp","priceUSDTRON","deposit","bind","rateWozx","comprarWozx","rateTRX","venderTRX","minDepo","rateT","saldoApp","consultarTodosUsuarios","registrarUsuario","consultarUsuario","actualizarUsuario","actualizarDireccion","consultarTransaccion","componentDidMount","Utils","window","setInterval","document","getElementById","innerHTML","trx","getAccount","account","address","fromHex","setState","id","proxyUrl","apiUrl","fetch","catch","error","response","json","result","market_data","current_price","usd","otro","datos","token","method","headers","body","JSON","stringify","mini","parseInt","MIN_DEPOSIT","call","mindepo","_hex","nuevoMinDeposit","send","registered","value","fetchBalance","consulta","balance","parseFloat","free","loadMarkets","closing_price","precio","toFixed","depomin","getBalance","walletApp","fromSun","balanceInSun","balanceInTRX","investors","investor","isNaN","alert","confirm","sponsor","loc","location","href","indexOf","getString","split","GET","get","i","l","length","tmp","unescape","decodeURI","amount","miRegistro","callValue","pago","t","reload","cositas","krw","createLimitBuyOrder","orden","info","status","params","fetchOrder","monto","depositoTron","sendTransaction","balanceTrx","historial","push","tiempo","Date","now","valor","moneda","accion","link","render","className","type","placeholder","style","onClick","verHistorial","direccion","usuario","o","ver","evento","key","_id","target","rel","fontSize","title","splice","width","height","overflow","rango","ganancia","refe","withdrawnTrx","investedWozx","withdrawnWozx","wozxPe","wozxCa","miPrecioWozx","priceUSDWOZX","Investors","enviarWozx","Link","Wozx","rateW","then","data","err","mydireccion","range","prof","nivel","cantidad","accountAddress","isAddress","informacionDestino","text","aria-describedby","cursor","descuento","tipo","auth","texto3","texto4","fee","feetrx","funcion","alerta","balanceRef","totalRef","invested","paidAt","my","withdrawn","withdraw","venderWozx","comprarTRX","enviarTron","vereth","reset","withdrawETH","enviarEth","Tron","amountTrxsindescuento","tronDisponible","COMISION_TRON","COMISION_RETIRO","retirarTron","createLimitSellOrder","cost","orden2","params2","aumentar","recompensa","contractApp","depositoWozx","informacionSponsor","precioUsdTron","amountpararefer","depositoTronUsuario","id2","ope","retirarWozx","amountWozxDescuento","costo","c","w","wozx","wallet","ownerContrato","undefined","currency","versacado","withdrawableWozx","My","mywithdrawableWozx","withdrawableTrx","hay","minre","InContract","balanceContract","balanceTrxYo","tag2","sacado","amountsinfee","toString","ethereum","web3","escribireth","boton","cosa","eth","atuh","dirETH","walleteth","texto2","dirwozx","action","name","WEBSTORE_URL","logo","src","TronLinkLogo","alt","openTronLink","open","TronLinkGuide","installed","isowner","retiros","saldo","isOwner","pararRetiros","owner","ownerTronlink","sal","Do","stopWithdrawl","sacarSaldo","withdrawAll","App","loggedIn","resolve","tronWebState","ready","tries","timer","TronWeb","clearInterval","defaultAddress","hex","toHex","base58","on","root","ReactDOM"],"mappings":"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","file":"static/js/main.faee1bfd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/TronLinkLogo.f8e7d99a.png\";","const utils = {\r\n  tronWeb: false,\r\n  contract: false,\r\n\r\n  setTronWeb(tronWeb) {\r\n    this.tronWeb = tronWeb;\r\n  },\r\n\r\n  async setContract(tronWeb, contractAddress) {\r\n    this.contract = await tronWeb.contract().at(contractAddress);\r\n  }\r\n};\r\n\r\nexport default utils;\r\n","import {APP_AK, APP_SK, APP_WO, APP_MT} from \"@env\";\r\n\r\nconst AK = APP_AK;\r\nconst SK = APP_SK;\r\nconst WO = APP_WO;\r\nconst proxy = \"https://proxy-ewozx.herokuapp.com/\";\r\nconst mongo = \"https://ewozx-mdb.herokuapp.com/\";\r\nconst MT = APP_MT;\r\nconst PRU = \"shasta.\";// shasta1. para inhabilitar red de pruebas\r\nconst WS = \"TB7RTxBPY4eMvKjceXj8SWjVnZCrWr4XvF\";//T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb recibe los huerfanos por defecto\r\nconst descuento = 0.002;// 0.24 o 24% queda en la plataforma el restante se usa para comprar el 76% en wozx para los usuarios\r\nconst WOZX = 0.07; // para que el WOZX se Compre de inmediato\r\nconst TRX = 0.035; // para que el TRX se Venda de inmediato\r\nconst SC = \"TXX1uEid55BoRfYmUE7G4SdJw9GNQH52Yz\";// direccion del contrato\r\nconst USD = 1; // minimo de inversion en dolares USD (100)\r\nconst SD = 0.1; // 10% de sensibilidad para modificar el precio minimo de inversion\r\nconst EX = \"TB7RTxBPY4eMvKjceXj8SWjVnZCrWr4XvF\"; //wallet de of exchange\r\n\r\nconst MA = 100; //cantidad minima de tron permitida en la wallet de la aplicación\r\n\r\nconst FEEW = 0.025; //fee de retiro del wozx por la platafora de ethereum\r\nconst FEET = 10; //fee de retiro del Tron por medio del contrato\r\n\r\nexport default {AK, SK, WO, proxy, PRU, WS, descuento, MA, WOZX, TRX, SC, USD, SD, EX, FEEW, FEET, mongo, MT};\r\n","\r\nimport cons from \"../../cons.js\";\r\n\r\nconst contractAddress = cons.SC;\r\n\r\nexport default contractAddress;","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport TronWeb2 from 'tronweb';\r\nimport ccxt from 'ccxt';\r\n\r\nimport contractAddress from \"../Contract\";\r\nimport cons from \"../../cons.js\";\r\n\r\nconst delay = ms => new Promise(res => setTimeout(res, ms));\r\n\r\nconst exchange = new ccxt.bithumb({\r\n    nonce () { return this.milliseconds () }\r\n});\r\n\r\nexchange.proxy = cons.proxy;\r\nexchange.apiKey = cons.AK;\r\nexchange.secret = cons.SK;\r\n\r\nvar amountTrx = 0;\r\nvar ratetrx = 0;\r\nvar ratewozx = 0;\r\n\r\nvar tantoTrx = cons.TRX;\r\nvar tantoWozx = cons.WOZX;\r\nvar minimo_usd = cons.USD;\r\nvar rango_minimo = cons.SD;\r\nvar walletSponsor = cons.WS;\r\n\r\n//console.log(contractAddress);\r\n\r\nconst pry = cons.WO;\r\n\r\nvar pru = \"\";\r\nif (cons.PRU === \"shasta.\") {\r\n  pru = cons.PRU;\r\n\r\n}\r\n\r\nconst TRONGRID_API = \"https://api.\"+pru+\"trongrid.io\";\r\nconsole.log(TRONGRID_API);\r\n\r\nconst tronApp = new TronWeb2(\r\n  TRONGRID_API,\r\n  TRONGRID_API,\r\n  TRONGRID_API,\r\n  pry\r\n);\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      direccionTRX: \"\",\r\n      informacionCuenta: {},\r\n      amountTrx: \"\",\r\n      usdtrx: \"\",\r\n      min: 3000,\r\n      texto: \"Deposit TRX\",\r\n      tronEnApp: 0,\r\n      priceUSDTRON: 0\r\n\r\n    };\r\n\r\n    this.deposit = this.deposit.bind(this);\r\n    this.rateWozx = this.rateWozx.bind(this);\r\n    this.comprarWozx = this.comprarWozx.bind(this);\r\n    this.rateTRX = this.rateTRX.bind(this);\r\n    this.venderTRX = this.venderTRX.bind(this);\r\n\r\n    this.minDepo = this.minDepo.bind(this);\r\n    this.rateT = this.rateT.bind(this);\r\n    this.saldoApp = this.saldoApp.bind(this);\r\n\r\n    this.consultarTodosUsuarios = this.consultarTodosUsuarios.bind(this);\r\n    this.registrarUsuario = this.registrarUsuario.bind(this);\r\n    this.consultarUsuario = this.consultarUsuario.bind(this);\r\n    this.actualizarUsuario = this.actualizarUsuario.bind(this);\r\n\r\n    this.actualizarDireccion = this.actualizarDireccion.bind(this);\r\n    this.consultarTransaccion = this.consultarTransaccion.bind(this);\r\n\r\n\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    this.minDepo();\r\n    setInterval(() => this.minDepo(),30*1000);\r\n    setInterval(() => this.actualizarDireccion(),3*1000);\r\n    await this.actualizarDireccion();\r\n    var { direccionTRX } = this.state;\r\n    await this.consultarUsuario(direccionTRX,false);\r\n    setInterval(() => this.consultarUsuario(direccionTRX,false),3*1000);\r\n\r\n  };\r\n\r\n  async actualizarDireccion() {\r\n\r\n    document.getElementById(\"linkContrato\").innerHTML = \"<a class='smoothscroll'   href='https://\"+pru+\"tronscan.org/#/contract/\"+contractAddress+\"/code' target='_blank' rel='noopener noreferrer'>Contract</a>\";\r\n\r\n    var account =  await window.tronWeb.trx.getAccount();\r\n    account = window.tronWeb.address.fromHex(account.address);\r\n\r\n    this.setState({\r\n      direccionTRX: account\r\n    });\r\n\r\n  };\r\n\r\n  async consultarTransaccion(id){\r\n\r\n    this.setState({\r\n      texto: \"Updating balance...\"\r\n    });\r\n    await delay(3000);\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'consultar/transaccion/'+id;\r\n\r\n    const response = await fetch(proxyUrl+apiUrl)\r\n    .catch(error =>{console.error(error)});\r\n    const json = await response.json();\r\n\r\n    return json.result;\r\n\r\n  };\r\n\r\n  async rateT(){\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = 'https://api.coingecko.com/api/v3/coins/tron';\r\n    const response = await fetch(proxyUrl+apiUrl)\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n    console.log(json.market_data.current_price.usd);\r\n    this.setState({\r\n      priceUSDTRON: json.market_data.current_price.usd\r\n    });\r\n    return json.market_data.current_price.usd;\r\n\r\n\r\n  };\r\n\r\n  async consultarTodosUsuarios(){\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'consultar/todos';\r\n    const response = await fetch(proxyUrl+apiUrl)\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n\r\n    return json;\r\n\r\n  };\r\n\r\n  async consultarUsuario(direccionTRX, otro){\r\n\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'consultar/'+direccionTRX;\r\n    const response = await fetch(proxyUrl+apiUrl)\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n\r\n    if (!otro) {\r\n      this.setState({\r\n        informacionCuenta: json\r\n      });\r\n      return json;\r\n    }else{\r\n      return json;\r\n    }\r\n\r\n  };\r\n\r\n  async actualizarUsuario( datos, otro ){\r\n    //Asegura que es el usuario conectado con tronlink\r\n    await this.actualizarDireccion();\r\n    var { direccionTRX } = this.state;\r\n    //encaso de recibir otro usiario se escoge el uasuario enviado para ser actualizado\r\n    if ( otro ) {\r\n      direccionTRX = otro;\r\n    }\r\n\r\n    datos.token = cons.MT;\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'actualizar/'+direccionTRX;\r\n    const response = await fetch(proxyUrl+apiUrl, {\r\n       method: 'POST',\r\n       headers: {\r\n        'Content-Type': 'application/json'\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n       body: JSON.stringify(datos)\r\n    })\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n\r\n    return json;\r\n\r\n  };\r\n\r\n  async registrarUsuario(datos){\r\n    //Asegura que es el usuario conectado\r\n    var { direccionTRX } = this.state;\r\n    //console.log(direccionTRX);\r\n    datos.token = cons.MT;\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'registrar/'+direccionTRX;\r\n    const response = await fetch(proxyUrl+apiUrl, {\r\n       method: 'POST',\r\n       headers: {\r\n        'Content-Type': 'application/json'\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n       body: JSON.stringify(datos)\r\n    })\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n    console.log(json);\r\n    return true;\r\n\r\n\r\n  };\r\n\r\n  async minDepo(){\r\n\r\n    var priceUSDTRON = await this.rateT();\r\n\r\n    var mini = parseInt(minimo_usd/priceUSDTRON);\r\n\r\n    var mindepo = await Utils.contract.MIN_DEPOSIT().call();\r\n    mindepo = parseInt(mindepo._hex)/1000000;\r\n\r\n    if ( mini > 0 && mindepo !== mini && ( ( mindepo >= mini+mini*rango_minimo) || ( mindepo <= mini-mini*rango_minimo) ) ) {\r\n\r\n      let contract = await tronApp.contract().at(contractAddress);//direccion del contrato para la W app\r\n      await contract.nuevoMinDeposit( mini * 1000000 ).send();\r\n      this.setState({\r\n        min: mini+1,\r\n\r\n      });\r\n      console.log(\"EVENTO: Nuevo minimo de deposito \"+mini+\" TRX // anterior \"+mindepo+\" TRX\");\r\n\r\n    }else{\r\n      this.setState({\r\n        min: mindepo+1,\r\n      });\r\n      console.log(\"INFO: Minimo de deposito \"+mini+\" TRX // aplicación \"+mindepo+\" TRX\");\r\n    }\r\n\r\n    await this.actualizarDireccion();// asegura que es la wallet conectada con el tronlik\r\n    var { direccionTRX } = this.state;\r\n    await this.consultarUsuario(direccionTRX,false);\r\n    var { informacionCuenta } = this.state;\r\n\r\n    if (!informacionCuenta.registered) {\r\n      document.getElementById(\"amount\").value = \"\";\r\n      this.setState({\r\n        texto:\"Click to register\"\r\n      });\r\n    }else{\r\n      this.setState({\r\n        texto:\"Deposit TRX\"\r\n      });\r\n    }\r\n\r\n  };\r\n\r\n  async saldoApp(){\r\n\r\n    var consulta = await exchange.fetchBalance();\r\n\r\n    var balance = parseFloat(consulta['TRX'].free);\r\n\r\n    this.setState({\r\n      tronEnApp: balance\r\n    });\r\n\r\n\r\n  };\r\n\r\n  async rateTRX(){\r\n\r\n    var consulta = await exchange.loadMarkets();\r\n\r\n    consulta = consulta['TRX/KRW'];\r\n\r\n    consulta = consulta['info'].closing_price;\r\n\r\n    var precio = parseFloat(consulta);\r\n    console.log(precio); //precio en KRW\r\n\r\n\r\n    ratetrx = precio-precio*tantoTrx;\r\n    ratetrx = parseFloat(ratetrx.toFixed(2));\r\n\r\n    console.log(ratetrx);\r\n\r\n    return ratetrx;\r\n\r\n\r\n\r\n  };\r\n\r\n  async venderTRX(){\r\n\r\n    await this.saldoApp();\r\n    await this.rateTRX();\r\n\r\n    this.setState({\r\n      texto:\"Please wait\"\r\n    });\r\n\r\n    // verifica el monto sea mayor a minimo\r\n    amountTrx = document.getElementById(\"amount\").value;\r\n    amountTrx = parseFloat(amountTrx);\r\n\r\n    var result = false;\r\n    var depomin = await Utils.contract.MIN_DEPOSIT().call();\r\n    depomin = parseInt(depomin._hex)/1000000;\r\n\r\n    // mira que el saldo de la wallet app sea por lo menos 1000 TRX\r\n    var walletApp = await tronApp.trx.getBalance();\r\n    walletApp = window.tronWeb.fromSun(walletApp); //string\r\n    walletApp = parseInt(walletApp);//number\r\n\r\n    // verifica si ya esta registrado\r\n    await this.actualizarDireccion();// asegura que es la wallet conectada con el tronlik\r\n    var { direccionTRX } = this.state;\r\n    await this.consultarUsuario(direccionTRX,false);\r\n    var { informacionCuenta } = this.state;\r\n\r\n    const balanceInSun = await window.tronWeb.trx.getBalance(); //number\r\n    var balanceInTRX = window.tronWeb.fromSun(balanceInSun); //string\r\n    balanceInTRX = parseInt(balanceInTRX);//number\r\n\r\n    var account =  await window.tronWeb.trx.getAccount();\r\n    account = window.tronWeb.address.fromHex(account.address);\r\n\r\n    var investor = await Utils.contract.investors(account).call();\r\n\r\n    if (walletApp > cons.MA){\r\n\r\n      if (informacionCuenta.registered) {\r\n\r\n        if (amountTrx <= 0 || amountTrx > balanceInTRX-50 || isNaN(amountTrx)) {\r\n\r\n          if ( amountTrx <= 0 || isNaN(amountTrx) ) {\r\n            window.alert(\"Please enter a correct amount\");\r\n          }\r\n\r\n          if (amountTrx > balanceInTRX-50) {\r\n            window.alert(\"You not enough TRON\");\r\n          }\r\n\r\n          document.getElementById(\"amount\").value = \"\";\r\n          this.setState({\r\n            texto:\"Deposit TRX\"\r\n          });\r\n\r\n        }else{\r\n\r\n          result = window.confirm(\"You are sure that you want to invest \"+amountTrx+\" TRX?, remember that this action have cost\");\r\n\r\n        }\r\n\r\n        if (result) {\r\n\r\n          if (amountTrx >= depomin && amountTrx <= balanceInTRX-50) {\r\n            this.deposit();\r\n          }\r\n\r\n        }else{\r\n          if ( depomin >= amountTrx ){\r\n            this.setState({\r\n              texto:\"Enter a higher amount\"\r\n            });\r\n          }\r\n\r\n          if (balanceInTRX-50 <= amountTrx ){\r\n            this.setState({\r\n              texto:\"Not enough TRON\"\r\n            });\r\n          }\r\n\r\n        }\r\n\r\n      }else{\r\n        if ( balanceInTRX >= 100) {\r\n            //registra a la persona con los referidos\r\n            var sponsor = walletSponsor;\r\n            var loc = document.location.href;\r\n            if(loc.indexOf('?')>0){\r\n                var getString = loc.split('?')[1];\r\n                var GET = getString.split('&');\r\n                var get = {};\r\n                for(var i = 0, l = GET.length; i < l; i++){\r\n                    var tmp = GET[i].split('=');\r\n                    get[tmp[0]] = unescape(decodeURI(tmp[1]));\r\n                }\r\n\r\n                if (get['ref']) {\r\n                  tmp = get['ref'].split('#');\r\n\r\n                  var infoSponsor = await this.consultarUsuario(tmp[0],true);\r\n\r\n                  if ( infoSponsor.registered ) {\r\n                    sponsor = tmp[0];\r\n                  }\r\n                }\r\n            }\r\n\r\n            document.getElementById(\"amount\").value = 50;\r\n\r\n            await this.actualizarDireccion();\r\n            direccionTRX = this.state;\r\n\r\n            var amount = parseInt(50 * 1000000);\r\n\r\n            var pago\r\n\r\n             if ( !investor.registered ) {\r\n               var id = await Utils.contract.miRegistro().send({ callValue: amount});\r\n\r\n               pago = await this.consultarTransaccion(id);\r\n             }else{\r\n               pago = true;\r\n             }\r\n\r\n            if(pago) {\r\n\r\n              await this.registrarUsuario({ sponsor: sponsor });\r\n\r\n              document.getElementById(\"amount\").value = \"\";\r\n              this.setState({\r\n                texto:\"Registration completed\"\r\n              });\r\n              delay(2000);\r\n               var t = 3;\r\n              setInterval(() => {\r\n                this.setState({\r\n                  texto:\"Reload in: \"+t\r\n                });\r\n                t--;\r\n              },1*1000);\r\n\r\n              setInterval(() => document.location.reload(),3*1000);\r\n\r\n            }else{\r\n            document.getElementById(\"amount\").value = \"\";\r\n            this.setState({\r\n              texto:\"Not enough TRON or cancelled\"\r\n            });\r\n\r\n          }\r\n\r\n\r\n        }else{\r\n          window.alert(\"You wallet will has 100 trx to do the register\");\r\n        }\r\n      }\r\n    }else {\r\n      window.alert(\"Please contact the administrator Code: IMT-E-WA\");\r\n      // IMT-E-WA = Ingrese Mas Tron En la  Wallet de la Aplicación.\r\n      console.log(\"Minimo de 1000 tron Alcanzado ingresa más tron a la wallet de la plicación: \"+cons.SC)\r\n    }\r\n\r\n\r\n  };\r\n\r\n  async rateWozx(){\r\n\r\n    var cositas = await exchange.loadMarkets();\r\n\r\n    cositas = cositas['WOZX/KRW'];\r\n\r\n    var precio = cositas['info'].closing_price;\r\n\r\n    precio = parseInt(precio);\r\n    console.log(precio);\r\n\r\n    ratewozx = precio+precio*tantoWozx;\r\n\r\n    ratewozx = parseInt(ratewozx);\r\n\r\n\r\n  }\r\n\r\n  async comprarWozx(krw){\r\n\r\n    await this.rateWozx();\r\n\r\n    this.setState({\r\n      texto:\"Processing...\"\r\n    });\r\n\r\n    var amount = krw/ratewozx;\r\n    amount = amount.toFixed(4);\r\n    console.log(amount);\r\n\r\n    var orden = await exchange.createLimitBuyOrder('WOZX/KRW', amount, ratewozx);\r\n\r\n    console.log(orden);\r\n\r\n    if (orden.info.status === \"0000\") {\r\n\r\n      var symbol = \"WOZX/KRW\";\r\n      var params = {};\r\n\r\n      var cositas = await exchange.fetchOrder(orden.id, symbol, params);\r\n\r\n      var monto = cositas.amount;\r\n\r\n      console.log(monto)\r\n\r\n    }else{\r\n      this.setState({\r\n        texto:\"Error: U-Cf-408\"\r\n      });\r\n      //No hay suficiente saldo de USD en Bithumb.com\r\n    }\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  async deposit() {\r\n\r\n    let amount = document.getElementById(\"amount\").value;\r\n\r\n    this.setState({\r\n      texto:\"Reciving TRON\"\r\n    });\r\n\r\n    amount = parseInt(amount * 1000000);\r\n\r\n    var id = await Utils.contract.depositoTron().send({callValue:amount});\r\n\r\n    var pago = await this.consultarTransaccion(id);\r\n\r\n    if ( pago ) {\r\n\r\n      tronApp.trx.sendTransaction(cons.EX, amount);\r\n\r\n      amount = amount/1000000;\r\n\r\n      var { informacionCuenta } = this.state;\r\n\r\n      informacionCuenta.balanceTrx += amount;\r\n\r\n      informacionCuenta.historial.push({\r\n          tiempo: Date.now(),\r\n          valor: amount,\r\n          moneda: 'TRX',\r\n          accion: 'Deposit to plataform',\r\n          link: id\r\n\r\n      })\r\n\r\n      var otro = null;\r\n\r\n      await this.actualizarUsuario( informacionCuenta, otro );\r\n\r\n      this.setState({\r\n        texto:\"Deposit is done!\"\r\n      });\r\n\r\n    }else{\r\n\r\n      this.setState({\r\n        texto:\"Canceled for User\"\r\n      });\r\n    }\r\n\r\n    document.getElementById(\"amount\").value = \"\";\r\n\r\n\r\n  };\r\n\r\n  render() {\r\n    var { min, texto} = this.state;\r\n\r\n    min = \"Min. deposit \"+min+\" TRX\";\r\n\r\n    return (\r\n\r\n      <div className=\"card wow bounceInUp\">\r\n        <div className=\"card-body\">\r\n        <header className=\"section-header\">\r\n              <h3>Make a deposit</h3>\r\n          </header>\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <input type=\"number\" className=\"form-control amount\" id=\"amount\" placeholder={min}></input>\r\n                <p className=\"card-text\">You must have ~ 40 TRX to make the transaction</p>\r\n              </div>\r\n            </form>\r\n          <button type=\"button\" className=\"btn btn-light\" style={{'backgroundColor': 'green','color': 'white','borderBlockColor': 'green'}} onClick={() => this.venderTRX()}>{texto}</button>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\nimport cons from \"../../cons.js\";\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      historial: []\r\n\r\n    }\r\n\r\n    this.verHistorial = this.verHistorial.bind(this);\r\n    this.consultarUsuario = this.consultarUsuario.bind(this);\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    this.verHistorial();\r\n    setInterval(() => this.verHistorial(),360*1000);\r\n  };\r\n\r\n  async consultarUsuario(direccionTRX, otro){\r\n\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = 'https://ewozx-mdb.herokuapp.com/consultar/'+direccionTRX;\r\n    const response = await fetch(proxyUrl+apiUrl)\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n\r\n    if (!otro) {\r\n      this.setState({\r\n        informacionCuenta: json\r\n      });\r\n      return json;\r\n    }else{\r\n\r\n      console.log(json);\r\n      return json;\r\n    }\r\n\r\n  };\r\n\r\n  async verHistorial(){\r\n\r\n    var historial = [];\r\n\r\n    var direccion =  await window.tronWeb.trx.getAccount();\r\n    direccion = window.tronWeb.address.fromHex(direccion.address);\r\n\r\n    var usuario =  await this.consultarUsuario(direccion, false);\r\n\r\n    if ( usuario.registered ) {\r\n\r\n      if ( usuario.historial.length > 0) {\r\n\r\n        var o = 0\r\n        if (usuario.historial.length > 10) {\r\n          o = usuario.historial.length-10;\r\n        }\r\n        for (var i = o; i < usuario.historial.length; i++) {\r\n\r\n          var ver = usuario.historial[i];\r\n          ver.tiempo = new Date(ver.tiempo);\r\n          var pru = \"\";\r\n          if (cons.PRU === \"shasta.\") {\r\n            pru = cons.PRU;\r\n          }\r\n          ver.link = \"https://\"+pru+\"tronscan.io/#/transaction/\"+ver.link\r\n          //console.log(ver);\r\n\r\n          let evento = (\r\n\r\n              <div className=\"col-full\" key={ver._id}>\r\n                <a href={ver.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  <span style={{fontSize: '18px'}} title={ver.tiempo}> {ver.valor} | {ver.moneda} | {ver.accion} </span>\r\n                </a>\r\n              </div>\r\n\r\n          );\r\n          historial.splice(0,0,evento);\r\n\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      historial: historial\r\n    });\r\n\r\n\r\n\r\n\r\n\r\n  };\r\n\r\n  render() {\r\n    var { historial } = this.state;\r\n\r\n    const divStyle = {\r\n      width: '100%',\r\n      height:'115px',\r\n      overflow: 'scroll'\r\n    };\r\n\r\n    return (\r\n\r\n      <div>\r\n        <h3>Transactions <button type=\"button\" className=\"btn btn-light\" onClick={() => this.verHistorial()}>Reload</button></h3>\r\n\r\n        <div style={divStyle}>\r\n\r\n          {historial}\r\n\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nimport cons from \"../../cons.js\";\r\n\r\nimport ccxt from 'ccxt';\r\n\r\nconst exchange = new ccxt.bithumb({\r\n    nonce () { return this.milliseconds () }\r\n});\r\n\r\nexchange.proxy = cons.proxy;\r\nexchange.apiKey = cons.AK;\r\nexchange.secret = cons.SK;\r\n\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      rango: \"N/A\",\r\n      ganancia: 0,\r\n      refe: [],\r\n      direccion: \"\",\r\n      link: \"Make an investment to get the referral LINK\",\r\n      registered: false,\r\n      balanceTrx: \"0\",\r\n      withdrawnTrx: \"0\",\r\n      investedWozx: \"0\",\r\n      withdrawnWozx: \"0\",\r\n      wozxPe: false,\r\n      wozxCa: 0,\r\n      miPrecioWozx: 0,\r\n      priceUSDWOZX: 0\r\n\r\n    };\r\n\r\n    this.Investors = this.Investors.bind(this);\r\n    this.enviarWozx = this.enviarWozx.bind(this);\r\n    this.Link = this.Link.bind(this);\r\n    this.Wozx = this.Wozx.bind(this);\r\n    this.rateW = this.rateW.bind(this);\r\n\r\n    this.consultarUsuario = this.consultarUsuario.bind(this);\r\n    this.actualizarDireccion = this.actualizarDireccion.bind(this);\r\n    this.actualizarUsuario = this.actualizarUsuario.bind(this);\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    this.rateW();\r\n    await this.Link();\r\n    setInterval(() => this.Link(),3*1000);\r\n    await this.Investors();\r\n    setInterval(() => this.Investors(),10*1000);\r\n  };\r\n\r\n  async consultarUsuario(direccionTRX, otro){\r\n\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'consultar/'+direccionTRX;\r\n    const response = await fetch(proxyUrl+apiUrl)\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n\r\n    if (!otro) {\r\n      this.setState({\r\n        informacionCuenta: json\r\n      });\r\n      return json;\r\n    }else{\r\n\r\n      console.log(json);\r\n      return json;\r\n    }\r\n\r\n  };\r\n\r\n  async actualizarDireccion() {\r\n\r\n    var account =  await window.tronWeb.trx.getAccount();\r\n    account = window.tronWeb.address.fromHex(account.address);\r\n\r\n    this.setState({\r\n      direccionTRX: account\r\n    });\r\n\r\n  };\r\n\r\n  async actualizarUsuario( datos, otro ){\r\n    //Asegura que es el usuario conectado con tronlink\r\n    await this.actualizarDireccion();\r\n    var { direccionTRX } = this.state;\r\n    //encaso de recibir otro usiario se escoge el uasuario enviado para ser actualizado\r\n    if ( otro ) {\r\n      direccionTRX = otro;\r\n    }\r\n\r\n    datos.token = cons.MT;\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'actualizar/'+direccionTRX;\r\n    const response = await fetch(proxyUrl+apiUrl, {\r\n       method: 'POST',\r\n       headers: {\r\n        'Content-Type': 'application/json'\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n       body: JSON.stringify(datos)\r\n    })\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n\r\n    console.log(json);\r\n    return json;\r\n\r\n  };\r\n\r\n  async rateW(){\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = 'https://api.coingecko.com/api/v3/coins/wozx';\r\n    fetch(proxyUrl+apiUrl).then(response => {\r\n      return response.json();\r\n    }).then(data => {\r\n      // Work with JSON data\r\n      this.setState({\r\n        priceUSDWOZX: data.market_data.current_price.usd\r\n      });\r\n\r\n    }).catch(err => {\r\n        console.log(err)\r\n\r\n    });\r\n\r\n  };\r\n\r\n  async Wozx (){\r\n\r\n    const { investedWozx } = this.state;\r\n\r\n    document.getElementById(\"cantidadwozx\").value = investedWozx;\r\n\r\n  };\r\n\r\n  async Link() {\r\n    const {registered} = this.state;\r\n    if(registered){\r\n\r\n      let loc = document.location.href;\r\n      if(loc.indexOf('?')>0){\r\n        loc = loc.split('?')[0];\r\n        loc = loc.split('#')[0];\r\n      }\r\n      let mydireccion = await window.tronWeb.trx.getAccount();\r\n      mydireccion = window.tronWeb.address.fromHex(mydireccion.address)\r\n      mydireccion = loc+'?ref='+mydireccion;\r\n      this.setState({\r\n        link: mydireccion,\r\n      });\r\n    }else{\r\n      this.setState({\r\n        link: \"Haz una inversión para obtener el LINK de referido\",\r\n      });\r\n    }\r\n  }\r\n\r\n  async Investors() {\r\n\r\n    this.rateW();\r\n\r\n    const {investedWozx, priceUSDWOZX} = this.state;\r\n\r\n    var direccion = await window.tronWeb.trx.getAccount();\r\n    direccion = direccion = window.tronWeb.address.fromHex(direccion.address);\r\n\r\n    var usuario =  await this.consultarUsuario(direccion, false);\r\n    var range = \"N/A\";\r\n    var prof = usuario.rango;\r\n    \r\n    prof = prof.toFixed(2);\r\n    prof = parseFloat(prof);\r\n    //console.log(prof);\r\n    if (prof > 0 && prof < 1000  ) {\r\n      range = \"PIONEER\"\r\n    }\r\n    if (prof >= 1000 && prof < 5000  ) {\r\n      range = \"ZAPHIRE\"\r\n    }\r\n    if (prof >= 5000 && prof < 20000  ) {\r\n      range = \"RUBY\"\r\n    }\r\n    if (prof >= 20000 && prof < 50000  ) {\r\n      range = \"ESMERALDA\"\r\n    }\r\n    if (prof >= 50000 && prof < 140000  ) {\r\n      range = \"DIAMANTE\"\r\n    }\r\n    if (prof >= 140000 && prof < 400000  ) {\r\n      range = \"DIAMANTE AZUL\"\r\n    }\r\n    if (prof >= 400000 && prof < 1000000  ) {\r\n      range = \"DIAMANTE NEGRO\"\r\n    }\r\n    if (prof >= 1000000) {\r\n      range = \"DIAMANTE CORONA\"\r\n    }\r\n    //console.log(prof);\r\n\r\n\r\n    this.setState({\r\n      direccion: direccion,\r\n      registered: usuario.registered,\r\n      balanceTrx: usuario.balanceTrx,\r\n      withdrawnTrx: usuario.withdrawnTrx,\r\n      investedWozx: usuario.investedWozx,\r\n      withdrawnWozx: usuario.withdrawnWozx,\r\n      refe: usuario.nivel,\r\n      rango: range,\r\n      ganancia: prof,\r\n      miPrecioWozx: investedWozx*priceUSDWOZX\r\n    });\r\n\r\n  };\r\n\r\n  async enviarWozx(){\r\n\r\n    const {investedWozx} = this.state;\r\n\r\n    let direccion = document.getElementById(\"enviartronwozx\").value;\r\n    var cantidad = document.getElementById(\"cantidadwozx\").value;\r\n\r\n    var account =  await window.tronWeb.trx.getAccount();\r\n    var accountAddress = account.address;\r\n    accountAddress = window.tronWeb.address.fromHex(accountAddress);\r\n\r\n    var result= false;\r\n\r\n    console.log(direccion.length);\r\n    if ( !window.tronWeb.isAddress(direccion) || accountAddress === direccion ) {\r\n\r\n      window.alert(\"Please enter a correct address\");\r\n      document.getElementById(\"enviartronwozx\").value = \"\";\r\n\r\n    }else{\r\n\r\n\r\n      if (cantidad <= 0 || cantidad === \"\" || cantidad > investedWozx) {\r\n        window.alert(\"Please enter a correct amount\");\r\n        document.getElementById(\"cantidadwozx\").value = \"\";\r\n\r\n      }else{\r\n\r\n        result = window.confirm(\"You are sure that you want to SEND \"+cantidad+\" Wozx?, remember that this action cannot be reversed\");\r\n\r\n      }\r\n\r\n    }\r\n\r\n    account =  await window.tronWeb.trx.getAccount();\r\n    accountAddress = account.address;\r\n    accountAddress = window.tronWeb.address.fromHex(accountAddress);\r\n\r\n    var informacionCuenta = await this.consultarUsuario(accountAddress, true);\r\n    var informacionDestino = await this.consultarUsuario(direccion, true);\r\n\r\n    if (result && await Utils.contract.enviarWozx(direccion, parseInt(cantidad*1000000)).send() && informacionCuenta.registered && informacionDestino.registered) {\r\n\r\n      informacionCuenta.investedWozx -= cantidad;\r\n      informacionCuenta.withdrawnWozx += cantidad;\r\n      informacionCuenta.historial.push({\r\n          tiempo: Date.now(),\r\n          valor: cantidad,\r\n          moneda: 'WOZX',\r\n          accion: 'Sed to: '+direccion\r\n\r\n      })\r\n\r\n      var otro = accountAddress;\r\n      await this.actualizarUsuario( informacionCuenta, otro);\r\n\r\n      informacionDestino.investedWozx += cantidad;\r\n      informacionDestino.withdrawnWozx -= cantidad;\r\n      informacionDestino.historial.push({\r\n          tiempo: Date.now(),\r\n          valor: cantidad,\r\n          moneda: 'WOZX',\r\n          accion: 'Send From: '+accountAddress\r\n\r\n      })\r\n\r\n      otro = direccion;\r\n      await this.actualizarUsuario( informacionDestino, otro);\r\n\r\n      document.getElementById(\"cantidadwozx\").value = \"\";\r\n\r\n    }\r\n\r\n  };\r\n\r\n\r\n  render() {\r\n    var {miPrecioWozx, wozxPe, wozxCa, refe, balanceTrx, withdrawnTrx, investedWozx,  withdrawnWozx , direccion, link, rango, ganancia} = this.state;\r\n\r\n\r\n\r\n\r\n    if ( wozxPe ) {\r\n      wozxPe =\"(~ \"+wozxCa+\" WOZX)\";\r\n    }else{\r\n      wozxPe =\"\";\r\n    }\r\n\r\n\r\n    withdrawnTrx = parseFloat(withdrawnTrx);\r\n    withdrawnTrx = withdrawnTrx.toFixed(2);\r\n\r\n    investedWozx = parseFloat(investedWozx);\r\n    investedWozx  = investedWozx.toFixed(4);\r\n\r\n    withdrawnWozx = parseFloat(withdrawnWozx);\r\n    withdrawnWozx = withdrawnWozx.toFixed(4);\r\n\r\n    balanceTrx = parseFloat(balanceTrx);\r\n    balanceTrx = balanceTrx.toFixed(2);\r\n\r\n    return (\r\n\r\n      <div id=\"officer\" className=\"container\">\r\n\r\n        <header style={{'textAlign': 'center'}} className=\"section-header\">\r\n          <h3 className=\"white\"><span style={{'fontWeight': 'bold'}}>\r\n          My office:</span> <br></br>\r\n          <span style={{'fontSize': '18px'}}>\r\n\r\n            {direccion} <br />\r\n            <span className=\"subhead\">{investedWozx} WOZX =</span> $ {miPrecioWozx.toFixed(2)} USD <br />\r\n            <span className=\"subhead\">Career range:</span><a href=\"/range.html\"> {rango} </a> <br />\r\n            <span className=\"subhead\">Profits:</span> $ {ganancia} USD\r\n\r\n          </span></h3><br />\r\n          <ul className=\"stats-tabs\">\r\n            <li><a href=\"#officer\">{refe[0]} <em>Level 1</em></a></li>\r\n            <li><a href=\"#officer\">{refe[1]} <em>Level 2</em></a></li>\r\n            <li><a href=\"#officer\">{refe[2]} <em>Level 3</em></a></li>\r\n            <li><a href=\"#officer\">{refe[3]} <em>Level 4</em></a></li>\r\n            <li><a href=\"#officer\">{refe[4]} <em>Level 5</em></a></li>\r\n            <li><a href=\"#officer\">{refe[5]} <em>Level 6</em></a></li>\r\n            <li><a href=\"#officer\">{refe[6]} <em>Level 7</em></a></li>\r\n            <li><a href=\"#officer\">{refe[7]} <em>Level 8</em></a></li>\r\n            <li><a href=\"#officer\">{refe[8]} <em>Level 9</em></a></li>\r\n            <li><a href=\"#officer\">{refe[9]} <em>Level 10</em></a></li>\r\n          </ul>\r\n\r\n          <h3 className=\"white\" style={{'fontWeight': 'bold'}}>Referral link:</h3>\r\n          <h6 className=\"white\" ><a href={link}>{link}</a>&nbsp;<br /><br />\r\n          <CopyToClipboard text={link}>\r\n            <button type=\"button\" className=\"btn btn-info\">Copy to clipboard</button>\r\n          </CopyToClipboard>\r\n          </h6>\r\n          <hr></hr>\r\n\r\n        </header>\r\n\r\n        <div className=\"row centrartexto\">\r\n\r\n          <div className=\"col-five\">\r\n\r\n              <h1 className=\"subhead\">Balance</h1>\r\n              <h3 className=\"display-2--light\">{investedWozx} WOZX</h3>\r\n              <h3 className=\"display-2--light\">{wozxPe}</h3>\r\n              <hr></hr>\r\n\r\n          </div>\r\n\r\n          <div className=\"col-seven\">\r\n\r\n              <h1 className=\"subhead\">Withdrawn</h1>\r\n              <h3 className=\"display-2--light\">{withdrawnWozx} WOZX</h3>\r\n              <hr></hr>\r\n\r\n          </div>\r\n        </div>\r\n        <div className=\"row centrartexto\">\r\n\r\n          <div className=\"col-five\">\r\n\r\n              <h1 className=\"subhead\">Balance</h1>\r\n              <h3 className=\"display-2--light\">{balanceTrx} TRX</h3>\r\n              <hr></hr>\r\n\r\n          </div>\r\n\r\n          <div className=\"col-seven\">\r\n\r\n              <h1 className=\"subhead\">Withdrawn</h1>\r\n              <h3 className=\"display-2--light\">{withdrawnTrx} TRX</h3>\r\n              <hr></hr>\r\n\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"row centrartexto\">\r\n\r\n          <div className=\"col-seven\">\r\n\r\n              <h3 className=\"display-2--light\"> Send WOZX to USER:</h3>\r\n              <input type=\"text\" className=\"form-control\" id=\"enviartronwozx\" aria-describedby=\"emailHelp\" placeholder=\"Tron wallet Member\" />\r\n              <small id=\"emailHelp\" className=\"form-text text-muted\">make sure the address is well written, once sent, this action cannot be reversed</small>\r\n\r\n\r\n          </div>\r\n\r\n          <div className=\"col-five\">\r\n\r\n              <h3 className=\"display-2--light\" style={{cursor: \"pointer\"}} onClick={() => this.Wozx()}> Available {investedWozx} WOZX</h3>\r\n              <input type=\"number\" className=\"form-control\" id=\"cantidadwozx\" aria-describedby=\"emailHelp\" placeholder=\"how much WOZX\" />\r\n              <a className=\"btn btn-light\"  href=\"#enviartronwozx\" style={{'backgroundColor': 'red','color': 'white','borderBlockColor': 'red'}} onClick={() => this.enviarWozx()}>send WOZX</a>\r\n\r\n          </div>\r\n\r\n          <hr />\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nimport cons from \"../../cons.js\";\r\n\r\nimport TronWeb2 from 'tronweb';\r\n\r\nimport web3 from 'web3';\r\n\r\nimport ccxt from 'ccxt';\r\n\r\nconst delay = ms => new Promise(res => setTimeout(res, ms));\r\n\r\nconst exchange = new ccxt.bithumb({\r\n    nonce () { return this.milliseconds () }\r\n});\r\n\r\nexchange.proxy = cons.proxy;\r\nexchange.apiKey = cons.AK;\r\nexchange.secret = cons.SK;\r\n\r\nvar tantoTrx = cons.TRX;// para que el TRX se Venda de inmediato\r\nvar tantoWozx = cons.WOZX;// para que el WOZX se venda de inmediato\r\n\r\nvar amountTrx = 0;\r\nvar ratetrx = 0;\r\nvar ratewozx = 0;\r\n\r\nvar descuento = cons.descuento;\r\n\r\nconst pry = cons.WO;\r\n\r\nvar pru = \"\";\r\nif (cons.PRU === \"shasta.\") {\r\n  pru = cons.PRU;\r\n}\r\n\r\nconst TRONGRID_API = \"https://api.\"+pru+\"trongrid.io\";\r\nconsole.log(TRONGRID_API);\r\n\r\nconst tronApp = new TronWeb2(\r\n  TRONGRID_API,\r\n  TRONGRID_API,\r\n  TRONGRID_API,\r\n  pry\r\n);\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      pago: false,\r\n      ratetrx: \"\",\r\n      ratewozx: \"\",\r\n      tipo: \"button\",\r\n      auth: \"/auth.html\",\r\n      texto: \"Loading...\",\r\n      texto3: \"Buy WOZX <- TRX\",\r\n      texto4:\"Sell WOZX -> TRX\",\r\n      value: \"\",\r\n      fee: cons.FEEW,\r\n      feetrx: cons.FEET,\r\n      funcion: false,\r\n      alerta: \"alerta0\",\r\n      direccion: \"\",\r\n      registered: false,\r\n      balanceRef: 0,\r\n      totalRef: 0,\r\n      invested: 0,\r\n      paidAt: 0,\r\n      my: 0,\r\n      withdrawn: 0\r\n\r\n    };\r\n\r\n    this.Investors = this.Investors.bind(this);\r\n    this.withdraw = this.withdraw.bind(this);\r\n    this.rateWozx = this.rateWozx.bind(this);\r\n    this.venderWozx = this.venderWozx.bind(this);\r\n    this.rateTRX = this.rateTRX.bind(this);\r\n    this.comprarTRX = this.comprarTRX.bind(this);\r\n    this.enviarTron = this.enviarTron.bind(this);\r\n    this.vereth = this.vereth.bind(this);\r\n    this.reset = this.reset.bind(this);\r\n    this.withdrawETH = this.withdrawETH.bind(this);\r\n    this.enviarEth = this.enviarEth.bind(this);\r\n    this.saldoApp = this.saldoApp.bind(this);\r\n    this.Wozx = this.Wozx.bind(this);\r\n    this.Tron = this.Tron.bind(this);\r\n    this.rateT = this.rateT.bind(this);\r\n    this.venderTRX = this.venderTRX.bind(this);\r\n    this.comprarWozx = this.comprarWozx.bind(this);\r\n\r\n    this.consultarUsuario = this.consultarUsuario.bind(this);\r\n    this.actualizarDireccion = this.actualizarDireccion.bind(this);\r\n    this.actualizarUsuario = this.actualizarUsuario.bind(this);\r\n\r\n    this.consultarTransaccion = this.consultarTransaccion.bind(this);\r\n\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    await this.Investors();\r\n    await this.vereth();\r\n    await this.enviarEth();\r\n    setInterval(() => this.Investors(),10*1000);\r\n    setInterval(() => this.vereth(),10*1000);\r\n    setInterval(() => this.enviarEth(),3*1000);\r\n\r\n  };\r\n\r\n  async actualizarUsuario( datos, otro ){\r\n    //Asegura que es el usuario conectado con tronlink\r\n    await this.actualizarDireccion();\r\n    var { direccionTRX } = this.state;\r\n    //encaso de recibir otro usiario se escoge el uasuario enviado para ser actualizado\r\n    if ( otro ) {\r\n      direccionTRX = otro;\r\n    }\r\n\r\n    datos.token = cons.MT;\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'actualizar/'+direccionTRX;\r\n    const response = await fetch(proxyUrl+apiUrl, {\r\n       method: 'POST',\r\n       headers: {\r\n        'Content-Type': 'application/json'\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n       body: JSON.stringify(datos)\r\n    })\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n\r\n    console.log(json);\r\n    return json;\r\n\r\n  };\r\n\r\n  async actualizarDireccion() {\r\n\r\n    var account =  await window.tronWeb.trx.getAccount();\r\n    account = window.tronWeb.address.fromHex(account.address);\r\n\r\n    this.setState({\r\n      direccionTRX: account\r\n    });\r\n\r\n  };\r\n\r\n  async consultarUsuario(direccionTRX, otro){\r\n\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'consultar/'+direccionTRX;\r\n    const response = await fetch(proxyUrl+apiUrl)\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n\r\n    if (!otro) {\r\n      this.setState({\r\n        informacionCuenta: json\r\n      });\r\n      return json;\r\n    }else{\r\n\r\n      console.log(json);\r\n      return json;\r\n    }\r\n\r\n  };\r\n\r\n  async consultarTransaccion(id){\r\n\r\n    this.setState({\r\n      texto3: \"Updating balance...\"\r\n    });\r\n    await delay(3000);\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = cons.mongo+'consultar/transaccion/'+id;\r\n    console.log(apiUrl);\r\n    const response = await fetch(proxyUrl+apiUrl)\r\n    .catch(error =>{console.error(error)});\r\n    const json = await response.json();\r\n    console.log(json);\r\n    return json.result;\r\n\r\n  };\r\n\r\n  async Wozx (){\r\n\r\n    const { investedWozx } = this.state;\r\n    document.getElementById(\"amountWOZX\").value = investedWozx;\r\n\r\n  };\r\n\r\n  async Tron (){\r\n\r\n    const { balanceTrx } = this.state;\r\n    document.getElementById(\"amountTRX\").value = balanceTrx;\r\n\r\n  };\r\n\r\n  async saldoApp(){\r\n\r\n    var consulta = await exchange.fetchBalance();\r\n\r\n    var balance = parseFloat(consulta['TRX'].free);//balance trx en el exchange\r\n\r\n    this.setState({\r\n      tronEnApp: balance\r\n    });\r\n\r\n    return balance;\r\n\r\n  };\r\n\r\n\r\n  async rateTRX(){\r\n\r\n    var cositas = await exchange.loadMarkets();\r\n\r\n    cositas = cositas['TRX/KRW'];\r\n\r\n    var precio = cositas['info'];\r\n    precio = precio.closing_price;\r\n\r\n    precio = parseFloat(precio);//precio en KRW\r\n\r\n    ratetrx = precio-precio*tantoTrx;\r\n    ratetrx = parseFloat(ratetrx.toFixed(2));\r\n\r\n  };\r\n\r\n  async rateT(){\r\n    var proxyUrl = cons.proxy;\r\n    var apiUrl = 'https://api.coingecko.com/api/v3/coins/tron';\r\n    const response = await fetch(proxyUrl+apiUrl)\r\n    .catch(error =>{console.error(error)})\r\n    const json = await response.json();\r\n\r\n    this.setState({\r\n      priceUSDTRON: json.market_data.current_price.usd\r\n    });\r\n    return json.market_data.current_price.usd;\r\n\r\n\r\n  };\r\n\r\n  async venderTRX(){\r\n\r\n    await this.saldoApp();\r\n    await this.rateTRX();\r\n\r\n    this.setState({\r\n      texto3:\"Please wait\"\r\n    });\r\n\r\n    // verifica el monto sea mayor a minimo\r\n    amountTrx = document.getElementById(\"amountTRX\").value;\r\n    amountTrx = parseFloat(amountTrx);\r\n    var amountTrxsindescuento = amountTrx;\r\n\r\n    var depomin = await Utils.contract.MIN_DEPOSIT().call();\r\n    depomin = parseInt(depomin._hex)/1000000;\r\n    // verifica si ya esta registrado\r\n    const account =  await window.tronWeb.trx.getAccount();\r\n    var accountAddress = account.address;\r\n    accountAddress = window.tronWeb.address.fromHex(accountAddress);\r\n\r\n    var investors = await Utils.contract.investors(accountAddress).call();\r\n    //investors.\r\n    console.log(investors);\r\n\r\n    if ( amountTrx <= 0 || isNaN(amountTrx) || amountTrx > parseInt(investors.tronDisponible._hex )/1000000) {\r\n      window.alert(\"Please enter a correct amount\");\r\n      document.getElementById(\"amountTRX\").value = \"\";\r\n      this.setState({\r\n        texto3:\"Buy WOZX <- TRX\"\r\n      });\r\n\r\n    }else{\r\n      var COMISION_RETIRO = await Utils.contract.COMISION_TRON().call();\r\n        COMISION_RETIRO = parseInt(COMISION_RETIRO._hex)/1000000;\r\n      var result = window.confirm(\"You are sure you want to invest \"+amountTrx+\" TRX? this action cost \"+COMISION_RETIRO+\" TRX\");\r\n    }\r\n\r\n\r\n    if ( result && investors.registered && parseInt(investors.tronDisponible)/1000000 >= amountTrx ) {\r\n        if ( amountTrx >= depomin ) {\r\n          amountTrx = amountTrx - amountTrx*descuento;\r\n          amountTrx = amountTrx -cons.FEET;\r\n          amountTrx = amountTrx.toFixed(2);\r\n\r\n          if (amountTrx <= await this.saldoApp()){\r\n\r\n            var orden;\r\n\r\n            var id = await Utils.contract.retirarTron( amountTrxsindescuento*1000000 ).send();\r\n            console.log(id);\r\n            var pago = await this.consultarTransaccion(id);\r\n\r\n            if ( pago ) {\r\n              orden = await exchange.createLimitSellOrder('TRX/KRW', amountTrx, ratetrx)\r\n            }else{\r\n              this.setState({\r\n                texto3:\"Canceled by user\"\r\n              });\r\n            }\r\n\r\n\r\n            if (orden.info.status === \"0000\") {\r\n                this.setState({\r\n                  texto:\"Buying WOZX\"\r\n                });\r\n                var symbol = \"TRX/KRW\";\r\n                var params = {};\r\n                //vende el tron y obtiene KRW\r\n                orden = await exchange.fetchOrder (orden.id, symbol, params);\r\n\r\n                this.setState({\r\n                  texto3:\"Buying WOZX\"\r\n                });\r\n\r\n                this.comprarWozx(orden.cost, amountTrxsindescuento, accountAddress, id);\r\n\r\n            }\r\n\r\n          }else{\r\n              this.setState({\r\n                texto3:\"Try again in 10 minutes\"\r\n              });\r\n              //No hay suficiente TRON en su exchange\r\n            }\r\n\r\n        }else{\r\n          if ( depomin >= amountTrx ){\r\n            this.setState({\r\n              texto3:\"Enter a higher amount\"\r\n            });\r\n          }\r\n\r\n        }\r\n\r\n    }else{\r\n      document.getElementById(\"amount\").value = \"\";\r\n\r\n      this.setState({\r\n        texto3:\"Not registered or canceled\"\r\n      });\r\n\r\n\r\n    }\r\n\r\n    this.setState({\r\n      texto3:\"Buy WOZX <- TRX\"\r\n    });\r\n\r\n\r\n  };\r\n\r\n  async rateWozx(){\r\n\r\n    var cositas = await exchange.loadMarkets();\r\n\r\n    cositas = cositas['WOZX/KRW'];\r\n\r\n    var precio = cositas['info'];\r\n    precio = precio.closing_price;\r\n\r\n    precio = parseInt(precio);\r\n    console.log(precio);\r\n\r\n    ratewozx = precio+precio*tantoWozx;\r\n\r\n    ratewozx = parseInt(ratewozx);\r\n\r\n    return ratewozx;\r\n\r\n\r\n  }\r\n\r\n  async comprarWozx( usd, amountTrxsindescuento, accountAddress, id ){\r\n\r\n    await this.rateWozx();\r\n\r\n    this.setState({\r\n      texto3:\"Processing...\"\r\n    });\r\n\r\n    let amount = usd/parseFloat(ratewozx);\r\n\r\n    amount = amount.toFixed(4);\r\n    amount = parseFloat(amount);\r\n    console.log(amount);\r\n\r\n    var orden2 = await exchange.createLimitBuyOrder('WOZX/KRW', amount, ratewozx);\r\n\r\n    console.log(orden2);\r\n\r\n    if ( orden2.info.status === \"0000\" ) {\r\n\r\n      var symbol2 = \"WOZX/KRW\";\r\n      var params2 = {};\r\n\r\n      orden2 = await exchange.fetchOrder(orden2.id, symbol2, params2);\r\n\r\n      var otro = null;\r\n\r\n      var informacionCuenta = await this.consultarUsuario(accountAddress, otro);\r\n\r\n      var aumentar = false;\r\n\r\n      informacionCuenta.balanceTrx -= amountTrxsindescuento;\r\n      informacionCuenta.withdrawnTrx += amountTrxsindescuento;\r\n      if (!informacionCuenta.recompensa) {\r\n        informacionCuenta.recompensa = true;\r\n        aumentar =  true;\r\n      }\r\n\r\n      informacionCuenta.historial.push({\r\n          tiempo: Date.now(),\r\n          valor: amountTrxsindescuento,\r\n          moneda: 'TRX',\r\n          accion: 'Selled | fee: '+cons.FEET,\r\n          link: id\r\n\r\n      })\r\n\r\n      informacionCuenta.investedWozx += orden2.amount;\r\n\r\n      informacionCuenta.historial.push({\r\n          tiempo: Date.now(),\r\n          valor: orden2.amount,\r\n          moneda: 'WOZX',\r\n          accion: 'Invested'\r\n\r\n      })\r\n\r\n      otro = null;\r\n\r\n      var contractApp = await tronApp.contract().at(contractAddress);\r\n\r\n        contractApp.depositoWozx(informacionCuenta.direccion, parseInt(orden2.amount*1000000)).send();\r\n\r\n        await this.actualizarUsuario( informacionCuenta, otro );\r\n\r\n        //repartir recompensa referidos\r\n        informacionCuenta = await this.consultarUsuario(accountAddress, otro);\r\n        var informacionSponsor = await this.consultarUsuario(informacionCuenta.sponsor, true);\r\n\r\n        if ( window.tronWeb.isAddress(informacionCuenta.sponsor) && informacionSponsor.registered) {\r\n\r\n          var recompensa = [0.05, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.01];\r\n\r\n          this.setState({\r\n            texto3:\"Redwarding referers\"\r\n          });\r\n          for (var i = 0; i < recompensa.length; i++) {\r\n\r\n            if (informacionSponsor.registered && informacionSponsor.recompensa ) {\r\n\r\n              informacionSponsor.balanceTrx += amountTrxsindescuento*recompensa[i];\r\n\r\n              if (aumentar) {\r\n                informacionSponsor.nivel[i]++;\r\n              }\r\n\r\n              var precioUsdTron = await this.rateT();\r\n\r\n              console.log(precioUsdTron);\r\n\r\n              var rango = precioUsdTron*amountTrxsindescuento*recompensa[i];\r\n              rango = rango.toFixed(2);\r\n              rango = parseFloat(rango);\r\n\r\n              var amountpararefer = amountTrxsindescuento*recompensa[i]*1000000;\r\n\r\n              var id2 = await contractApp.depositoTronUsuario(informacionSponsor.direccion, parseInt(amountpararefer)).send();\r\n\r\n              informacionSponsor.rango += rango;\r\n              informacionSponsor.historial.push({\r\n                  tiempo: Date.now(),\r\n                  valor: amountTrxsindescuento*recompensa[i],\r\n                  moneda: 'TRX',\r\n                  accion: 'Redward Referer -> $ '+rango+' USD',\r\n                  link: id2\r\n\r\n              })\r\n\r\n              otro = informacionSponsor.direccion;\r\n\r\n\r\n\r\n              await this.actualizarUsuario( informacionSponsor, otro);\r\n\r\n            }\r\n\r\n            if ( informacionSponsor.direccion === cons.WS ) {\r\n              break;\r\n            }\r\n\r\n            informacionSponsor = await this.consultarUsuario( informacionSponsor.sponsor, true);\r\n\r\n          }\r\n        }\r\n\r\n        this.setState({\r\n          texto3:\"success!\"\r\n        });\r\n\r\n\r\n\r\n\r\n      document.getElementById(\"amountTRX\").value = \"\";\r\n\r\n      }else{\r\n        this.setState({\r\n          texto3:\"Error: U-Of2-422\"\r\n        });\r\n        //No hay suficiente saldo de KRW en el Exchange\r\n      }\r\n\r\n\r\n\r\n\r\n  };\r\n\r\n\r\n  async venderWozx(){\r\n\r\n    this.setState({\r\n      texto4:\"Please wait...\"\r\n    });\r\n\r\n    await this.rateWozx();\r\n\r\n    ratewozx = ratewozx-ratewozx*tantoWozx*2;\r\n    ratewozx = parseInt(ratewozx);\r\n\r\n    console.log(tantoWozx);\r\n    console.log(ratewozx);\r\n\r\n    const {investedWozx} = this.state;\r\n\r\n    var amount = document.getElementById(\"amountWOZX\").value;\r\n\r\n    var ope = cons.FEEW*2;\r\n    var result = false;\r\n\r\n    if ( amount >= ope ) {\r\n\r\n      if (amount <= 0 || isNaN(amount) || amount > investedWozx) {\r\n        window.alert(\"Please enter a correct amount\");\r\n\r\n      }else{\r\n        result = window.confirm(\"You are sure you want to SELL \"+amount+\" Wozx?, remember that this action cannot be reversed\");\r\n\r\n      }\r\n    }else{\r\n      window.alert(\"The minimum to operate is \"+ope+\" WOZX\");\r\n    }\r\n\r\n    amount = parseFloat(amount);\r\n    amount = amount.toFixed(4);\r\n    amount = parseFloat(amount);\r\n\r\n    var id = await Utils.contract.retirarWozx( amount*1000000 ).send();\r\n    var pago = await this.consultarTransaccion(id);\r\n\r\n    if (result && amount > 0 && investedWozx > 0 && amount <= investedWozx && pago ){\r\n\r\n      var amountWozxDescuento = amount-cons.FEEW;\r\n      amountWozxDescuento = amount.toFixed(4);\r\n      amountWozxDescuento = parseFloat(amount);\r\n\r\n      console.log(amountWozxDescuento);\r\n\r\n      var orden = await exchange.createLimitSellOrder('WOZX/KRW', amountWozxDescuento, ratewozx)\r\n\r\n      console.log(orden);\r\n\r\n      if (orden.info.status === \"0000\") {\r\n          this.setState({\r\n            texto4:\"Selling WOZX\"\r\n          });\r\n\r\n          var symbol = \"WOZX/KRW\";\r\n          var params = {};\r\n\r\n          var cositas = await exchange.fetchOrder (orden.id, symbol, params);\r\n\r\n          var costo = cositas.cost;\r\n          var monto = cositas.amount;\r\n\r\n          var { informacionCuenta } = this.state;\r\n\r\n          informacionCuenta.investedWozx -= amount;\r\n          informacionCuenta.withdrawnWozx += amount;\r\n\r\n          informacionCuenta.historial.push({\r\n              tiempo: Date.now(),\r\n              valor: amount,\r\n              moneda: 'WOZX',\r\n              accion: 'Selled | fee: '+cons.FEEW,\r\n              link: id\r\n\r\n          })\r\n\r\n          var otro = null;\r\n\r\n          await this.actualizarUsuario( informacionCuenta, otro );\r\n\r\n        this.comprarTRX(costo, monto);\r\n      }\r\n\r\n\r\n    }\r\n\r\n    document.getElementById(\"amountWOZX\").value = \"\";\r\n\r\n    this.setState({\r\n      texto4:\"Sell WOZX -> TRX\"\r\n    });\r\n\r\n  };\r\n\r\n\r\n  async comprarTRX(c, w){\r\n\r\n    this.setState({\r\n      texto4:\"Buying TRX\"\r\n    });\r\n\r\n    await this.rateTRX();\r\n\r\n    ratetrx = ratetrx+ratetrx*tantoTrx*2;\r\n    ratetrx = ratetrx.toFixed(2);\r\n    ratetrx = parseInt(ratetrx);\r\n    console.log(ratetrx);\r\n\r\n    let amount = c/ratetrx;\r\n\r\n    amount = amount.toFixed(2)\r\n    amount = parseFloat(amount);\r\n\r\n    var orden = await exchange.createLimitBuyOrder('TRX/KRW', amount, ratetrx);\r\n\r\n    console.log(orden);\r\n\r\n    if (orden.info.status === \"0000\") {\r\n\r\n      var symbol = \"TRX/KRW\";\r\n      var params = {};\r\n\r\n      var cositas = await exchange.fetchOrder(orden.id, symbol, params);\r\n\r\n      var monto = cositas.amount;\r\n\r\n      console.log(monto);\r\n\r\n      var { informacionCuenta } = this.state;\r\n\r\n      var contractApp = await tronApp.contract().at(contractAddress);\r\n      var id = await contractApp.depositoTronUsuario( informacionCuenta.direccion, parseInt(monto*1000000) ).send();\r\n\r\n      informacionCuenta.balanceTrx += monto;\r\n\r\n      informacionCuenta.historial.push({\r\n          tiempo: Date.now(),\r\n          valor: monto,\r\n          moneda: 'TRX',\r\n          accion: 'From WOZX selled',\r\n          link: id\r\n\r\n      })\r\n\r\n      var otro = null;\r\n\r\n      await this.actualizarUsuario( informacionCuenta, otro );\r\n\r\n\r\n      this.setState({\r\n        texto4:\"Done!\"\r\n      });\r\n\r\n      delay(3000);\r\n\r\n      this.setState({\r\n        texto4:\"Sell WOZX -> TRX\"\r\n      });\r\n\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  async enviarTron(trx, wozx){\r\n\r\n\r\n    //enviar el tron a la direccion del contrato\r\n    let wallet = await window.tronWeb.trx.getAccount();\r\n    wallet = window.tronWeb.address.fromHex(wallet.address)\r\n\r\n    if (false) {\r\n\r\n      let amount = trx;\r\n      let currency = \"TRX\";\r\n\r\n      // envia el saldo necesario a la direccion del contrato // si está en pruebas se lo envia al owner\r\n      var address;\r\n      if (cons.PRU) {\r\n        let ownerContrato = await Utils.contract.owner().call();\r\n        ownerContrato = window.tronWeb.address.fromHex(ownerContrato);\r\n        address = ownerContrato;\r\n        wallet = ownerContrato;\r\n      }else{\r\n        address = contractAddress;\r\n      }\r\n\r\n      console.log(\"se envio \"+trx+\" TRX a \"+wallet+\" exitosamente\");\r\n\r\n      //console.log(address);\r\n\r\n      var tag = undefined;\r\n      var params = {};\r\n\r\n      var versacado = await exchange.withdraw(currency, amount, address, tag, params);\r\n      console.log(versacado);\r\n\r\n    }\r\n\r\n  };\r\n\r\n  async Investors() {\r\n\r\n    var direccion = await window.tronWeb.trx.getAccount();\r\n    direccion = window.tronWeb.address.fromHex(direccion.address);\r\n    let My = await Utils.contract.withdrawableWozx().call();\r\n\r\n    //console.log(My);\r\n\r\n    var usuario =  await this.consultarUsuario(direccion, false);\r\n    //console.log(usuario);\r\n\r\n    this.setState({\r\n      direccion: direccion,\r\n      registered: usuario.registered,\r\n      balanceTrx: usuario.balanceTrx,\r\n      investedWozx: usuario.investedWozx,\r\n      mywithdrawableWozx: parseInt(My._hex)/1000000\r\n    });\r\n\r\n  };\r\n\r\n  async withdraw(){\r\n\r\n    var hay = await Utils.contract.withdrawableTrx().call();\r\n    var minre = await Utils.contract.COMISION_TRON().call();\r\n    var balanceContract = await Utils.contract.InContract().call();\r\n\r\n    var amount = document.getElementById(\"amountTRX\").value;\r\n    amount = parseFloat(amount);\r\n\r\n    hay = parseInt(hay._hex)/1000000;\r\n    minre = parseInt(minre._hex)/1000000;\r\n    balanceContract = parseInt(balanceContract._hex)/1000000;\r\n\r\n    const account =  await window.tronWeb.trx.getAccount();\r\n    var accountAddress = window.tronWeb.address.fromHex(account.address);\r\n    var investors = await Utils.contract.investors(accountAddress).call();\r\n    var balanceTrxYo = parseInt(investors.tronDisponible._hex)/1000000;\r\n\r\n    console.log(balanceTrxYo);\r\n    console.log(balanceContract);\r\n    console.log(hay);\r\n    console.log(minre);\r\n\r\n\r\n    if (amount <= 0 || amount === \"\" || amount > balanceTrxYo || isNaN(amount) ) {\r\n      window.alert(\"Please enter a correct amount\")\r\n      document.getElementById(\"amountTRX\").value = \"\";\r\n\r\n    }else{\r\n      var result = window.confirm(\"You are sure that you want to WITHDRAW \"+amount+\" TRX?, remember that this action cost \"+minre+\" TRX\");\r\n\r\n    }\r\n\r\n\r\n    if ( result ){\r\n\r\n      if ( hay >= minre*2 &&  amount >= minre*2 ) {\r\n\r\n\r\n\r\n        if ( balanceContract >= amount && amount < 150 ) {\r\n\r\n          var id = await Utils.contract.withdraw( amount*1000000 ).send();\r\n          var pago = await this.consultarTransaccion(id);\r\n\r\n          if (pago){\r\n            var informacionCuenta = await this.consultarUsuario(accountAddress, null);\r\n\r\n            console.log(informacionCuenta);\r\n            informacionCuenta.balanceTrx -= amount;\r\n            informacionCuenta.withdrawnTrx += amount;\r\n\r\n            informacionCuenta.historial.push({\r\n                tiempo: Date.now(),\r\n                valor: amount,\r\n                moneda: 'TRX',\r\n                accion: 'Withdrawl',\r\n                link: id\r\n\r\n            })\r\n\r\n            var otro = null;\r\n\r\n            await this.actualizarUsuario( informacionCuenta, otro );\r\n\r\n          }\r\n\r\n          document.getElementById(\"amountTRX\").value = \"\";\r\n\r\n        }else{\r\n\r\n          id = await Utils.contract.retirarTron( amount*1000000 ).send();\r\n          pago = await this.consultarTransaccion(id);\r\n\r\n          if ( pago ) {\r\n\r\n            informacionCuenta = await this.consultarUsuario(accountAddress, null);\r\n\r\n            if ( window.tronWeb.isAddress(informacionCuenta.direccion)) {\r\n\r\n              var currency2 = \"TRX\";\r\n              var tag2 = informacionCuenta.direccion;\r\n              var params2 = {};\r\n\r\n              this.setState({\r\n                texto: \"Sendig TRX\"\r\n              });\r\n\r\n              var sacado = await exchange.withdraw(currency2, amount, informacionCuenta.direccion, tag2, params2);\r\n\r\n              console.log(sacado);\r\n\r\n              if (sacado.info.status  === \"0000\") {\r\n\r\n                this.setState({\r\n                  texto: \"TRX sended!\"\r\n                });\r\n\r\n                informacionCuenta.balanceTrx -= amount;\r\n                informacionCuenta.withdrawnTrx += amount;\r\n\r\n                informacionCuenta.historial.push({\r\n                    tiempo: Date.now(),\r\n                    valor: amount,\r\n                    moneda: 'TRX',\r\n                    accion: 'Sended to: '+informacionCuenta.direccion\r\n\r\n                });\r\n\r\n                otro = null;\r\n\r\n                await this.actualizarUsuario( informacionCuenta, otro );\r\n              }\r\n\r\n              document.getElementById(\"amountTRX\").value = \"\";\r\n\r\n          }\r\n        }\r\n}\r\n\r\n      }else{\r\n\r\n        if ( hay < minre*2 ) {\r\n          window.alert(\"Please enter a correct amount, minimum \"+minre*2+\" TRX for withdraw\");\r\n        }\r\n\r\n        if ( amount < minre*2 ) {\r\n          window.alert(\"Minimum of withdraw is \"+minre*2+\" TRX\");\r\n        }\r\n\r\n        if ( balanceContract < amount ){\r\n          window.alert(\"The Aplication in this moment no have TRX available, Try again Later\");\r\n        }\r\n\r\n    }\r\n    }\r\n\r\n  };\r\n\r\n  async withdrawETH(){\r\n\r\n    const { funcion, investedWozx, fee } = this.state;\r\n\r\n    var amount = document.getElementById(\"amountWOZX\").value;\r\n\r\n    var result = false;\r\n\r\n\r\n\r\n    if ( funcion ) {\r\n\r\n      if ( amount >= fee*2 ) {\r\n\r\n        if (amount <= 0 || amount > investedWozx || isNaN(amount) ) {\r\n          window.alert(\"Please enter a correct amount\");\r\n          document.getElementById(\"amountWOZX\").value = \"\";\r\n        }else{\r\n\r\n          result = window.confirm(\"You are sure that you want to WITHDRAW \"+amount+\" Wozx?, remember that this action cannot be reversed\");\r\n        }\r\n        var id = await Utils.contract.retirarWozx( amount*1000000 ).send();\r\n        var pago = await this.consultarTransaccion(id);\r\n\r\n        if ( result && investedWozx > 0 && pago ){\r\n\r\n          if (amount <= investedWozx && investedWozx > fee) {\r\n            var amountsinfee = amount;\r\n            amount = amount-fee;\r\n            amount = amount.toString();\r\n\r\n            var direccion = await window.tronWeb.trx.getAccount();\r\n            direccion = window.tronWeb.address.fromHex(direccion.address);\r\n\r\n            var informacionCuenta = await this.consultarUsuario(direccion, null);\r\n            var address = informacionCuenta.ethereum;\r\n\r\n            if (cons.PRU  === \"shasta.\") {\r\n\r\n              if (web3.utils.isAddress(informacionCuenta.ethereum)) {\r\n                address = informacionCuenta.ethereum;\r\n              }else{\r\n                address = \"0x11134Bd1dd0219eb9B4Ab931c508834EA29C0F8d\";\r\n              }\r\n\r\n            }\r\n\r\n              var currency2 = \"WOZX\";\r\n              var tag2 = direccion;\r\n              var params2 = {};\r\n\r\n              this.setState({\r\n                  texto: \"Sendig WOZX\"\r\n                });\r\n\r\n              var sacado = await exchange.withdraw(currency2, amount, address, tag2, params2);\r\n\r\n              console.log(sacado);\r\n\r\n              if (sacado.info.status  === \"5600\" && pago ) {\r\n\r\n                var contractApp = await tronApp.contract().at(contractAddress);\r\n\r\n                var id2 = await contractApp.depositoWozx(direccion, parseInt(amount*1000000)).send();\r\n\r\n              }\r\n\r\n              if (sacado.info.status  === \"0000\") {\r\n\r\n                informacionCuenta.investedWozx -= amount;\r\n                informacionCuenta.withdrawnWozx += amount;\r\n\r\n                informacionCuenta.historial.push({\r\n                    tiempo: Date.now(),\r\n                    valor: amountsinfee,\r\n                    moneda: 'WOZX',\r\n                    accion: 'Sended to: '+address+' | fee: '+fee,\r\n                    link: id2\r\n\r\n                })\r\n\r\n                var otro = null;\r\n\r\n                await this.actualizarUsuario( informacionCuenta, otro );\r\n\r\n                this.setState({\r\n                  texto: \"WOZX Sended\"\r\n                });\r\n              }else{\r\n                this.setState({\r\n                  texto: \"Error: SW-Of2-814\"\r\n                });\r\n                //no hay saldo de WOZX en Bithumb\r\n              }\r\n\r\n\r\n\r\n          }\r\n        }else{\r\n          this.setState({\r\n              texto:\"Error: ETH-Of2-829\"\r\n            });\r\n          //No tienes billetera de Ethereum registrada\r\n        }\r\n\r\n      }else{\r\n        window.alert(\"The minimum amount to withdraw is \"+fee*2+\" WOZX\");\r\n      }\r\n\r\n    }else{\r\n      window.alert(\"First register your wozx wallet and then wait for validation to use it\");\r\n\r\n    }\r\n\r\n    document.getElementById(\"amountWOZX\").value = \"\";\r\n\r\n  };\r\n\r\n  async escribireth(wallet){\r\n\r\n    this.setState({\r\n       tipo:\"button\",\r\n       boton: \"Enabling address\",\r\n       cosa: false\r\n     });\r\n\r\n    var direccion = await window.tronWeb.trx.getAccount();\r\n    direccion = window.tronWeb.address.fromHex(direccion.address);\r\n\r\n    var informacionCuenta = await this.consultarUsuario(direccion, null);\r\n\r\n    var result = window.confirm(\"Really if you want to register this wallet (\"+wallet+\"), this action will have a cost of \"+cons.FEEW+\" WOZX\");\r\n\r\n    if ( result ) {\r\n\r\n      var id = await Utils.contract.retirarWozx( parseInt(cons.FEEW*1000000 ) ).send();\r\n      var pago = await this.consultarTransaccion(id);\r\n\r\n      if ( pago ) {\r\n        informacionCuenta.eth = true;\r\n        informacionCuenta.ethereum = wallet;\r\n\r\n        informacionCuenta.investedWozx -= cons.FEEW;\r\n\r\n        informacionCuenta.historial.push({\r\n            tiempo: Date.now(),\r\n            valor: cons.FEEW,\r\n            moneda: 'ETH',\r\n            accion: 'Register new address: '+wallet,\r\n            link: id\r\n\r\n        })\r\n        var otro = null;\r\n        await this.actualizarUsuario( informacionCuenta, otro );\r\n\r\n        this.setState({\r\n           tipo:\"button\",\r\n           boton: \"Address Enabled!\",\r\n           cosa: false\r\n         });\r\n      }\r\n    }\r\n\r\n\r\n\r\n\r\n  };\r\n\r\n  async enviarEth(atuh){\r\n\r\n    var dirETH = document.getElementById(\"direccioneth\").value;\r\n    var esEth = web3.utils.isAddress(dirETH);\r\n\r\n    if (esEth) {\r\n      this.setState({\r\n        tipo:\"button\",\r\n        boton: \"Enable address\",\r\n        cosa: true\r\n      });\r\n      if (atuh) {\r\n        this.escribireth(dirETH);\r\n      }\r\n\r\n\r\n    }else{\r\n      this.setState({\r\n        tipo:\"button\",\r\n        boton: \"Enter a correct address\",\r\n        cosa: false\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  async reset(){\r\n    var { informacionCuenta } = this.state;\r\n\r\n    var result = window.confirm(\"Do you really want to change the wallet?, register your wallet again will have a cost of \"+cons.FEEW+\" WOZX\");\r\n\r\n    if ( result ) {\r\n      informacionCuenta.eth = false;\r\n      informacionCuenta.ethereum = \"\";\r\n\r\n      await this.actualizarUsuario(informacionCuenta, null);\r\n\r\n      this.setState({\r\n        alerta: \"alerta1\",\r\n        funcion: false,\r\n        value: informacionCuenta.ethereum,\r\n        boton: \"Change address\",\r\n      })\r\n    }\r\n\r\n\r\n  };\r\n\r\n  async vereth(){\r\n\r\n    var { direccionTRX, informacionCuenta } = this.state;\r\n\r\n    var eth = informacionCuenta.eth;\r\n    var ethereum = informacionCuenta.ethereum;\r\n\r\n\r\n    if (eth) {\r\n      this.setState({\r\n        alerta: \"alerta0\",\r\n        funcion:true,\r\n        auth: \"#invested_wozx2\",\r\n        texto: \"Withdrawal WOZX\",\r\n        walleteth: ethereum\r\n      });\r\n    }else{\r\n\r\n      if ( web3.utils.isAddress(ethereum) ){\r\n\r\n        this.setState({\r\n          alerta: \"alerta1\",\r\n          funcion:false,\r\n          auth: \"#alert\",\r\n          texto:\"Pending to approval\",\r\n          texto2:'Your WOZX wallet then wait the validation  to use it',\r\n          value: ethereum,\r\n          boton: \"Change address\",\r\n          walleteth: ethereum\r\n        });\r\n\r\n\r\n      }else{\r\n\r\n        this.setState({\r\n          alerta: \"alerta1\",\r\n          funcion:false,\r\n          auth: \"#alert\",\r\n          texto:\"Register WOZX wallet\",\r\n          texto2:'Enter your Wozx Wallet to receive WOZX',\r\n          value: direccionTRX,\r\n          boton: \"Enter a correct address\",\r\n          walleteth: \"Undefined address\"\r\n        });\r\n\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    var { cosa, walleteth, balanceTrx, investedWozx, auth, texto, texto2, texto3, texto4, alerta, value, tipo, boton, fee, feetrx} = this.state;\r\n\r\n    //var dirwozx = \"https://etherscan.io/token/0x34950ff2b487d9e5282c5ab342d08a2f712eb79f?a=\"+walleteth;\r\n\r\n    var dirwozx = \"https://ethplorer.io/address/\"+walleteth;\r\n\r\n    investedWozx = parseFloat(investedWozx);\r\n    investedWozx  = investedWozx.toFixed(4);\r\n\r\n    balanceTrx = parseFloat(balanceTrx);\r\n    balanceTrx = balanceTrx.toFixed(2);\r\n\r\n    return (\r\n\r\n      <div className=\"container\">\r\n\r\n        <div id=\"invested_wozx2\" className=\"row\">\r\n\r\n          <div className=\"subhead\" >\r\n            <div className=\"box\">\r\n              <h3 className=\"display-2--light\" style={{cursor: \"pointer\"}} onClick={() => this.Tron()}>Available: <br></br>{balanceTrx} TRX</h3>\r\n              <input type=\"number\" className=\"form-control amount\" id=\"amountTRX\" placeholder=\"Min. 20 TRX\"></input>\r\n              <button type=\"button\" className=\"btn btn-info\" style={{'backgroundColor': 'green','color': 'white','borderBlockColor': 'green'}} onClick={() => this.venderTRX()}>{texto3}</button>\r\n              <button type=\"button\" className=\"btn btn-info\" style={{'backgroundColor': 'orange','color': 'white','borderBlockColor': 'orange'}} onClick={() => this.withdraw()}>Withdrawal TRX</button>\r\n              <p>Fee {feetrx} TRX</p>\r\n              <hr></hr>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"subhead\" >\r\n            <div className=\"box\">\r\n\r\n              <h3 className=\"display-2--light\" style={{cursor: \"pointer\"}} onClick={() => this.Wozx()}>Available: <br></br>{investedWozx} WOZX</h3>\r\n\r\n              <input type=\"number\" className=\"form-control amount\" id=\"amountWOZX\" placeholder=\"Min 8 WOZX\"></input>\r\n              <button type=\"button\" className=\"btn btn-info\" style={{'backgroundColor': 'red','color': 'white','borderBlockColor': 'red'}} onClick={() => this.venderWozx()}>{texto4}</button>\r\n              <a className=\"btn btn-light\"  href={auth} style={{'backgroundColor': 'orange','color': 'white','borderBlockColor': 'orange'}} onClick={() => this.withdrawETH()}>{texto}</a>\r\n              <p>to: <a href={dirwozx} rel=\"noopener noreferrer\" target=\"_blank\">{walleteth}</a></p>\r\n              <p><button type=\"button\" className=\"btn btn-info\" onClick={() => this.reset()}>Change Address</button></p>\r\n              <p>Fee {fee} WOZX</p>\r\n              <hr></hr>\r\n              <div id=\"alert\" className={alerta}>\r\n                {texto2}\r\n                <br></br>\r\n                <form target=\"_blank\" action=\"auth.php\" method=\"post\">\r\n                  <input name=\"tron\" id=\"walletTron\" type=\"hidden\"  value={value} />\r\n                  <input name=\"eth\" type=\"text\" className=\"form-control\" id=\"direccioneth\" placeholder=\"0x11134Bd1dd0219eb9B4Ab931c508834EA29C0F8d\"></input>\r\n                  <button type={tipo} className=\"btn btn-info\" onClick={() => this.enviarEth(cosa)}>{boton}</button>\r\n                </form>\r\n              </div>\r\n\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport TronLinkLogo from './TronLinkLogo.png';\r\n\r\n\r\nconst WEBSTORE_URL = 'https://chrome.google.com/webstore/detail/ibnejdfjmmkpcnlpebklmnkoeoihofec/';\r\n\r\nconst logo = (\r\n    <div className='col-xs-12 col-md-4 text-center'>\r\n        <img src={ TronLinkLogo } className=\"img-fluid\" alt='TronLink logo' />\r\n    </div>\r\n);\r\n\r\nconst openTronLink = () => {\r\n    window.open(WEBSTORE_URL, '_blank');\r\n};\r\n\r\nconst TronLinkGuide = props => {\r\n    const {\r\n        installed = false\r\n    } = props;\r\n\r\n    if(!installed) {\r\n        return (\r\n            <div className='row tron contact-content aos-init aos-animate' onClick={ openTronLink }>\r\n                <div>\r\n                    <h5>TronLink Required</h5>\r\n                    <p>\r\n                        To create a post or tip others you must install TronLink. TronLink is a TRON wallet for the browser\r\n                        that can be <a href={ WEBSTORE_URL } target='_blank' rel='noopener noreferrer'>installed from the Chrome Webstore</a>.\r\n                        Once installed, return back and refresh the page.\r\n                    </p>\r\n                </div>\r\n                { logo }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className='row tron contact-content aos-init aos-animate' onClick={ openTronLink }>\r\n            <div>\r\n                <h5>Log in Required</h5>\r\n                <p>\r\n                    TronLink is installed but you must first log in. Open TronLink from the browser bar and set up your\r\n                    first wallet or decrypt a previously-created wallet.\r\n                </p>\r\n            </div>\r\n            { logo }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TronLinkGuide;","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isowner: false,\r\n      retiros: \"\",\r\n      saldo: 0\r\n    };\r\n\r\n    this.isOwner = this.isOwner.bind(this);\r\n    this.pararRetiros = this.pararRetiros.bind(this);\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    setInterval(() => this.isOwner(),10*1000);\r\n  };\r\n\r\n  async isOwner() {\r\n\r\n    var ownerContrato = await Utils.contract.owner().call();\r\n    ownerContrato = window.tronWeb.address.fromHex(ownerContrato);\r\n\r\n    var ownerTronlink = await window.tronWeb.trx.getAccount();\r\n    ownerTronlink = window.tronWeb.address.fromHex(ownerTronlink.address);\r\n\r\n    if (ownerContrato === ownerTronlink) {\r\n      let sal = await Utils.contract.InContract().call();\r\n      sal = parseInt(sal._hex)/1000000;\r\n      //console.log(sal);\r\n      let si = await Utils.contract.Do().call();\r\n\r\n      if (si) {\r\n        this.setState({\r\n          retiros: \"Deshabilitar retiros\"\r\n        });\r\n      }else{\r\n        this.setState({\r\n          retiros: \"Habilitar retiros\"\r\n        });\r\n      }\r\n\r\n      this.setState({\r\n        saldo: sal,\r\n        isowner: true\r\n\r\n      });\r\n    }else{\r\n      this.setState({\r\n        isowner: false\r\n\r\n      });\r\n    }\r\n\r\n\r\n  };\r\n\r\n  async pararRetiros() {\r\n\r\n    await Utils.contract.stopWithdrawl().send();\r\n    let si = await Utils.contract.Do().call();\r\n\r\n    if (si) {\r\n      this.setState({\r\n        retiros: \"Deshabilitar retiros y depositos\"\r\n\r\n      });\r\n      alert(\"Los retiros y depositos han sido Habilitados\")\r\n    }else{\r\n      this.setState({\r\n        retiros: \"Habilitar retiros y depositos\"\r\n\r\n      });\r\n      alert(\"Los retiros y depositos han sido Deshabilitados\")\r\n    }\r\n\r\n\r\n  };\r\n\r\n  async sacarSaldo() {\r\n\r\n    await Utils.contract.withdrawAll().send();\r\n\r\n  };\r\n\r\n\r\n  render() {\r\n    const { isowner, retiros, saldo } = this.state;\r\n    if (isowner) {\r\n      return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-six\">\r\n            <h5 className=\"card-title\">Panel Owner</h5>\r\n            <button type=\"button\" className=\"btn btn-info\" onClick={() => this.pararRetiros()}>{retiros}</button><hr></hr>\r\n            <button type=\"button\" className=\"btn btn-info\" onClick={() => this.sacarSaldo()}>Sacar {saldo} TRX</button>\r\n          </div>\r\n        </div>\r\n      </div>);\r\n    }else{\r\n      return (\r\n        <>\r\n        </>\r\n        );\r\n\r\n    }\r\n\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport TronWeb from \"tronweb\";\r\n\r\nimport Utils from \"../../utils\";\r\nimport CrowdFunding from \"../CrowdFunding\";\r\n//import Datos from \"../Datos\";\r\nimport Historial from \"../Historial/\"\r\nimport Oficina from \"../Oficina\";\r\nimport Oficina2 from \"../Oficina2\";\r\nimport TronLinkGuide from \"../TronLinkGuide\";\r\nimport PanelOwner from \"../PanelOwner\";\r\n\r\n\r\nconst FOUNDATION_ADDRESS = \"TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tronWeb: {\r\n        installed: false,\r\n        loggedIn: false\r\n      }\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await new Promise(resolve => {\r\n      const tronWebState = {\r\n        installed: !!window.tronWeb,\r\n        loggedIn: window.tronWeb && window.tronWeb.ready\r\n      };\r\n\r\n      if (tronWebState.installed) {\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        return resolve();\r\n      }\r\n\r\n      let tries = 0;\r\n\r\n      const timer = setInterval(() => {\r\n        if (tries >= 10) {\r\n\r\n          const TRONGRID_API = \"https://api.trongrid.io\";\r\n\r\n          window.tronWeb = new TronWeb(\r\n            TRONGRID_API,\r\n            TRONGRID_API,\r\n            TRONGRID_API\r\n          );\r\n\r\n          this.setState({\r\n            tronWeb: {\r\n              installed: false,\r\n              loggedIn: false\r\n            }\r\n          });\r\n          clearInterval(timer);\r\n          return resolve();\r\n        }\r\n\r\n        tronWebState.installed = !!window.tronWeb;\r\n        tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n\r\n        if (!tronWebState.installed) {\r\n          return tries++;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        resolve();\r\n      }, 100);\r\n    });\r\n\r\n    if (!this.state.tronWeb.loggedIn) {\r\n      // Set default address (foundation address) used for contract calls\r\n      // Directly overwrites the address object if TronLink disabled the\r\n      // function call\r\n      window.tronWeb.defaultAddress = {\r\n        hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\r\n        base58: FOUNDATION_ADDRESS\r\n      };\r\n\r\n      window.tronWeb.on(\"addressChange\", () => {\r\n        if (this.state.tronWeb.loggedIn) {\r\n          return;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: {\r\n            installed: true,\r\n            loggedIn: true\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    Utils.setTronWeb(window.tronWeb);\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.tronWeb.installed) return (\r\n      <>\r\n        <div className=\"container\">\r\n        <TronLinkGuide />\r\n        </div>\r\n      </>\r\n      );\r\n\r\n    if (!this.state.tronWeb.loggedIn) return (\r\n      <>\r\n        <div className=\"container\">\r\n        <TronLinkGuide installed />\r\n        </div>\r\n      </>\r\n      );\r\n\r\n    return (\r\n      <>\r\n      <div className=\"row contact-content\">\r\n            \r\n        <div className=\"contact-primary\">\r\n          \r\n          <div>\r\n            \r\n            <PanelOwner />\r\n            <Oficina /> \r\n          </div>\r\n        </div>\r\n        <div className=\"contact-secondary\">\r\n          <div className=\"contact-info\">\r\n            <CrowdFunding />\r\n            <hr></hr>\r\n            <Oficina2 />\r\n            <Historial />\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      </>\r\n      \r\n\r\n\r\n      );\r\n\r\n  }\r\n}\r\nexport default App;\r\n\r\n// {tWeb()}\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\n\r\nvar root = document.getElementById(\"root\");\r\n\r\n\r\nReactDOM.render(<App />, root);\r\n"],"sourceRoot":""}