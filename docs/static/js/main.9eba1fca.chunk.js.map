{"version":3,"sources":["components/TronLinkGuide/TronLinkLogo.png","utils/index.js","cons.js","components/Contract/index.js","components/CrowdFunding/index.js","components/Historial/index.js","components/Oficina/index.js","components/Oficina2/index.js","components/TronLinkGuide/index.js","components/PanelOwner/index.js","components/App/index.js","index.js"],"names":["module","exports","utils","tronWeb","contract","setTronWeb","this","setContract","contractAddress","at","exchange","ccxt","bithumb","nonce","milliseconds","proxy","cons","apiKey","secret","amountTrx","ratetrx","ratetrx_usd","ratewozx","cantidadusd","descuento","tantoTrx","tantoWozx","minimo_usd","rango_minimo","walletSponsor","pry","pru","TRONGRID_API","console","log","tronApp","TronWeb2","WozxInvestor","Component","constructor","props","super","state","usdtrx","min","texto","tronEnApp","deposit","bind","deposit2","rateWozx","comprarWozx","rateTRX","venderTRX","postComprarWozx","postVenderTRX","reatizarTodoPost","ordenEjecutada","minDepo","saldoApp","componentDidMount","Utils","window","setInterval","loadMarkets","cositas","precio","closing_price","parseFloat","MIN_DEPOSIT","call","mindepo","rateTRON","rateApp","parseInt","_hex","setState","nuevoMinDeposit","send","nuevoRatetron","trx","getAccount","account","accountAddress","address","fromHex","investors","registered","document","getElementById","value","verTransfersPendientes","transPe","valor","transfers","transfers01","verTransfersEnviadoC","cantidadEnvio","cantidad","abono","sendTransaction","txID","transfers02","result","fetchBalance","balance","total","toFixed","depomin","getBalance","walletApp","fromSun","balanceInSun","balanceInTRX","montoTrx","haytron","alert","confirm","createLimitSellOrder","orden","info","status","params","fetchOrder","id","costo","cost","loc","location","href","indexOf","getString","split","GET","get","i","l","length","tmp","unescape","decodeURI","inversors","exist","sponsor","esponsor","verispo","res","miRegistro","krw","amount","createLimitBuyOrder","monto","depositpendiente","pending","cancelDepo","firmarTx","shouldPollResponse","callValue","sidep","depositPost","am","ordenPost","verOrdenPost","nOrden","tron","tWozx","acc","numeroDeOrden","_amountTrx","usd","cantidadWozx","fillPost","render","className","type","placeholder","onClick","historial","verHistorial","contadorHistorial","cont","splice","o","miHistorial","ver","tiempo","Date","evento","key","toString","style","fontSize","title","moneda","operacion","width","height","overflow","rango","ganancia","refe","direccion","link","balanceTrx","withdrawnTrx","investedWozx","withdrawnWozx","WozxPe","miPrecioWozx","Investors","enviarWozx","Link","Wozx","mydireccion","esto","myFunction","a","myRango","r","range","prof","wozxP","wozxPe","isAddress","text","aria-describedby","tipo","auth","texto3","texto4","fee","feetrx","funcion","alerta","balanceRef","totalRef","invested","paidAt","my","withdrawn","withdraw","venderWozx","comprarTRX","enviarTron","vereth","withdrawETH","enviarEth","Tron","balanceTrxContrato","redeposit","redepositPost","ope","c","w","wozx","wallet","wozxToTron","currency","owner","ownerContrato","undefined","MYwithdrawable","My","mywithdrawableWozx","hay","COMISION_RETIRO","minre","InContract","balanceContract","balanceTrxYo","retirarWozx","miETH","ethdireccion","web3","sacado","escribireth","setETH","boton","cosa","atuh","dirETH","eth","habilitado","walleteth","texto2","dirwozx","data-wow-duration","cursor","rel","target","action","method","name","WEBSTORE_URL","logo","src","TronLinkLogo","alt","openTronLink","open","TronLinkGuide","installed","isowner","retiros","saldo","isOwner","pararRetiros","ownerTronlink","sal","Do","stopWithdrawl","sacarSaldo","withdrawAll","habilitarETH","data","App","loggedIn","Promise","resolve","tronWebState","ready","tries","timer","TronWeb","clearInterval","defaultAddress","hex","toHex","base58","on","root","ReactDOM"],"mappings":"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","file":"static/js/main.9eba1fca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/TronLinkLogo.f8e7d99a.png\";","const utils = {\r\n  tronWeb: false,\r\n  contract: false,\r\n\r\n  setTronWeb(tronWeb) {\r\n    this.tronWeb = tronWeb;\r\n  },\r\n\r\n  async setContract(tronWeb, contractAddress) {\r\n    this.contract = await tronWeb.contract().at(contractAddress);\r\n  }\r\n};\r\n\r\nexport default utils;\r\n","import {APP_AK, APP_SK, APP_WO} from \"@env\";\r\n\r\nconst AK = APP_AK;\r\nconst SK = APP_SK;\r\nconst WO = APP_WO;\r\nconst proxy = \"https://proxy-ewozx.herokuapp.com/\";\r\nconst PRU = \"shasta.\";// shasta1. para inhabilitar red de pruebas\r\nconst WS = \"T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb\";//T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb recibe los huerfanos por defecto\r\nconst descuento = 0.002;// 0.23 o 23% queda en la plataforma el restante se usa para comprar el 77% en wozx para los usuarios\r\nconst WOZX = 0.07; // para que el WOZX se Compre de inmediato\r\nconst TRX = 0.035; // para que el TRX se Venda de inmediato\r\nconst SC = \"TZ9N6j2YxTYofo7RQxX86LnCW4GhWpaTSP\";// direccion del contrato\r\nconst USD = 600; // minimo de inversion en dolares (600 KRW)\r\nconst SD = 0.1; // 10% de sensibilidad para modificar el precio minimo de inversion\r\nconst GATE = \"TB7RTxBPY4eMvKjceXj8SWjVnZCrWr4XvF\"; //wallet de gate.io\r\n\r\nexport default {AK, SK, WO, proxy, PRU, WS, descuento, WOZX, TRX, SC, USD, SD, GATE};","\r\nimport cons from \"../../cons.js\";\r\n\r\nconst contractAddress = cons.SC;\r\n\r\nexport default contractAddress;","import React, { Component } from \"react\";\r\n\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nimport cons from \"../../cons.js\";\r\n\r\nimport TronWeb2 from 'tronweb';\r\n\r\nimport ccxt from 'ccxt';\r\n\r\nconst exchange = new ccxt.bithumb({\r\n    nonce () { return this.milliseconds () }\r\n});\r\n\r\nexchange.proxy = cons.proxy;\r\nexchange.apiKey = cons.AK;\r\nexchange.secret = cons.SK;\r\n\r\nvar amountTrx = 0;\r\nvar ratetrx = 0;\r\nvar ratetrx_usd = 0;\r\nvar ratewozx = 0;\r\nvar cantidadusd = 0;\r\n\r\nvar descuento = cons.descuento; \r\nvar tantoTrx = cons.TRX;\r\nvar tantoWozx = cons.WOZX;\r\nvar minimo_usd = cons.USD;\r\nvar rango_minimo = cons.SD; \r\nvar walletSponsor = cons.WS;\r\n\r\n//console.log(contractAddress);\r\n\r\nconst pry = cons.WO;\r\n\r\nvar pru = \"\";\r\nif (cons.PRU === \"shasta.\") {\r\n  pru = cons.PRU;\r\n}\r\n\r\nconst TRONGRID_API = \"https://api.\"+pru+\"trongrid.io\";\r\nconsole.log(TRONGRID_API);\r\n\r\nconst tronApp = new TronWeb2(\r\n  TRONGRID_API,\r\n  TRONGRID_API,\r\n  TRONGRID_API,\r\n  pry\r\n);\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      amountTrx: \"\",\r\n      usdtrx: \"\",\r\n      min: 3000,\r\n      texto: \"Buy WOZX\",\r\n      tronEnApp: 0\r\n\r\n    }\r\n\r\n    this.deposit = this.deposit.bind(this);\r\n    this.deposit2 = this.deposit2.bind(this);\r\n    this.rateWozx = this.rateWozx.bind(this);\r\n    this.comprarWozx = this.comprarWozx.bind(this);\r\n    this.rateTRX = this.rateTRX.bind(this);\r\n    this.venderTRX = this.venderTRX.bind(this);\r\n    this.postComprarWozx = this.postComprarWozx.bind(this);\r\n    this.postVenderTRX = this.postVenderTRX.bind(this);\r\n    this.reatizarTodoPost = this.reatizarTodoPost.bind(this);\r\n    this.ordenEjecutada = this.ordenEjecutada.bind(this);\r\n    this.minDepo = this.minDepo.bind(this);\r\n    this.saldoApp = this.saldoApp.bind(this);\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    this.reatizarTodoPost();\r\n    setInterval(() => this.reatizarTodoPost(),120*1000);\r\n    this.minDepo();\r\n    setInterval(() => this.minDepo(),30*1000);\r\n    \r\n  };\r\n\r\n  async minDepo(){\r\n\r\n    var cositas = await exchange.loadMarkets();\r\n\r\n    cositas = cositas['TRX/KRW'];\r\n\r\n    var precio = cositas['info'];\r\n    precio = precio.closing_price;\r\n\r\n    precio = parseFloat(precio);\r\n    console.log(precio); //precio en KRW\r\n \r\n    ratetrx_usd = precio;\r\n\r\n    var mindepo = await Utils.contract.MIN_DEPOSIT().call();\r\n    var rateApp = await Utils.contract.rateTRON().call();\r\n    mindepo = parseInt(mindepo._hex)/1000000;\r\n    rateApp = parseInt(rateApp._hex)/1000000;\r\n\r\n    this.setState({\r\n      min: mindepo+1,\r\n      rateApp: rateApp\r\n    });\r\n    //console.log(mindepo);\r\n\r\n    if (mindepo*ratetrx_usd >= minimo_usd+minimo_usd*rango_minimo || mindepo*ratetrx_usd <= minimo_usd-minimo_usd*rango_minimo) {\r\n\r\n      let contract = await tronApp.contract().at(contractAddress);//direccion del contrato para la W app\r\n      await contract.nuevoMinDeposit(parseInt(minimo_usd/ratetrx_usd)).send();\r\n      console.log(\"EVENTO: nuevo minimo de deposito \"+parseInt(minimo_usd/ratetrx_usd)+\" TRX\")\r\n\r\n    }\r\n\r\n    if (rateApp >= ratetrx_usd+ratetrx_usd*rango_minimo || rateApp <= ratetrx_usd-ratetrx_usd*rango_minimo) {\r\n\r\n      let contract = await tronApp.contract().at(contractAddress);//direccion del contrato para la W app\r\n      await contract.nuevoRatetron(parseInt(ratetrx_usd*1000000)).send();\r\n      console.log(\"EVENTO: nuevo rate de \"+ratetrx_usd+\" KRW // aplicacion \"+rateApp+\" KRW\");\r\n\r\n    }\r\n\r\n    const account =  await window.tronWeb.trx.getAccount();\r\n    var accountAddress = account.address;\r\n    accountAddress = window.tronWeb.address.fromHex(accountAddress);\r\n    var investors = await Utils.contract.investors(accountAddress).call();\r\n\r\n    if (!investors.registered) {\r\n      document.getElementById(\"amount\").value = \"\";\r\n      this.setState({\r\n        texto:\"Click to register\"\r\n      });\r\n    }else{\r\n      this.setState({\r\n        texto:\"Buy WOZX\"\r\n      });\r\n    }\r\n    const contract = await tronApp.contract().at(contractAddress);\r\n    var transPe = await contract.verTransfersPendientes().call();\r\n    transPe.valor = parseInt(transPe.valor._hex);\r\n    //console.log(transPe.valor_hex)\r\n    if (transPe.valor > 0) {\r\n      await contract.transfers().send();\r\n      await contract.transfers01().send();\r\n    }\r\n\r\n    var cantidadEnvio = await contract.verTransfersEnviadoC().call();\r\n    //console.log(cantidadEnvio);\r\n    cantidadEnvio = parseInt(cantidadEnvio.cantidad);\r\n\r\n    //console.log(cantidadEnvio);\r\n    if (cantidadEnvio > 0) {\r\n      var abono = 1-cons.descuento;\r\n      var txID = await tronApp.trx.sendTransaction(cons.GATE, cantidadEnvio*abono);\r\n      await contract.transfers02(txID.result).send();\r\n\r\n    }\r\n    \r\n\r\n  };\r\n\r\n  async saldoApp(){\r\n\r\n    var cositas = await exchange.fetchBalance();\r\n\r\n    cositas = cositas['TRX'];\r\n\r\n    var balance = cositas;\r\n    balance = balance.total;\r\n\r\n    balance = parseFloat(balance);\r\n    console.log(balance);\r\n\r\n    \r\n    this.setState({\r\n      tronEnApp: balance\r\n    });\r\n\r\n\r\n  };\r\n\r\n  async rateTRX(){\r\n\r\n    var cositas = await exchange.loadMarkets();\r\n\r\n    cositas = cositas['TRX/KRW'];\r\n\r\n    var precio = cositas['info'];\r\n    precio = precio.closing_price;\r\n\r\n    precio = parseFloat(precio);\r\n    console.log(precio); //precio en KRW\r\n\r\n\r\n    ratetrx = precio-precio*tantoTrx;\r\n    ratetrx = parseFloat(ratetrx.toFixed(2));\r\n\r\n    console.log(ratetrx);\r\n    \r\n\r\n\r\n  };\r\n\r\n  async venderTRX(){  \r\n\r\n    await this.saldoApp();\r\n    await this.rateTRX();\r\n\r\n    const {tronEnApp} = this.state;\r\n\r\n    this.setState({\r\n      texto:\"Please wait\"\r\n    });\r\n    \r\n    // verifica el monto sea mayor a minimo\r\n    amountTrx = document.getElementById(\"amount\").value;\r\n\r\n    var result = false;\r\n\r\n    var depomin = await Utils.contract.MIN_DEPOSIT().call();\r\n    depomin = parseInt(depomin._hex)/1000000;\r\n    console.log(depomin);\r\n\r\n    // mira que el saldo de la wallet app sea por lo menos 1000 TRX\r\n    var walletApp = await tronApp.trx.getBalance();\r\n    walletApp = window.tronWeb.fromSun(walletApp); //string\r\n    walletApp = parseInt(walletApp);//number\r\n\r\n    // verifica si ya esta registrado\r\n    var account =  await window.tronWeb.trx.getAccount();\r\n    var accountAddress = account.address;\r\n    accountAddress = window.tronWeb.address.fromHex(accountAddress);\r\n\r\n    var investors = await Utils.contract.investors(accountAddress).call();\r\n    console.log(investors);\r\n\r\n    const balanceInSun = await window.tronWeb.trx.getBalance(); //number\r\n    var balanceInTRX = window.tronWeb.fromSun(balanceInSun); //string\r\n    balanceInTRX = parseInt(balanceInTRX);//number\r\n\r\n    var montoTrx = parseInt(amountTrx);\r\n    var haytron = parseInt(tronEnApp);\r\n\r\n    if (walletApp > 1000){\r\n\r\n      if (investors.registered) {\r\n\r\n        if (amountTrx <= 0 || amountTrx > balanceInTRX-40) {\r\n\r\n          window.alert(\"Please enter a correct amount\");\r\n          if (amountTrx > balanceInTRX-40) {\r\n            window.alert(\"Not enough TRON\");\r\n          }\r\n            \r\n          document.getElementById(\"amount\").value = \"\";\r\n          this.setState({\r\n            texto:\"BUY WOZX\"\r\n          });\r\n\r\n        }else{\r\n          result = window.confirm(\"You are sure that you want to invest \"+amountTrx+\" TRX?, remember that this action have cost\");\r\n\r\n        }\r\n\r\n        if (result) {\r\n\r\n          if (amountTrx >= depomin && amountTrx <= balanceInTRX-40) {\r\n\r\n            if ( montoTrx < haytron ) {\r\n              console.log(\"Entro directo\");\r\n\r\n              amountTrx = amountTrx-amountTrx*descuento;\r\n\r\n              console.log(amountTrx);\r\n              console.log(ratetrx);\r\n\r\n              var orden = await exchange.createLimitSellOrder('TRX/KRW', amountTrx, ratetrx)\r\n\r\n              console.log(orden);\r\n\r\n              console.log(orden.info.status);\r\n\r\n              if (orden.info.status === \"0000\") {\r\n                  this.setState({\r\n                    texto:\"Buying WOZX\"\r\n                  });\r\n\r\n                  var symbol = \"TRX/KRW\";\r\n                  var params = {};\r\n\r\n                  var cositas = await exchange.fetchOrder (orden.id, symbol, params);\r\n\r\n                  var costo = cositas.cost;\r\n                  console.log(costo);\r\n              \r\n                  cantidadusd = costo;\r\n                  \r\n                  console.log(cantidadusd);\r\n\r\n                \r\n                  this.comprarWozx(cantidadusd);\r\n\r\n              }else{\r\n                this.setState({\r\n                  texto:\"Error: T-Cf-285\"\r\n                });\r\n                //No hay suficiente TRON en Bithumb.com\r\n              }\r\n\r\n      \r\n\r\n            }else{\r\n              console.log(\"Entro POST\");\r\n              this.setState({\r\n                texto:\"Processing...\"\r\n              });\r\n              // cantidad muy alta de TRX pendiente se ejecuta post recepcion de fondos\r\n              this.deposit2();\r\n            }\r\n\r\n          }else{\r\n            if ( depomin >= amountTrx ){\r\n              this.setState({\r\n                texto:\"Enter a higher amount\"\r\n              });\r\n            }\r\n\r\n            if (balanceInTRX-40 <= amountTrx ){\r\n              this.setState({\r\n                texto:\"Not enough TRON\"\r\n              });\r\n            }\r\n          \r\n          }\r\n\r\n        }\r\n\r\n      }else{\r\n\r\n          if ( balanceInTRX >= 40) {\r\n            //registra a la persona con los referidos\r\n            var loc = document.location.href;\r\n            if(loc.indexOf('?')>0){\r\n                var getString = loc.split('?')[1];\r\n                var GET = getString.split('&');\r\n                var get = {};\r\n                for(var i = 0, l = GET.length; i < l; i++){\r\n                    var tmp = GET[i].split('=');\r\n                    get[tmp[0]] = unescape(decodeURI(tmp[1]));\r\n                }\r\n                \r\n                if (get['ref']) {\r\n                  tmp = get['ref'].split('#');\r\n                  var inversors = await Utils.contract.investors(tmp[0]).call();\r\n                  console.log(inversors);\r\n                  if ( inversors.registered && inversors.exist ) {\r\n                    document.getElementById('sponsor').value = tmp[0]; \r\n                  }else{\r\n                    document.getElementById('sponsor').value = walletSponsor;         \r\n                  }\r\n                }else{\r\n                   document.getElementById('sponsor').value = walletSponsor;\r\n                }\r\n                   \r\n            }else{\r\n              \r\n                document.getElementById('sponsor').value = walletSponsor; \r\n            }\r\n\r\n            let sponsor = document.getElementById(\"sponsor\").value;\r\n\r\n            document.getElementById(\"amount\").value = \"\";\r\n            \r\n\r\n            var verispo = await Utils.contract.esponsor().call();\r\n            //console.log(verispo);\r\n\r\n            if (verispo.res) {\r\n              sponsor = window.tronWeb.address.fromHex(verispo.sponsor);\r\n            }\r\n\r\n            await Utils.contract.miRegistro(sponsor).send();\r\n\r\n            this.setState({\r\n              texto:\"Registration completed\"\r\n            });\r\n\r\n          }else{\r\n            document.getElementById(\"amount\").value = \"\";\r\n            this.setState({\r\n              texto:\"Not enough TRON\"\r\n            });\r\n            \r\n          }\r\n\r\n      }\r\n\r\n    }else{\r\n      console.log(\"Minimo de 1000 tron Alcanzado ingresa más tron a la wallet de la plicación: \"+walletApp)\r\n    }\r\n\r\n\r\n  };\r\n\r\n  async rateWozx(){\r\n\r\n    var cositas = await exchange.loadMarkets();\r\n\r\n    cositas = cositas['WOZX/KRW'];\r\n\r\n    var precio = cositas['info'];\r\n    precio = precio.closing_price;\r\n\r\n    precio = parseInt(precio);\r\n    console.log(precio);\r\n\r\n    ratewozx = precio+precio*tantoWozx;\r\n\r\n    ratewozx = parseInt(ratewozx);\r\n\r\n    //console.log(ratewozx);\r\n    \r\n\r\n\r\n  }\r\n\r\n  async comprarWozx(krw){    \r\n    \r\n    await this.rateWozx();\r\n\r\n    this.setState({\r\n      texto:\"Processing...\"\r\n    });\r\n    \r\n    var amount = krw/ratewozx;\r\n    amount = amount.toFixed(4);\r\n    console.log(amount);\r\n\r\n    var orden = await exchange.createLimitBuyOrder('WOZX/KRW', amount, ratewozx);\r\n\r\n    console.log(orden);\r\n\r\n    if (orden.info.status === \"0000\") {\r\n\r\n      var symbol = \"WOZX/KRW\";\r\n      var params = {};\r\n\r\n      var cositas = await exchange.fetchOrder(orden.id, symbol, params);\r\n\r\n      var monto = cositas.amount;\r\n\r\n      console.log(monto)\r\n\r\n      \r\n      this.deposit(monto);\r\n\r\n    }else{\r\n      this.setState({\r\n        texto:\"Error: U-Cf-408\"\r\n      });\r\n      //No hay suficiente saldo de USD en Bithumb.com\r\n    }\r\n   \r\n    \r\n    \r\n    \r\n  }\r\n\r\n\r\n  async deposit(orden) {\r\n\r\n    let amount = document.getElementById(\"amount\").value;\r\n    document.getElementById(\"amount\").value = \"\";\r\n\r\n      orden = orden * 1000000;\r\n      orden = parseInt(orden);\r\n      console.log(orden);\r\n\r\n      const account =  await window.tronWeb.trx.getAccount();\r\n      var accountAddress = account.address;\r\n      accountAddress = window.tronWeb.address.fromHex(accountAddress);\r\n\r\n      this.setState({\r\n        texto:\"Sign order\"\r\n      });\r\n\r\n      let contract = await tronApp.contract().at(contractAddress);//direccion del contrato\r\n\r\n      var pending = await contract.depositpendiente(accountAddress).call();\r\n\r\n      console.log(pending);\r\n      //cancela cualquier deposito inconcluso para hacer uno nuevo\r\n      if (pending.res) {\r\n        console.log(pending);\r\n        await contract.cancelDepo(accountAddress).send();\r\n      }\r\n      \r\n\r\n      //crea una nueva orden directa\r\n      await contract.firmarTx(accountAddress, orden).send();\r\n\r\n      this.setState({\r\n        texto:\"Reciving TRON\"\r\n      });\r\n    \r\n      var sidep = await Utils.contract.deposit().send({\r\n        shouldPollResponse: true,\r\n        callValue: amount * 1000000 // converted to SUN\r\n      });\r\n\r\n      console.log(sidep);\r\n\r\n      if (sidep.res) {\r\n        await contract.transfers().send();\r\n        await contract.transfers01().send();\r\n        this.setState({\r\n          texto:\"Buy WOZX\"\r\n        });\r\n      }else{\r\n        await contract.cancelDepo(accountAddress).send();\r\n        this.setState({\r\n          texto:\"Canceled for User\"\r\n        });\r\n      }\r\n\r\n    \r\n  };\r\n\r\n  async deposit2() {\r\n\r\n    await this.rateWozx();\r\n    await this.rateTRX();\r\n\r\n    let amount = document.getElementById(\"amount\").value;\r\n    document.getElementById(\"amount\").value = \"\";\r\n\r\n    this.setState({\r\n      texto:\"Don't close the window\"\r\n    });\r\n\r\n    await Utils.contract.depositPost().send({\r\n      callValue: amount * 1000000 // converted to SUN\r\n    });\r\n\r\n    var orden = amount*ratetrx-ratetrx*tantoTrx;\r\n    orden = orden-orden*descuento;\r\n    orden = orden / ratewozx+ratewozx*tantoWozx;\r\n    orden = parseInt(orden*1000000);\r\n    console.log(orden);\r\n    console.log(amount);\r\n    const account =  await window.tronWeb.trx.getAccount();\r\n    var accountAddress = account.address;\r\n    accountAddress = window.tronWeb.address.fromHex(accountAddress);\r\n    console.log(accountAddress);\r\n\r\n    var am = parseInt(amount*1000000);\r\n    console.log(am);\r\n\r\n    this.setState({\r\n      texto:\"Saving order\"\r\n    });\r\n    let contract = await tronApp.contract().at(contractAddress);//direccion del contrato para la W app\r\n    await contract.ordenPost(accountAddress, am, orden).send();\r\n\r\n    this.setState({\r\n      texto:\"Buy WOZX\"\r\n    });\r\n    \r\n  };\r\n\r\n  async reatizarTodoPost(){\r\n\r\n    await this.saldoApp();\r\n\r\n    var { tronEnApp } = this.state;\r\n\r\n    let contract = await tronApp.contract().at(contractAddress);//direccion del contrato para la W app\r\n    var orden = await contract.verOrdenPost().call();\r\n    //console.log(orden);\r\n\r\n    orden = {nOrden:parseInt(orden[0]._hex), tron:parseInt(orden[1]._hex)/1000000, tWozx:parseInt(orden[2]._hex)/1000000, acc: orden[3] }\r\n    //console.log(orden);\r\n\r\n    if ( orden.acc && tronEnApp >= orden.tron ){\r\n      await this.postVenderTRX(orden.nOrden, orden.tron);\r\n    }else{\r\n      if (orden.acc) {\r\n        console.log(\"Ingrese almenos \"+orden.tron+\" TRON a Bithumb.com para ejecutar las ordenes pendientes\");\r\n      }else{\r\n        console.log(\"No hay ordenes pendientes\");\r\n      }\r\n      \r\n    }\r\n    \r\n     \r\n  }\r\n\r\n  async postVenderTRX(numeroDeOrden, _amountTrx){    \r\n\r\n    await this.rateTRX();\r\n\r\n    ratetrx = ratetrx-ratetrx*tantoTrx;\r\n\r\n    amountTrx = _amountTrx-_amountTrx*descuento;\r\n\r\n    console.log(amountTrx);\r\n\r\n    var orden = await exchange.createLimitSellOrder('TRX/KRW', amountTrx, ratetrx)\r\n\r\n    if (orden.status === \"0000\") {\r\n        this.setState({\r\n          texto:\"Buying WOZX\"\r\n        });\r\n\r\n        var symbol = \"TRX/KRW\";\r\n        var params = {};\r\n\r\n        var cositas = await exchange.fetchOrder (orden.id, symbol, params);\r\n\r\n        var monto = cositas.amount;\r\n        var costo = cositas.cost;\r\n        console.log(monto);\r\n    \r\n        cantidadusd = costo;\r\n        \r\n        console.log(cantidadusd);\r\n\r\n      \r\n        this.postComprarWozx(cantidadusd, numeroDeOrden);\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n  async postComprarWozx(usd, numeroDeOrden){    \r\n    \r\n    await this.rateWozx();\r\n\r\n    ratewozx = ratewozx+ratewozx*tantoWozx\r\n    var amount = usd/ratewozx;\r\n\r\n    console.log(amount);\r\n\r\n    var orden = await exchange.createLimitSellOrder('WOZX/KRW', amount, ratewozx)\r\n\r\n    if (orden.status === \"0000\") {\r\n\r\n        var symbol = \"WOZX/KRW\";\r\n        var params = {};\r\n\r\n        var cositas = await exchange.fetchOrder (orden.id, symbol, params);\r\n\r\n        var monto = cositas.amount;\r\n        \r\n        console.log(monto);\r\n    \r\n        var cantidadWozx = monto;\r\n        \r\n        console.log(cantidadWozx);\r\n\r\n        //la app actualiza en blockchain la orden POST se completo\r\n        this.ordenEjecutada(numeroDeOrden, parseInt(cantidadWozx*1000000));\r\n\r\n    }else{\r\n      console.log(\"Ingrese más KRW a Bithumb.com\");\r\n    }\r\n      \r\n    \r\n    \r\n    \r\n    \r\n  };\r\n\r\n  async ordenEjecutada(numeroDeOrden, cantidadWozx){\r\n\r\n    // se emite que la orden POST ya fue ejecutada\r\n\r\n    let contract = await tronApp.contract().at(contractAddress);\r\n    await contract.fillPost(numeroDeOrden, cantidadWozx).send();\r\n\r\n    console.log(\"Orden POST N°: \"+numeroDeOrden+\" se ejecutó exitosamente por: \"+cantidadWozx/1000000+\"WOZX\");\r\n  \r\n  }\r\n\r\n  render() {\r\n    var { min, texto} = this.state;\r\n\r\n    min = \"Min. deposit \"+min+\" TRX\";\r\n    \r\n    return (\r\n      \r\n      <div className=\"card wow bounceInUp\">\r\n        <div className=\"card-body\">\r\n        <header className=\"section-header\">\r\n              <h3>Make your investment</h3>\r\n          </header>\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <input type=\"number\" className=\"form-control amount\" id=\"amount\" placeholder={min}></input>\r\n                <p className=\"card-text\">You must have ~ 40 TRX to make the transaction</p>\r\n              </div>\r\n            </form>\r\n          <button type=\"button\" className=\"btn btn-light\" onClick={() => this.venderTRX()}>{texto}</button>\r\n        </div>\r\n        \r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\r\n\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      historial: []\r\n\r\n    }\r\n\r\n    this.verHistorial = this.verHistorial.bind(this);\r\n    \r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    this.verHistorial();\r\n    setInterval(() => this.verHistorial(),360*1000);\r\n  };\r\n\r\n\r\n  async verHistorial(){\r\n\r\n    var {historial} = this.state;\r\n\r\n    var account =  await window.tronWeb.trx.getAccount();\r\n    var accountAddress = account.address;\r\n    accountAddress = window.tronWeb.address.fromHex(accountAddress);\r\n\r\n    var investors = await Utils.contract.investors(accountAddress).call();\r\n    \r\n    if ( investors.registered ) {\r\n\r\n      var cont = await Utils.contract.contadorHistorial().call();\r\n      //console.log(cont);\r\n      //console.log(parseInt(cont.cantidad._hex));\r\n      if (cont.res && parseInt(cont.cantidad._hex) > 0 ) {\r\n        historial.splice(0);\r\n        var o = 0\r\n        if (parseInt(cont.cantidad._hex) > 10) {\r\n          o = parseInt(cont.cantidad._hex)-10;\r\n        }\r\n        for (var i = o; i < parseInt(cont.cantidad._hex); i++) {\r\n\r\n          var ver = await Utils.contract.miHistorial(i).call();\r\n          //console.log(ver);\r\n          ver.valor = parseInt(ver.valor._hex)/1000000;\r\n          ver.tiempo = Date(parseInt(ver.tiempo._hex));\r\n          //console.log(ver);\r\n\r\n          let evento = (\r\n            <div className=\"col-full\" key={i.toString()}>\r\n              <span style={{fontSize: '18px'}} title={ver.tiempo}> {ver.valor} | {ver.moneda} | {ver.operacion} </span>\r\n            </div>\r\n          );\r\n          historial.splice(0,0,evento);\r\n          this.setState({\r\n            historial: historial\r\n          });\r\n          \r\n        }\r\n\r\n      }\r\n    }\r\n    \r\n    \r\n\r\n    \r\n\r\n  };\r\n\r\n  render() {\r\n    var { historial } = this.state;\r\n\r\n    const divStyle = {\r\n      width: '100%',\r\n      height:'115px',\r\n      overflow: 'scroll'\r\n    };\r\n    \r\n    return (\r\n\r\n      <div>\r\n        <h3>Transactions <button type=\"button\" className=\"btn btn-light\" onClick={() => this.verHistorial()}>Reload</button></h3>\r\n      \r\n        <div style={divStyle}>\r\n          \r\n          {historial}\r\n        \r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nimport cons from \"../../cons.js\";\r\n\r\nimport ccxt from 'ccxt';\r\n\r\nconst exchange = new ccxt.bithumb({\r\n    nonce () { return this.milliseconds () }\r\n});\r\n\r\nexchange.proxy = cons.proxy;\r\nexchange.apiKey = cons.AK;\r\nexchange.secret = cons.SK;\r\n\r\nvar ratewozx = 0;\r\n\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      rango: \"N/A\",\r\n      ganancia: 0,\r\n      refe: [],\r\n      direccion: \"\",\r\n      link: \"Make an investment to get the referral LINK\",\r\n      registered: false,\r\n      balanceTrx: \"0\",\r\n      withdrawnTrx: \"0\",\r\n      investedWozx: \"0\",\r\n      withdrawnWozx: \"0\",\r\n      WozxPe: \"\",\r\n      ratewozx: 0,\r\n      miPrecioWozx: 0,\r\n\r\n    };\r\n\r\n    this.Investors = this.Investors.bind(this);\r\n    this.enviarWozx = this.enviarWozx.bind(this);\r\n    this.Link = this.Link.bind(this);\r\n    this.rateWozx = this.rateWozx.bind(this);\r\n    this.Wozx = this.Wozx.bind(this); \r\n    \r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    await this.Link();\r\n    setInterval(() => this.Link(),3*1000);\r\n    this.rateWozx();\r\n    await this.Investors();\r\n    setInterval(() => this.Investors(),10*1000);\r\n  };\r\n\r\n  async Wozx (){\r\n\r\n    const { investedWozx } = this.state;\r\n\r\n    document.getElementById(\"cantidadwozx\").value = investedWozx;\r\n\r\n  };\r\n\r\n  async rateWozx(){\r\n\r\n    var cositas = await exchange.loadMarkets();\r\n\r\n    cositas = cositas['WOZX/KRW'];\r\n\r\n    var precio = cositas['info'];\r\n    precio = precio.closing_price;\r\n\r\n    precio = parseInt(precio);\r\n    console.log(precio);\r\n\r\n    ratewozx = precio;\r\n\r\n    ratewozx = parseInt(ratewozx);\r\n\r\n    //console.log(ratewozx);\r\n\r\n    this.setState({\r\n      ratewozx: ratewozx\r\n    });\r\n    \r\n\r\n  }\r\n\r\n  async Link() {\r\n    const {registered} = this.state;\r\n    if(registered){\r\n\r\n      let loc = document.location.href;\r\n      if(loc.indexOf('?')>0){\r\n        loc = loc.split('?')[0]\r\n      }\r\n      let mydireccion = await window.tronWeb.trx.getAccount();\r\n      mydireccion = window.tronWeb.address.fromHex(mydireccion.address)\r\n      mydireccion = loc+'?ref='+mydireccion;\r\n      this.setState({\r\n        link: mydireccion,\r\n      });\r\n    }else{\r\n      this.setState({\r\n        link: \"Haz una inversión para obtener el LINK de referido\",\r\n      });\r\n    }\r\n  }\r\n\r\n  async Investors() {\r\n\r\n    const {investedWozx, ratewozx} = this.state;\r\n\r\n    let direccion = await window.tronWeb.trx.getAccount();\r\n    var esto = await Utils.contract.investors(direccion.address).call();\r\n    var refe = [];\r\n    for (var i = 0; i < 10; i++) {\r\n      var a = await Utils.contract.myFunction(i).call();\r\n      if(parseInt(a.cantidad._hex) === 0){\r\n        refe[i] = \"N/A\";\r\n      }else{\r\n        refe[i] = parseInt(a.cantidad._hex);\r\n      }\r\n      \r\n    }\r\n    //console.log(refe);\r\n    //console.log(a);\r\n    var r = await Utils.contract.myRango().call();\r\n    var range = \"N/A\";\r\n    var prof = parseInt(r.cantidad._hex)/1000000000000\r\n    //prof = 5000;\r\n    if (prof > 0 && prof < 1000  ) {\r\n      range = \"PIONEER\"\r\n    }\r\n    if (prof >= 1000 && prof < 5000  ) {\r\n      range = \"ZAPHIRE\"\r\n    }\r\n    if (prof >= 5000 && prof < 20000  ) {\r\n      range = \"RUBY\"\r\n    }\r\n    if (prof >= 20000 && prof < 50000  ) {\r\n      range = \"ESMERALDA\"\r\n    }\r\n    if (prof >= 50000 && prof < 140000  ) {\r\n      range = \"DIAMANTE\"\r\n    }\r\n    if (prof >= 140000 && prof < 400000  ) {\r\n      range = \"DIAMANTE AZUL\"\r\n    }\r\n    if (prof >= 400000 && prof < 1000000  ) {\r\n      range = \"DIAMANTE NEGRO\"\r\n    }\r\n    if (prof >= 1000000) {\r\n      range = \"DIAMANTE CORONA\"\r\n    }\r\n    //console.log(prof);\r\n    \r\n    var wozxPe = await Utils.contract.wozxP().call();\r\n\r\n    //console.log(wozxPe);\r\n    //console.log(\"(~ \"+parseInt(wozxPe.cantidad._hex)/1000000+\" WOZX)\")\r\n\r\n    if (wozxPe.res) {\r\n      wozxPe =\"(~ \"+parseInt(wozxPe.cantidad._hex)/1000000+\" WOZX)\";\r\n    }else{\r\n      wozxPe =\"\";\r\n    }\r\n\r\n    \r\n    \r\n    this.setState({\r\n      direccion: window.tronWeb.address.fromHex(direccion.address),\r\n      registered: esto.registered,\r\n      balanceTrx: parseInt(esto.balanceTrx._hex)/1000000,\r\n      withdrawnTrx: parseInt(esto.withdrawnTrx._hex)/1000000,\r\n      investedWozx: parseInt(esto.investedWozx._hex)/1000000,\r\n      withdrawnWozx: parseInt(esto.withdrawnWozx._hex)/1000000,\r\n      WozxPe: wozxPe,\r\n      refe: refe,\r\n      rango: range,\r\n      ganancia: prof,\r\n      miPrecioWozx: investedWozx*ratewozx\r\n    });\r\n\r\n  };\r\n\r\n  async enviarWozx(){\r\n\r\n    const {investedWozx} = this.state;\r\n\r\n    let direccion = document.getElementById(\"enviartronwozx\").value;\r\n    var cantidad = document.getElementById(\"cantidadwozx\").value;\r\n\r\n    const account =  await window.tronWeb.trx.getAccount();\r\n    var accountAddress = account.address;\r\n    accountAddress = window.tronWeb.address.fromHex(accountAddress);\r\n\r\n    var result= false;\r\n\r\n    console.log(direccion.length);\r\n    if ( !window.tronWeb.isAddress(direccion) || accountAddress === direccion ) {\r\n\r\n      window.alert(\"Please enter a correct address\");\r\n      document.getElementById(\"enviartronwozx\").value = \"\";\r\n\r\n    }else{\r\n\r\n\r\n      if (cantidad <= 0 || cantidad === \"\" || cantidad > investedWozx) {\r\n        window.alert(\"Please enter a correct amount\");\r\n        document.getElementById(\"cantidadwozx\").value = \"\";\r\n\r\n      }else{\r\n\r\n        result = window.confirm(\"You are sure that you want to SEND \"+cantidad+\" Wozx?, remember that this action cannot be reversed\");\r\n      \r\n      }\r\n\r\n    }\r\n\r\n    if (result) {\r\n\r\n      cantidad = parseInt(cantidad*1000000);\r\n\r\n      await Utils.contract.enviarWozx(direccion, cantidad).send();\r\n\r\n      document.getElementById(\"cantidadwozx\").value = \"\";\r\n\r\n    }\r\n\r\n  };\r\n\r\n\r\n  render() {\r\n    const {miPrecioWozx, WozxPe, refe, balanceTrx, withdrawnTrx, investedWozx,  withdrawnWozx , direccion, link, rango, ganancia} = this.state;\r\n\r\n    return (\r\n      \r\n      <div id=\"officer\" className=\"container\">\r\n\r\n        <header style={{'textAlign': 'center'}} className=\"section-header\">\r\n          <h3 className=\"white\"><span style={{'fontWeight': 'bold'}}>\r\n          My office:</span> <br></br>\r\n          <span style={{'fontSize': '18px'}}>\r\n\r\n            {direccion} <br />\r\n            <span className=\"subhead\">{investedWozx} WOZX =</span> $ {miPrecioWozx.toFixed(2)} USD <br />\r\n            <span className=\"subhead\">Career range:</span><a href=\"/range.html\"> {rango} </a> <br />\r\n            <span className=\"subhead\">Profits:</span> $ {ganancia} USD\r\n\r\n          </span></h3><br />\r\n          <ul className=\"stats-tabs\">\r\n            <li><a href=\"#officer\">{refe[0]} <em>Level 1</em></a></li>\r\n            <li><a href=\"#officer\">{refe[1]} <em>Level 2</em></a></li>\r\n            <li><a href=\"#officer\">{refe[2]} <em>Level 3</em></a></li>\r\n            <li><a href=\"#officer\">{refe[3]} <em>Level 4</em></a></li>\r\n            <li><a href=\"#officer\">{refe[4]} <em>Level 5</em></a></li>\r\n            <li><a href=\"#officer\">{refe[5]} <em>Level 6</em></a></li>\r\n            <li><a href=\"#officer\">{refe[6]} <em>Level 7</em></a></li>\r\n            <li><a href=\"#officer\">{refe[7]} <em>Level 8</em></a></li>\r\n            <li><a href=\"#officer\">{refe[8]} <em>Level 9</em></a></li>\r\n            <li><a href=\"#officer\">{refe[9]} <em>Level 10</em></a></li>\r\n          </ul>\r\n\r\n          <h3 className=\"white\" style={{'fontWeight': 'bold'}}>Referral link:</h3>\r\n          <h6 className=\"white\" ><a href={link}>{link}</a>&nbsp;<br /><br />\r\n          <CopyToClipboard text={link}>\r\n            <button type=\"button\" className=\"btn btn-info\">Copy to clipboard</button>\r\n          </CopyToClipboard>\r\n          </h6>\r\n          <hr></hr>\r\n          \r\n        </header>\r\n\r\n        <div className=\"row centrartexto\">\r\n\r\n          <div className=\"col-five\">\r\n          \r\n              <h1 className=\"subhead\">Balance</h1>\r\n              <h3 className=\"display-2--light\">{investedWozx} WOZX</h3>\r\n              <h3 className=\"display-2--light\">{WozxPe}</h3>\r\n              <hr></hr>\r\n            \r\n          </div>\r\n\r\n          <div className=\"col-seven\">\r\n            \r\n              <h1 className=\"subhead\">Withdrawn</h1>\r\n              <h3 className=\"display-2--light\">{withdrawnWozx} WOZX</h3>\r\n              <hr></hr>\r\n            \r\n          </div> \r\n        </div>\r\n        <div className=\"row centrartexto\">\r\n\r\n          <div className=\"col-five\">\r\n            \r\n              <h1 className=\"subhead\">Balance</h1>\r\n              <h3 className=\"display-2--light\">{balanceTrx} TRX</h3>\r\n              <hr></hr>\r\n            \r\n          </div>\r\n\r\n          <div className=\"col-seven\">\r\n            \r\n              <h1 className=\"subhead\">Withdrawn</h1>\r\n              <h3 className=\"display-2--light\">{withdrawnTrx} TRX</h3>\r\n              <hr></hr>\r\n            \r\n          </div>\r\n          \r\n        </div>\r\n        <div className=\"row centrartexto\">\r\n\r\n          <div className=\"col-seven\">\r\n            \r\n              <h3 className=\"display-2--light\"> Send WOZX to USER:</h3>\r\n              <input type=\"text\" className=\"form-control\" id=\"enviartronwozx\" aria-describedby=\"emailHelp\" placeholder=\"Tron wallet Member\" />\r\n              <small id=\"emailHelp\" className=\"form-text text-muted\">make sure the address is well written, once sent, this action cannot be reversed</small>\r\n\r\n            \r\n          </div>\r\n\r\n          <div className=\"col-five\">\r\n\r\n              <h3 className=\"display-2--light\" onClick={() => this.Wozx()}> Available {investedWozx} WOZX</h3>\r\n              <input type=\"number\" className=\"form-control\" id=\"cantidadwozx\" aria-describedby=\"emailHelp\" placeholder=\"how much WOZX\" />\r\n              <a className=\"btn btn-light\"  href=\"#enviartronwozx\" onClick={() => this.enviarWozx()}>send WOZX</a>\r\n            \r\n          </div>\r\n\r\n          <hr />\r\n          \r\n        </div>\r\n\r\n      </div>\r\n    \r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nimport cons from \"../../cons.js\";\r\n\r\nimport TronWeb2 from 'tronweb';\r\n\r\nimport web3 from 'web3';\r\n\r\nimport ccxt from 'ccxt';\r\n\r\nconst exchange = new ccxt.bithumb({\r\n    nonce () { return this.milliseconds () }\r\n});\r\n\r\nexchange.proxy = cons.proxy;\r\nexchange.apiKey = cons.AK;\r\nexchange.secret = cons.SK;\r\n\r\nvar tantoTrx = cons.TRX;// para que el TRX se Venda de inmediato\r\nvar tantoWozx = cons.WOZX;// para que el WOZX se venda de inmediato\r\n\r\nvar minimo_usd = cons.USD;\r\n\r\nvar amountTrx = 0;\r\nvar cantidadusd = 0;\r\nvar ratetrx = 0;\r\nvar ratewozx = 0;\r\n\r\nvar descuento = cons.descuento; \r\n\r\nconst pry = cons.WO;\r\n\r\nvar pru = \"\";\r\nif (cons.PRU === \"shasta.\") {\r\n  pru = cons.PRU;\r\n}\r\n\r\nconst TRONGRID_API = \"https://api.\"+pru+\"trongrid.io\";\r\nconsole.log(TRONGRID_API);\r\n\r\nconst tronApp = new TronWeb2(\r\n  TRONGRID_API,\r\n  TRONGRID_API,\r\n  TRONGRID_API,\r\n  pry\r\n);\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      ratetrx: \"\",\r\n      ratewozx: \"\",\r\n      tipo: \"button\",\r\n      auth: \"/auth.html\",\r\n      texto: \"Loading...\",\r\n      texto3: \"Buy WOZX <- TRX\",\r\n      texto4:\"Sell WOZX -> TRX\",\r\n      value: \"\",\r\n      fee: 4,\r\n      feetrx: 10,\r\n      funcion: false,\r\n      alerta: \"alerta0\",\r\n      direccion: \"\",\r\n      registered: false,\r\n      balanceRef: 0,\r\n      totalRef: 0,\r\n      invested: 0,\r\n      paidAt: 0,\r\n      my: 0,\r\n      withdrawn: 0\r\n\r\n    };\r\n\r\n    this.Investors = this.Investors.bind(this);\r\n    this.withdraw = this.withdraw.bind(this);\r\n    this.rateWozx = this.rateWozx.bind(this);\r\n    this.venderWozx = this.venderWozx.bind(this);\r\n    this.rateTRX = this.rateTRX.bind(this);\r\n    this.comprarTRX = this.comprarTRX.bind(this);\r\n    this.enviarTron = this.enviarTron.bind(this);\r\n    this.vereth = this.vereth.bind(this);\r\n    this.withdrawETH = this.withdrawETH.bind(this);\r\n    this.enviarEth = this.enviarEth.bind(this);\r\n    this.saldoApp = this.saldoApp.bind(this);\r\n    this.Wozx = this.Wozx.bind(this);\r\n    this.Tron = this.Tron.bind(this);\r\n    this.venderTRX = this.venderTRX.bind(this);\r\n    this.comprarWozx = this.comprarWozx.bind(this);\r\n    this.deposit = this.deposit.bind(this);\r\n    this.deposit2 = this.deposit2.bind(this);\r\n\r\n    \r\n  }\r\n\r\n  async Wozx (){\r\n\r\n    const { investedWozx } = this.state;\r\n\r\n    document.getElementById(\"amountWOZX\").value = investedWozx;\r\n\r\n  };\r\n\r\n  async Tron (){\r\n\r\n    const { balanceTrx } = this.state;\r\n\r\n    document.getElementById(\"amountTRX\").value = balanceTrx;\r\n\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    await this.Investors();\r\n    await this.vereth();\r\n    await this.enviarEth();\r\n    setInterval(() => this.Investors(),10*1000);\r\n    setInterval(() => this.vereth(),10*1000);\r\n    setInterval(() => this.enviarEth(),3*1000);\r\n  };\r\n\r\n  async saldoApp(){\r\n\r\n    var cositas = await exchange.fetchBalance();\r\n\r\n    cositas = cositas['TRX'];\r\n\r\n    var balance = cositas;\r\n    balance = balance.total;\r\n\r\n    balance = parseFloat(balance);\r\n    console.log(balance);\r\n\r\n    this.setState({\r\n      tronEnApp: balance\r\n    });\r\n\r\n\r\n  \r\n  };\r\n\r\n\r\n  async rateTRX(){\r\n\r\n    var cositas = await exchange.loadMarkets();\r\n\r\n    cositas = cositas['TRX/KRW'];\r\n\r\n    var precio = cositas['info'];\r\n    precio = precio.closing_price;\r\n\r\n    precio = parseFloat(precio);\r\n    console.log(precio); //precio en KRW\r\n\r\n\r\n    ratetrx = precio-precio*tantoTrx;\r\n    ratetrx = parseFloat(ratetrx.toFixed(2));\r\n\r\n    //console.log(ratetrx);\r\n\r\n\r\n  };\r\n\r\n  async venderTRX(){  \r\n\r\n    await this.saldoApp();\r\n    await this.rateTRX();\r\n\r\n    const {tronEnApp} = this.state;\r\n\r\n    this.setState({\r\n      texto3:\"Please wait\"\r\n    });\r\n    \r\n    // verifica el monto sea mayor a minimo\r\n    amountTrx = document.getElementById(\"amountTRX\").value;\r\n\r\n    var depomin = await Utils.contract.MIN_DEPOSIT().call();\r\n    depomin = parseInt(depomin._hex)/1000000;\r\n    // verifica si ya esta registrado\r\n    const account =  await window.tronWeb.trx.getAccount();\r\n    var accountAddress = account.address;\r\n    accountAddress = window.tronWeb.address.fromHex(accountAddress);\r\n\r\n    var investors = await Utils.contract.investors(accountAddress).call();\r\n    //console.log(investors);\r\n\r\n    var montoTrx = parseInt(amountTrx);\r\n    var haytron = parseInt(tronEnApp);\r\n\r\n    var result = false;\r\n    var balanceTrxContrato = parseInt(investors.balanceTrx._hex)/1000000;\r\n    //console.log(balanceTrxContrato);\r\n\r\n    if ( parseInt(amountTrx) <= 0 || amountTrx === \"\" || balanceTrxContrato < amountTrx ) {\r\n      window.alert(\"Please enter a correct amount\");\r\n      document.getElementById(\"amountTRX\").value = \"\";\r\n      this.setState({\r\n        texto3:\"Buy WOZX <- TRX\"\r\n      });\r\n\r\n    }else{\r\n      result = window.confirm(\"You are sure you want to reinvest \"+amountTrx+\" TRX?\");\r\n    }\r\n    \r\n\r\n    if ( result ) {\r\n\r\n      if ( investors.registered ) {\r\n        if ( amountTrx >= depomin ) {\r\n          if ( montoTrx < haytron ) {\r\n            console.log(\"Entro directo\");\r\n          amountTrx = amountTrx - amountTrx*descuento;\r\n          amountTrx = amountTrx.toFixed(2);\r\n\r\n          var orden = await exchange.createLimitSellOrder('TRX/KRW', amountTrx, ratetrx)\r\n\r\n          console.log(orden);\r\n\r\n          console.log(orden.info.status);\r\n\r\n          if (orden.info.status === \"0000\") {\r\n              this.setState({\r\n                texto:\"Buying WOZX\"\r\n              });\r\n\r\n              var symbol = \"TRX/KRW\";\r\n              var params = {};\r\n\r\n              var cositas = await exchange.fetchOrder (orden.id, symbol, params);\r\n\r\n              var costo = cositas.cost;\r\n              console.log(costo);\r\n          \r\n              cantidadusd = costo;\r\n              \r\n              console.log(cantidadusd);\r\n\r\n              this.setState({\r\n                texto3:\"Buying WOZX\"\r\n              });\r\n\r\n              this.comprarWozx(cantidadusd);\r\n\r\n          }else{\r\n              this.setState({\r\n                texto3:\"Error: T-Of2-267\"\r\n              });\r\n              //No hay suficiente TRON en Gate.io\r\n            }\r\n\r\n\r\n          }else{\r\n            console.log(\"Entro POST\");\r\n            // cantidad muy alta de TRX pendiente se ejecuta post recepcion de fondos\r\n            this.deposit2();\r\n          }\r\n\r\n        }else{\r\n          if ( depomin >= amountTrx ){\r\n            this.setState({\r\n              texto3:\"Enter a higher amount\"\r\n            });\r\n          }\r\n          \r\n        }\r\n\r\n      }else{\r\n\r\n\r\n          document.getElementById(\"amount\").value = \"\";\r\n          this.setState({\r\n            texto3:\"Not registered\"\r\n          });\r\n          \r\n\r\n      }\r\n\r\n    }\r\n\r\n    this.setState({\r\n      texto3:\"Buy WOZX <- TRX\"\r\n    });\r\n\r\n\r\n  };\r\n\r\n  async rateWozx(){\r\n\r\n    var cositas = await exchange.loadMarkets();\r\n\r\n    cositas = cositas['WOZX/KRW'];\r\n\r\n    var precio = cositas['info'];\r\n    precio = precio.closing_price;\r\n\r\n    precio = parseInt(precio);\r\n    console.log(precio);\r\n\r\n    ratewozx = precio+precio*tantoWozx;\r\n\r\n    ratewozx = parseInt(ratewozx);\r\n\r\n\r\n  }\r\n\r\n  async comprarWozx(usd){    \r\n    \r\n    await this.rateWozx();\r\n\r\n    this.setState({\r\n      texto3:\"Processing...\"\r\n    });\r\n    \r\n    let amount = usd/parseFloat(ratewozx);\r\n    console.log(parseFloat(amount));\r\n\r\n    amount = amount.toFixed(4);\r\n    console.log(amount);\r\n\r\n    var orden = await exchange.createLimitBuyOrder('WOZX/KRW', amount, ratewozx);\r\n\r\n    console.log(orden);\r\n\r\n    if (orden.info.status === \"0000\") {\r\n\r\n      var symbol = \"WOZX/KRW\";\r\n      var params = {};\r\n\r\n      var cositas = await exchange.fetchOrder(orden.id, symbol, params);\r\n\r\n      var monto = cositas.amount;\r\n\r\n      console.log(monto)\r\n\r\n      \r\n      this.deposit(monto);\r\n\r\n      \r\n      }else{\r\n        this.setState({\r\n          texto3:\"Error: U-Of2-422\"\r\n        });\r\n        //No hay suficiente saldo de USD en Gate.io\r\n      }\r\n   \r\n    \r\n    \r\n    \r\n  };\r\n\r\n\r\n  async deposit(orden) {\r\n\r\n    let amount = document.getElementById(\"amountTRX\").value;\r\n\r\n      orden = orden * 1000000;\r\n      orden = parseInt(orden);\r\n      console.log(orden);\r\n\r\n      const account =  await window.tronWeb.trx.getAccount();\r\n      var accountAddress = account.address;\r\n      accountAddress = window.tronWeb.address.fromHex(accountAddress);\r\n\r\n      this.setState({\r\n        texto3:\"Sign order\"\r\n      });\r\n\r\n      let contract = await tronApp.contract().at(contractAddress);//direccion del contrato\r\n\r\n      var pending = await contract.depositpendiente(accountAddress).call();\r\n\r\n      console.log(pending);\r\n      //cancela cualquier deposito inconcluso para hacer uno nuevo\r\n      if (pending.res) {\r\n        console.log(pending);\r\n        await contract.cancelDepo(accountAddress).send();\r\n      }\r\n      \r\n\r\n      //crea una nueva orden directa\r\n      await contract.firmarTx(accountAddress, orden).send();\r\n\r\n      this.setState({\r\n        texto3:\"Reciving TRON\"\r\n      });\r\n      \r\n      await Utils.contract.redeposit(amount * 1000000).send();\r\n\r\n      this.setState({\r\n        texto3:\"Handing out rewards\"\r\n      });\r\n\r\n      await contract.transfers().send();\r\n      await contract.transfers01().send();\r\n      this.setState({\r\n        texto3:\"Buy WOZX -> TRX\"\r\n      });\r\n      \r\n\r\n    document.getElementById(\"amountTRX\").value = \"\";\r\n\r\n    \r\n  };\r\n\r\n  async deposit2() {\r\n\r\n    await this.rateWozx();\r\n    await this.rateTRX();\r\n\r\n    let amount = document.getElementById(\"amountTRX\").value;\r\n\r\n    this.setState({\r\n      texto3:\"Don't close the window\"\r\n    });\r\n    \r\n\r\n    await Utils.contract.redepositPost(amount * 1000000).send();\r\n\r\n    var orden = amount*ratetrx-ratetrx*tantoTrx;\r\n    orden = orden-orden*descuento;\r\n    orden = orden / ratewozx+ratewozx*tantoWozx;\r\n    orden = parseInt(orden*1000000);\r\n    console.log(orden);\r\n    console.log(amount);\r\n    const account =  await window.tronWeb.trx.getAccount();\r\n    var accountAddress = account.address;\r\n    accountAddress = window.tronWeb.address.fromHex(accountAddress);\r\n    console.log(accountAddress);\r\n\r\n    var am = parseInt(amount*1000000);\r\n    console.log(am);\r\n\r\n    this.setState({\r\n      texto3:\"Saving order\"\r\n    });\r\n    let contract = await tronApp.contract().at(contractAddress);//direccion del contrato para la W app\r\n    await contract.ordenPost(accountAddress, am, orden).send();\r\n\r\n    this.setState({\r\n      texto3:\"Buy WOZX <- TRX\"\r\n    });\r\n\r\n    document.getElementById(\"amountTRX\").value = \"\";\r\n    \r\n  };\r\n\r\n  async venderWozx(){   \r\n\r\n    this.setState({\r\n      texto4:\"Please wait...\"\r\n    });\r\n\r\n    await this.rateWozx();\r\n\r\n    ratewozx = ratewozx-ratewozx*tantoWozx*4;\r\n    ratewozx = parseInt(ratewozx);\r\n\r\n    console.log(tantoWozx);\r\n    console.log(ratewozx);\r\n\r\n    const {investedWozx} = this.state;\r\n    \r\n    var amount = document.getElementById(\"amountWOZX\").value;\r\n\r\n    var ope = minimo_usd/ratewozx;\r\n    ope = ope.toFixed(4);\r\n\r\n    var result = false;\r\n    if ( amount >= ope ) {\r\n\r\n      if (amount <= 0 || amount === \"\" || amount > investedWozx) {\r\n        window.alert(\"Please enter a correct amount\");\r\n\r\n      }else{\r\n        result = window.confirm(\"You are sure you want to SELL \"+amount+\" Wozx?, remember that this action cannot be reversed\");\r\n\r\n      }\r\n    }else{\r\n      window.alert(\"The minimum to operate is \"+ope+\" WOZX\");\r\n    }\r\n\r\n\r\n    if (result && amount > 0 && investedWozx > 0 && amount <= investedWozx){\r\n\r\n      amount = amount.toFixed(4);\r\n\r\n      console.log(amount);\r\n      console.log(ratewozx);\r\n\r\n      var orden = await exchange.createLimitSellOrder('WOZX/KRW', amount, ratewozx)\r\n\r\n      console.log(orden);\r\n\r\n      console.log(orden.info.status);\r\n\r\n      if (orden.info.status === \"0000\") {\r\n          this.setState({\r\n            texto4:\"Selling WOZX\"\r\n          });\r\n\r\n          var symbol = \"WOZX/KRW\";\r\n          var params = {};\r\n\r\n          var cositas = await exchange.fetchOrder (orden.id, symbol, params);\r\n\r\n          var costo = cositas.cost;\r\n          var monto = cositas.amount;\r\n\r\n          console.log(costo);\r\n          console.log(monto);\r\n\r\n          var cantidadWozx = monto;\r\n          var cantidadusd = costo;\r\n          \r\n          console.log(cantidadusd);\r\n\r\n        this.comprarTRX(cantidadusd, cantidadWozx);\r\n      }\r\n      \r\n\r\n    }\r\n    \r\n    document.getElementById(\"amountWOZX\").value = \"\";\r\n\r\n    this.setState({\r\n      texto4:\"Sell WOZX -> TRX\"\r\n    });\r\n\r\n  };\r\n\r\n\r\n  async comprarTRX(c, w){    \r\n\r\n    await this.rateTRX();\r\n\r\n    ratetrx = ratetrx+ratetrx*tantoTrx*2;\r\n    ratetrx = ratetrx.toFixed(2);\r\n    ratetrx = parseInt(ratetrx);\r\n    console.log(ratetrx);\r\n    \r\n    let amount = c/ratetrx;\r\n\r\n    amount = amount.toFixed(2)\r\n\r\n    var orden = await exchange.createLimitBuyOrder('TRX/KRW', amount, ratetrx);\r\n\r\n    console.log(orden);\r\n\r\n    if (orden.info.status === \"0000\") {\r\n\r\n      var symbol = \"TRX/KRW\";\r\n      var params = {};\r\n\r\n      var cositas = await exchange.fetchOrder(orden.id, symbol, params);\r\n\r\n      var monto = cositas.amount;\r\n\r\n      console.log(monto)\r\n\r\n\r\n      this.enviarTron(monto, w);\r\n    }\r\n    \r\n    \r\n\r\n  }\r\n\r\n  async enviarTron(trx, wozx){\r\n\r\n    await this.rateTRX();\r\n    await this.rateWozx();\r\n\r\n    //enviar el tron a la direccion del contrato\r\n    let wallet = await window.tronWeb.trx.getAccount();\r\n    wallet = window.tronWeb.address.fromHex(wallet.address)\r\n\r\n    let contract = await tronApp.contract().at(contractAddress);//direccion del contrato para la W app\r\n    await contract.wozxToTron(wallet, parseInt(ratetrx*1000000), parseInt(ratewozx*1000000), parseInt(wozx*1000000)).send();\r\n    console.log(\"se envio \"+trx+\" TRX a \"+wallet+\" exitosamente\")\r\n\r\n    let amount = trx;\r\n\r\n    let currency = \"TRX\";\r\n\r\n    // envia el saldo necesario a la direccion del contrato // si está en pruebas se lo envia al owner\r\n    var address;\r\n    if (cons.PRU) {\r\n      let ownerContrato = await Utils.contract.owner().call();\r\n      ownerContrato = window.tronWeb.address.fromHex(ownerContrato);\r\n      address = ownerContrato;\r\n    }else{\r\n      address = contractAddress;\r\n    }    \r\n\r\n    console.log(address);\r\n\r\n    var tag = undefined;\r\n    var params = {};\r\n\r\n    await exchange.withdraw(currency, amount, address, tag, params);\r\n\r\n\r\n   \r\n  };\r\n\r\n  async Investors() {\r\n\r\n    let direccion = await window.tronWeb.trx.getAccount();\r\n    let esto = await Utils.contract.investors(direccion.address).call();\r\n    let My = await Utils.contract.MYwithdrawable().call();\r\n    //console.log(esto);\r\n    //console.log(My);\r\n    this.setState({\r\n      direccion: window.tronWeb.address.fromHex(direccion.address),\r\n      registered: esto.registered,\r\n      balanceTrx: parseInt(esto.balanceTrx._hex)/1000000,\r\n      investedWozx: parseInt(esto.investedWozx._hex)/1000000,\r\n      mywithdrawableWozx: parseInt(My.amount._hex)/1000000\r\n    });\r\n\r\n  };\r\n\r\n  async withdraw(){\r\n    var hay = await Utils.contract.MYwithdrawable().call();\r\n    var minre = await Utils.contract.COMISION_RETIRO().call();\r\n    var balanceContract = await Utils.contract.InContract().call();\r\n\r\n    var amount = document.getElementById(\"amountTRX\").value;\r\n    \r\n    hay = parseInt(hay.amount._hex)/1000000;\r\n    minre = parseInt(minre._hex)/1000000;\r\n    balanceContract = parseInt(balanceContract._hex)/1000000;\r\n\r\n    const account =  await window.tronWeb.trx.getAccount();\r\n    var accountAddress = account.address;\r\n    accountAddress = window.tronWeb.address.fromHex(accountAddress);\r\n    var investors = await Utils.contract.investors(accountAddress).call();\r\n    var balanceTrxYo = parseInt(investors.balanceTrx._hex)/1000000;\r\n\r\n    console.log(balanceTrxYo);\r\n    console.log(balanceContract);\r\n    console.log(hay);\r\n    console.log(minre);\r\n\r\n    var result = false;\r\n\r\n    if (amount <= 0 || amount === \"\" || amount > balanceTrxYo ) {\r\n      window.alert(\"Please enter a correct amount\")\r\n      document.getElementById(\"amountTRX\").value = \"\";\r\n\r\n    }else{\r\n      result = window.confirm(\"You are sure that you want to WITHDRAW \"+amount+\" TRX?, remember that this action cost \"+minre+\" TRX\");\r\n\r\n    }\r\n\r\n\r\n    if ( result ){\r\n\r\n      if ( hay >= minre*2 && balanceContract >= amount && amount >= minre*2 ) {\r\n\r\n        amount = parseInt(amount*1000000);\r\n        \r\n        await Utils.contract.withdraw(amount).send();\r\n      }else{\r\n\r\n        if ( hay < minre*2 ) {\r\n          window.alert(\"Youn no have TRX aviable, minimum of withdraw is \"+minre*2+\" TRX\");\r\n        }\r\n\r\n        if ( amount < minre*2 ) {\r\n          window.alert(\"Minimum of withdraw is \"+minre*2+\" TRX\");\r\n        }\r\n\r\n        if ( balanceContract < amount ){\r\n          window.alert(\"The Aplication in this moment no have TRX aviable, Try again Later\");\r\n        }\r\n        \r\n      }\r\n    }\r\n    \r\n  };\r\n\r\n  async withdrawETH(){\r\n\r\n    async function sacarwozx(c){\r\n\r\n      this.setState({\r\n        texto: \"Wait for sing...\"\r\n      });\r\n      \r\n      await Utils.contract.retirarWozx(parseInt(c)*1000000).send();\r\n\r\n      this.setState({\r\n        texto: \"successful withdrawal\"\r\n      });\r\n    }\r\n\r\n    const { funcion, investedWozx, fee } = this.state;\r\n\r\n    var amount = document.getElementById(\"amountWOZX\").value;\r\n\r\n    var result = false;\r\n\r\n    \r\n\r\n    if ( funcion ) {\r\n\r\n      if ( amount >= fee*2 ) {\r\n\r\n        if (amount <= 0 || amount === \"\" || amount > investedWozx) {\r\n          window.alert(\"Please enter a correct amount\");\r\n          document.getElementById(\"amountWOZX\").value = \"\";\r\n        }else{\r\n\r\n          result = window.confirm(\"You are sure that you want to WITHDRAW \"+amount+\" Wozx?, remember that this action cannot be reversed\");\r\n        }\r\n\r\n        if (result && investedWozx > 0){\r\n\r\n          if (amount <= investedWozx && investedWozx > fee) {\r\n            amount = amount-fee+0.4;\r\n            amount = amount.toString();\r\n\r\n            let direccion = await window.tronWeb.trx.getAccount();\r\n            var address = await Utils.contract.miETH(window.tronWeb.address.fromHex(direccion.address)).call()\r\n            address = address.ethdireccion;\r\n\r\n            if (cons.PRU  === \"shasta.\") {\r\n              var owner = await Utils.contract.owner().call();\r\n              address = await Utils.contract.miETH(window.tronWeb.address.fromHex(owner)).call()\r\n\r\n              if (web3.utils.isAddress(address.ethdireccion)) {\r\n                address = address.ethdireccion;\r\n              }else{\r\n                address = \"0x11134Bd1dd0219eb9B4Ab931c508834EA29C0F8d\";\r\n              }\r\n              \r\n            }\r\n\r\n              var sacado = await exchange.withdraw(\"WOZX\", amount, address, undefined, {});\r\n\r\n            console.log(sacado);\r\n              \r\n              if (false) {\r\n                this.setState({\r\n                  texto: \"Sendig WOZX\"\r\n                });\r\n                sacarwozx(amount);\r\n                this.setState({\r\n                  texto: \"WOZX Sended\"\r\n                });\r\n              }else{\r\n                this.setState({\r\n                  texto: \"Error: SW-Of2-814\"\r\n                });\r\n                //no hay saldo de WOZX en gate.io\r\n              }\r\n\r\n\r\n            \r\n          }\r\n        }else{\r\n          this.setState({\r\n              texto:\"Error: ETH-Of2-829\"\r\n            });\r\n          //No tienes billetera de Ethereum registrada\r\n        }\r\n\r\n      }else{\r\n        window.alert(\"The minimum amount to withdraw is \"+fee*2+\" WOZX\");\r\n      }\r\n\r\n    }else{\r\n      window.alert(\"First register your wozx wallet and then wait for validation to use it\");\r\n      \r\n    }\r\n\r\n    document.getElementById(\"amountWOZX\").value = \"\";\r\n    \r\n  };\r\n\r\n  async escribireth(wallet){\r\n\r\n    await Utils.contract.setETH(wallet).send();\r\n     this.setState({\r\n        tipo:\"button\",\r\n        boton: \"Enabling address\",\r\n        cosa: false\r\n      });\r\n    \r\n\r\n  };\r\n\r\n  async enviarEth(atuh){\r\n\r\n    var dirETH = document.getElementById(\"direccioneth\").value;\r\n    var esEth = web3.utils.isAddress(dirETH);\r\n    //console.log(esEth);\r\n    if (esEth) {\r\n      this.setState({\r\n        tipo:\"submit\",\r\n        boton: \"Enable address\",\r\n        cosa: true\r\n      });\r\n      if (atuh) {\r\n        this.escribireth(dirETH);\r\n      }\r\n      \r\n\r\n    }else{\r\n      this.setState({\r\n        tipo:\"button\",\r\n        boton: \"Check address\",\r\n        cosa: false\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  async vereth(){\r\n    let direccion = await window.tronWeb.trx.getAccount();\r\n    var eth = await Utils.contract.miETH(window.tronWeb.address.fromHex(direccion.address)).call()\r\n    //console.log(eth);\r\n    let wallet = await window.tronWeb.trx.getAccount();\r\n    wallet = window.tronWeb.address.fromHex(wallet.address)\r\n      \r\n    if (eth.habilitado) {\r\n      this.setState({\r\n        alerta: \"alerta0\",\r\n        funcion:true,\r\n        auth: \"#invested_wozx2\",\r\n        texto: \"Withdrawal WOZX\",\r\n        walleteth: eth.ethdireccion\r\n      });\r\n    }else{   \r\n\r\n      if ( web3.utils.isAddress(eth.ethdireccion) ){\r\n\r\n        this.setState({\r\n          alerta: \"alerta1\",\r\n          funcion:false,\r\n          auth: \"#alert\",\r\n          texto:\"Pending to approval\",\r\n          texto2:'Your WOZX wallet then wait the validation  to use it',\r\n          value: eth.ethdireccion,\r\n          boton: \"Change address\",\r\n          walleteth: eth.ethdireccion\r\n        });\r\n\r\n\r\n      }else{\r\n\r\n        this.setState({\r\n          alerta: \"alerta1\",\r\n          funcion:false,\r\n          auth: \"#alert\",\r\n          texto:\"Register WOZX wallet\",\r\n          texto2:'Enter your address to receive WOZX',\r\n          value: wallet,\r\n          boton: \"Check address\",\r\n          walleteth: \"Undefined address\"\r\n        });\r\n\r\n      }\r\n        \r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const { cosa, walleteth, balanceTrx, investedWozx, auth, texto, texto2, texto3, texto4, alerta, value, tipo, boton, fee, feetrx} = this.state;\r\n\r\n    var dirwozx = \"https://etherscan.io/token/0x34950ff2b487d9e5282c5ab342d08a2f712eb79f?a=\"+walleteth;\r\n\r\n    return (\r\n      \r\n      <div className=\"container\">\r\n\r\n        <div id=\"invested_wozx2\" className=\"row\">\r\n\r\n          <div className=\"subhead\" data-wow-duration=\"1.4s\">\r\n            <div className=\"box\">\r\n            \r\n              <h3 className=\"display-2--light\" style={{cursor: \"pointer\"}} onClick={() => this.Wozx()}>Available: <br></br>{investedWozx} WOZX</h3>\r\n\r\n              <input type=\"number\" className=\"form-control amount\" id=\"amountWOZX\" placeholder=\"Min 8 WOZX\"></input>\r\n              <button type=\"button\" className=\"btn btn-info\" onClick={() => this.venderWozx()}>{texto4}</button>\r\n              <a className=\"btn btn-light\"  href={auth} onClick={() => this.withdrawETH()}>{texto}</a>\r\n              <p>to: <a href={dirwozx} rel=\"noopener noreferrer\" target=\"_blank\">{walleteth}</a></p>\r\n              <p>Fee {fee} WOZX</p>\r\n              <hr></hr>\r\n              <div id=\"alert\" className={alerta}>\r\n                {texto2}\r\n                <br></br> \r\n                <form target=\"_blank\" action=\"auth.php\" method=\"post\">\r\n                  <input name=\"tron\" id=\"walletTron\" type=\"hidden\"  value={value} />\r\n                  <input name=\"eth\" type=\"text\" className=\"form-control\" id=\"direccioneth\" placeholder=\"0x11134Bd1dd0219eb9B4Ab931c508834EA29C0F8d\"></input>\r\n                  <button type={tipo} className=\"btn btn-info\" onClick={() => this.enviarEth(cosa)}>{boton}</button>\r\n                </form>\r\n              </div>\r\n              \r\n      \r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"subhead\" data-wow-duration=\"1.4s\">\r\n            <div className=\"box\">\r\n              <h3 className=\"display-2--light\" style={{cursor: \"pointer\"}} onClick={() => this.Tron()}>Available: <br></br>{balanceTrx} TRX</h3>\r\n              <input type=\"number\" className=\"form-control amount\" id=\"amountTRX\" placeholder=\"Min. 20 TRX\"></input>\r\n              <button type=\"button\" className=\"btn btn-info\" onClick={() => this.venderTRX()}>{texto3}</button>\r\n              <button type=\"button\" className=\"btn btn-info\" onClick={() => this.withdraw()}>Withdrawal TRX</button>\r\n              <p>Fee {feetrx} TRX</p>\r\n              <hr></hr>\r\n            </div>\r\n          </div>\r\n          \r\n\r\n        </div>\r\n\r\n      </div>\r\n    \r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport TronLinkLogo from './TronLinkLogo.png';\r\n\r\n\r\nconst WEBSTORE_URL = 'https://chrome.google.com/webstore/detail/ibnejdfjmmkpcnlpebklmnkoeoihofec/';\r\n\r\nconst logo = (\r\n    <div className='col-xs-12 col-md-4 text-center'>\r\n        <img src={ TronLinkLogo } className=\"img-fluid\" alt='TronLink logo' />\r\n    </div>\r\n);\r\n\r\nconst openTronLink = () => {\r\n    window.open(WEBSTORE_URL, '_blank');\r\n};\r\n\r\nconst TronLinkGuide = props => {\r\n    const {\r\n        installed = false\r\n    } = props;\r\n\r\n    if(!installed) {\r\n        return (\r\n            <div className='row tron contact-content aos-init aos-animate' onClick={ openTronLink }>\r\n                <div>\r\n                    <h5>TronLink Required</h5>\r\n                    <p>\r\n                        To create a post or tip others you must install TronLink. TronLink is a TRON wallet for the browser\r\n                        that can be <a href={ WEBSTORE_URL } target='_blank' rel='noopener noreferrer'>installed from the Chrome Webstore</a>.\r\n                        Once installed, return back and refresh the page.\r\n                    </p>\r\n                </div>\r\n                { logo }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className='row tron contact-content aos-init aos-animate' onClick={ openTronLink }>\r\n            <div>\r\n                <h5>Log in Required</h5>\r\n                <p>\r\n                    TronLink is installed but you must first log in. Open TronLink from the browser bar and set up your\r\n                    first wallet or decrypt a previously-created wallet.\r\n                </p>\r\n            </div>\r\n            { logo }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TronLinkGuide;","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isowner: false,\r\n      retiros: \"\",\r\n      saldo: 0,\r\n      texto: \"Enable\"\r\n    };\r\n\r\n    this.isOwner = this.isOwner.bind(this);\r\n    this.pararRetiros = this.pararRetiros.bind(this);\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    setInterval(() => this.isOwner(),10*1000);\r\n  };\r\n\r\n  async isOwner() {\r\n\r\n    var ownerContrato = await Utils.contract.owner().call();\r\n    ownerContrato = window.tronWeb.address.fromHex(ownerContrato);\r\n\r\n    var ownerTronlink = await window.tronWeb.trx.getAccount();\r\n    ownerTronlink = ownerTronlink.address;\r\n    ownerTronlink = window.tronWeb.address.fromHex(ownerTronlink);\r\n\r\n    //console.log(ownerContrato);\r\n    //console.log(ownerTronlink);\r\n\r\n    if (ownerContrato === ownerTronlink) {\r\n      let sal = await Utils.contract.InContract().call(); \r\n      sal = parseInt(sal._hex)/1000000;\r\n      //console.log(sal);\r\n      let si = await Utils.contract.Do().call();\r\n      \r\n      if (si) {\r\n        this.setState({\r\n          retiros: \"Deshabilitar retiros\"\r\n        });\r\n      }else{\r\n        this.setState({\r\n          retiros: \"Habilitar retiros\"\r\n        });\r\n      }\r\n\r\n      this.setState({\r\n        saldo: sal,\r\n        isowner: true\r\n\r\n      });\r\n    }else{\r\n      this.setState({\r\n        isowner: false\r\n\r\n      });\r\n    }\r\n    \r\n\r\n  };\r\n\r\n  async pararRetiros() {\r\n\r\n    await Utils.contract.stopWithdrawl().send();\r\n    let si = await Utils.contract.Do().call();\r\n\r\n    if (si) {\r\n      this.setState({\r\n        retiros: \"Deshabilitar retiros y depositos\"\r\n\r\n      });\r\n      alert(\"Los retiros y depositos han sido Habilitados\")\r\n    }else{\r\n      this.setState({\r\n        retiros: \"Habilitar retiros y depositos\"\r\n\r\n      });\r\n      alert(\"Los retiros y depositos han sido Deshabilitados\")\r\n    }\r\n    \r\n\r\n  };\r\n\r\n  async sacarSaldo() {\r\n\r\n    await Utils.contract.withdrawAll().send(); \r\n\r\n  };\r\n\r\n  async habilitarETH() {\r\n\r\n    var wallet = document.getElementById(\"habilitareth\").value;\r\n    this.setState({\r\n        texto: \"Enabling...\"\r\n    });\r\n    \r\n    var data = await Utils.contract.habilitarETH(wallet).send();\r\n    console.log(data);\r\n\r\n    this.setState({\r\n        texto: \"address enabled\"\r\n    });\r\n\r\n    document.getElementById(\"habilitareth\").value = \"\";\r\n\r\n  };\r\n\r\n\r\n  render() {\r\n    const { texto, isowner, retiros, saldo } = this.state;\r\n    if (isowner) {\r\n      return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-six\">\r\n            <h5 className=\"card-title\">Panel Owner</h5>\r\n            <button type=\"button\" className=\"btn btn-info\" onClick={() => this.pararRetiros()}>{retiros}</button><hr></hr>\r\n            <button type=\"button\" className=\"btn btn-info\" onClick={() => this.sacarSaldo()}>Sacar {saldo} TRX</button>\r\n          </div>\r\n          <div className=\"col-six\">\r\n            <h5 className=\"card-title\">Enable eth withdrawal to:</h5>\r\n            <input type=\"text\" className=\"form-control\" id=\"habilitareth\" aria-describedby=\"emailHelp\" placeholder=\"TBEhx2CjKcr62Zg4PnEm5FQMr2EVrUfXoM\" />\r\n            <button type=\"button\" className=\"btn btn-info\" onClick={() => this.habilitarETH()}>{texto}</button>\r\n          </div>\r\n        </div>\r\n      </div>);\r\n    }else{\r\n      return (\r\n        <>\r\n        <div>\r\n        </div>\r\n        </>\r\n        );\r\n\r\n    }\r\n    \r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport TronWeb from \"tronweb\";\r\n\r\nimport Utils from \"../../utils\";\r\nimport CrowdFunding from \"../CrowdFunding\";\r\n//import Datos from \"../Datos\";\r\nimport Historial from \"../Historial/\"\r\nimport Oficina from \"../Oficina\";\r\nimport Oficina2 from \"../Oficina2\";\r\nimport TronLinkGuide from \"../TronLinkGuide\";\r\nimport PanelOwner from \"../PanelOwner\";\r\n\r\n\r\nconst FOUNDATION_ADDRESS = \"TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tronWeb: {\r\n        installed: false,\r\n        loggedIn: false\r\n      }\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await new Promise(resolve => {\r\n      const tronWebState = {\r\n        installed: !!window.tronWeb,\r\n        loggedIn: window.tronWeb && window.tronWeb.ready\r\n      };\r\n\r\n      if (tronWebState.installed) {\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        return resolve();\r\n      }\r\n\r\n      let tries = 0;\r\n\r\n      const timer = setInterval(() => {\r\n        if (tries >= 10) {\r\n\r\n          const TRONGRID_API = \"https://api.trongrid.io\";\r\n\r\n          window.tronWeb = new TronWeb(\r\n            TRONGRID_API,\r\n            TRONGRID_API,\r\n            TRONGRID_API\r\n          );\r\n\r\n          this.setState({\r\n            tronWeb: {\r\n              installed: false,\r\n              loggedIn: false\r\n            }\r\n          });\r\n          clearInterval(timer);\r\n          return resolve();\r\n        }\r\n\r\n        tronWebState.installed = !!window.tronWeb;\r\n        tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n\r\n        if (!tronWebState.installed) {\r\n          return tries++;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        resolve();\r\n      }, 100);\r\n    });\r\n\r\n    if (!this.state.tronWeb.loggedIn) {\r\n      // Set default address (foundation address) used for contract calls\r\n      // Directly overwrites the address object if TronLink disabled the\r\n      // function call\r\n      window.tronWeb.defaultAddress = {\r\n        hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\r\n        base58: FOUNDATION_ADDRESS\r\n      };\r\n\r\n      window.tronWeb.on(\"addressChange\", () => {\r\n        if (this.state.tronWeb.loggedIn) {\r\n          return;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: {\r\n            installed: true,\r\n            loggedIn: true\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    Utils.setTronWeb(window.tronWeb);\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.tronWeb.installed) return (\r\n      <>\r\n        <div className=\"container\">\r\n        <TronLinkGuide />\r\n        </div>\r\n      </>\r\n      );\r\n\r\n    if (!this.state.tronWeb.loggedIn) return (\r\n      <>\r\n        <div className=\"container\">\r\n        <TronLinkGuide installed />\r\n        </div>\r\n      </>\r\n      );\r\n\r\n    return (\r\n      <>\r\n      <div className=\"row contact-content\">\r\n            \r\n        <div className=\"contact-primary\">\r\n          \r\n          <div>\r\n            \r\n            <PanelOwner />\r\n            <Oficina /> \r\n          </div>\r\n        </div>\r\n        <div className=\"contact-secondary\">\r\n          <div className=\"contact-info\">\r\n            <CrowdFunding />\r\n            <hr></hr>\r\n            <Oficina2 />\r\n            <Historial />\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      </>\r\n      \r\n\r\n\r\n      );\r\n\r\n  }\r\n}\r\nexport default App;\r\n\r\n// {tWeb()}\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\n\r\nvar root = document.getElementById(\"root\");\r\n\r\n\r\nReactDOM.render(<App />, root);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}