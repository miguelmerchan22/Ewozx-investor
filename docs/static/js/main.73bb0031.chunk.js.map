{"version":3,"sources":["components/CrowdFunding/index.js","utils/index.js","components/Contract/index.js","cons.js","components/Datos/index.js","components/Oficina/index.js","components/Oficina2/index.js","components/TronLinkGuide/index.js","components/PanelOwner/index.js","components/App/index.js","index.js","components/TronLinkGuide/TronLinkLogo.png"],"names":["amountTrx","utils","tronWeb","contract","setTronWeb","this","setContract","contractAddress","at","ratetrx","ratewozx","cantidadusd","proxyUrl","KEY","cons","SECRET","pry","tronApp","TronWeb2","WozxInvestor","Component","constructor","props","super","state","usdtrx","deposit","bind","rateWozx","comprarWozx","rateTRX","venderTRX","componentDidMount","Utils","window","esTrx","cripto","symbol","header1","fetch","method","headers","then","res","json","data","find","rate","parseFloat","toFixed","toString","catch","error","console","log","document","getElementById","value","body","querystring","stringify","header","hasher","sha512","hmac","hash","finalize","firma","SIGN","cantidadTrx","filledAmount","leftAmount","precioTrx","filledRate","result","esWozx","usd","amount","cantidadWozx","orden","sha3","orderNumber","firma3","loc","location","href","indexOf","getString","split","GET","get","i","l","length","tmp","unescape","decodeURI","sponsor","parseInt","trx","getAccount","account","accountAddress","address","firma2","wallet","firmarTx","send","shouldPollResponse","callValue","render","className","type","id","placeholder","onClick","datos","direccion","link","registered","Investors","Link","withdraw","prueba","setInterval","setState","url","a","mode","cache","credentials","redirect","referrerPolicy","response","postData","mydireccion","fromHex","investors","call","esto","MYwithdrawable","My","balanceTrx","_hex","withdrawnTrx","investedWozx","withdrawnWozx","mywithdrawableWozx","style","text","estado","texto1","texto2","texto3","balanceRef","totalRef","invested","paidAt","my","withdrawn","data-wow-duration","WEBSTORE_URL","logo","src","TronLinkLogo","alt","openTronLink","open","TronLinkGuide","installed","target","rel","isowner","retiros","saldo","isOwner","pararRetiros","consultarSaldo","Do","owner","ownerContrato","ownerTronlink","withdraw000","alert","sacarSaldo","withdraw001","InContract","sal","App","loggedIn","Promise","resolve","tronWebState","ready","tries","timer","TronWeb","clearInterval","defaultAddress","hex","toHex","base58","on","root","ReactDOM","module","exports"],"mappings":"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","file":"static/js/main.73bb0031.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nimport cons from \"../../cons.js\";\r\n\r\nimport querystring from 'querystring';\r\nimport sha512 from 'sha512';\r\nimport TronWeb2 from 'tronweb';\r\n\r\nvar amountTrx;\r\nvar ratetrx = \"\";\r\nvar ratewozx = \"\";\r\nvar cantidadusd = \"\";\r\n\r\nvar descuento = 0.002 //+ 0.45;//comisión de Gate.io ->|0.002 + 0.45|<- descuento plataforma WozxInvest\r\nvar tantoTrx = 0.001;// para que el TRX se Venda de inmediato\r\nvar tantoWozx = 0.02;// para que el WOZX se Compre de inmediato\r\n\r\nvar proxyUrl = 'https://proxy-wozx.herokuapp.com/';\r\n\r\nvar AccessOrigin = '*';\r\n\r\nconst KEY  = cons.AK;\r\nconst SECRET  = cons.SK;\r\nconst pry = cons.WO;\r\n\r\n\r\nconst TRONGRID_API = \"https://api.shasta.trongrid.io\";\r\n\r\nconst tronApp = new TronWeb2(\r\n  TRONGRID_API,\r\n  TRONGRID_API,\r\n  TRONGRID_API,\r\n  pry\r\n);\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      amountTrx: \"\",\r\n      usdtrx: \"\",\r\n\r\n    }\r\n\r\n    this.deposit = this.deposit.bind(this);\r\n    this.rateWozx = this.rateWozx.bind(this);\r\n    this.comprarWozx = this.comprarWozx.bind(this);\r\n    this.rateTRX = this.rateTRX.bind(this);\r\n    this.venderTRX = this.venderTRX.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n  };\r\n\r\n\r\n  async rateTRX(){\r\n\r\n    function esTrx(cripto) {\r\n          return cripto.symbol === 'TRX';\r\n      }\r\n\r\n    const USER_AGENT = 'stevenSTC';\r\n    let header1 = {\r\n      'Access-Control-Allow-Origin' :AccessOrigin,\r\n      'User-Agent' : USER_AGENT,\r\n      'Access-Control-Allow-Headers': 'Origin, X-Requested-With',\r\n      'mode':'no-cors'\r\n    };\r\n    await fetch(proxyUrl+'https://data.gateio.life/api2/1/marketlist',{method: 'GET', headers: header1})\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      //console.log(data);\r\n      ratetrx = data.data.find(esTrx).rate; \r\n      ratetrx = parseFloat(ratetrx).toFixed(6);\r\n      ratetrx = ratetrx-ratetrx*tantoTrx;\r\n      ratetrx = ratetrx.toString();\r\n      //console.log(ratetrx);\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n\r\n\r\n  }\r\n\r\n  async venderTRX(){    \r\n\r\n    await this.rateTRX();\r\n    \r\n    amountTrx = document.getElementById(\"amount\").value;\r\n    let currencyPair = \"trx_usdt\";\r\n\r\n    let body = querystring.stringify({'currencyPair':currencyPair,'rate':ratetrx,'amount':amountTrx});\r\n\r\n    let header = {\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    };\r\n\r\n    var hasher = sha512.hmac(SECRET);\r\n    var hash = hasher.finalize(body);\r\n    var firma = hash.toString('hex');\r\n\r\n    header.KEY = KEY;\r\n    header.SIGN = firma;\r\n    await fetch(proxyUrl+'https://api.gateio.life/api2/1/private/sell/',{method: 'POST', headers: header, body:body})\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      //console.log(data);\r\n      var cantidadTrx=parseFloat(data.filledAmount);\r\n      var cantidadTrx2=parseFloat(data.leftAmount);\r\n      cantidadTrx=cantidadTrx+cantidadTrx2;\r\n      var precioTrx=parseFloat(data.filledRate);\r\n      cantidadusd = precioTrx*cantidadTrx-precioTrx*cantidadTrx*descuento;\r\n      //console.log(cantidadusd);\r\n\r\n      if (data.result === \"true\") {\r\n        this.comprarWozx(cantidadusd);\r\n      }\r\n\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n\r\n\r\n    \r\n\r\n    \r\n  }\r\n\r\n  async rateWozx(){\r\n\r\n    function esWozx(cripto) {\r\n          return cripto.symbol === 'WOZX';\r\n      }\r\n\r\n    const USER_AGENT = 'stevenSTC';\r\n    let header1 = {\r\n      'Access-Control-Allow-Origin' :AccessOrigin,\r\n      'User-Agent' : USER_AGENT,\r\n      'Access-Control-Allow-Headers': 'Origin, X-Requested-With'\r\n    };\r\n    await fetch(proxyUrl+'https://data.gateio.life/api2/1/marketlist',{method: 'GET', headers: header1})\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      //console.log(data);\r\n      ratewozx = data.data.find(esWozx).rate; \r\n      ratewozx = parseFloat(ratewozx);\r\n      ratewozx = ratewozx+ratewozx*tantoWozx;\r\n      ratewozx = ratewozx.toString();\r\n      //console.log(ratewozx);\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n\r\n\r\n  }\r\n\r\n  async comprarWozx(usd){    \r\n    \r\n    await this.rateWozx();\r\n    \r\n    let amount = usd/parseFloat(ratewozx).toFixed(6);\r\n    //console.log(parseFloat(amount.toFixed(6)));\r\n    amount = amount.toString();\r\n    let currencyPair = \"wozx_usdt\";\r\n\r\n    let body = querystring.stringify({'currencyPair':currencyPair,'rate':ratewozx,'amount':amount});\r\n\r\n    let header = {'Content-Type': 'application/x-www-form-urlencoded'};\r\n\r\n    var hasher = sha512.hmac(SECRET);\r\n    var hash = hasher.finalize(body);\r\n    var firma = hash.toString('hex');\r\n\r\n    header.KEY = KEY;\r\n    header.SIGN = firma;\r\n    await fetch(proxyUrl+'https://api.gateio.life/api2/1/private/buy/',{method: 'POST', headers: header, body:body })\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      //console.log(data);\r\n\r\n      var cantidadWozx=parseFloat(data.filledAmount);\r\n      var cantidadWozx2=parseFloat(data.leftAmount);\r\n      cantidadWozx=cantidadWozx+cantidadWozx2;\r\n\r\n      console.log(cantidadWozx)\r\n      var orden = window.tronWeb.sha3(data.orderNumber.toString());\r\n      //console.log(orden);\r\n      if (data.result === \"true\") {\r\n        this.deposit(cantidadWozx, orden);\r\n      }\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n    \r\n    \r\n    \r\n  }\r\n\r\n\r\n  async deposit(orden, firma3) {\r\n\r\n    var loc = document.location.href;\r\n    if(loc.indexOf('?')>0){\r\n        var getString = loc.split('?')[1];\r\n        var GET = getString.split('&');\r\n        var get = {};\r\n        for(var i = 0, l = GET.length; i < l; i++){\r\n            var tmp = GET[i].split('=');\r\n            get[tmp[0]] = unescape(decodeURI(tmp[1]));\r\n        }\r\n        \r\n        if (get['ref']) {\r\n          document.getElementById('sponsor').value = get['ref'];            \r\n        }else{\r\n\r\n           document.getElementById('sponsor').value = 'T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb';\r\n        }\r\n        \r\n        \r\n    }else{\r\n      \r\n        document.getElementById('sponsor').value = 'T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb'; \r\n    }\r\n\r\n    let amount = document.getElementById(\"amount\").value;\r\n    let sponsor = document.getElementById(\"sponsor\").value;\r\n    \r\n\r\n    document.getElementById(\"amount\").value = \"\";\r\n\r\n    orden = orden * 1000000;\r\n    orden = parseInt(orden);\r\n    //console.log(orden);\r\n    var firma = await window.tronWeb.sha3(orden.toString())\r\n\r\n    const account =  await window.tronWeb.trx.getAccount();\r\n    const accountAddress = account.address;\r\n    var firma2 = await window.tronWeb.sha3(accountAddress)\r\n    var wallet = firma2;\r\n    //console.log(firma2);\r\n\r\n    let contract = await tronApp.contract().at(contractAddress);//direccion del contrato\r\n\r\n    await contract.firmarTx(firma3).send();\r\n  \r\n    await Utils.contract.deposit(orden, orden.toString(), wallet, sponsor, firma, firma2, firma3).send({\r\n      shouldPollResponse: true,\r\n      callValue: amount * 1000000 // converted to SUN\r\n    });\r\n\r\n    \r\n  };\r\n\r\n  render() {\r\n    \r\n    return (\r\n      \r\n      <div className=\"card wow bounceInUp\">\r\n        <div className=\"card-body\">\r\n        <header className=\"section-header\">\r\n              <h3>Has tu inversión</h3>\r\n          </header>\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <input type=\"text\" className=\"form-control\" id=\"amount\" placeholder=\"Min. deposit 3000 TRX\"></input>\r\n                <p className=\"card-text\">Debes tener ~10 TRX para hacer la transacción</p>\r\n              </div>\r\n            </form>\r\n          <a className=\"btn btn-light\"  href=\"#invested_wozx\" onClick={() => this.venderTRX()}>Invertir</a>\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n","const utils = {\r\n  tronWeb: false,\r\n  contract: false,\r\n\r\n  setTronWeb(tronWeb) {\r\n    this.tronWeb = tronWeb;\r\n  },\r\n\r\n  async setContract(tronWeb, contractAddress) {\r\n    this.contract = await tronWeb.contract().at(contractAddress);\r\n  }\r\n};\r\n\r\nexport default utils;\r\n","\r\n/// La direccion de su contrato acá ///////////////////////////////////\r\nconst contractAddress = \"TAbPpKea9hoTkbrP4VwuDNfJPZk8vRen8R\";\r\n\r\nexport default contractAddress;","const AK = \"2E37A3CE-63DF-4BA1-8C4F-13A82E27AC59\";\r\nconst SK = \"624620b9b7c29ee6704288f27c3e60b41e9fa0e5415cf1dbae296951e091fc48\";\r\nconst WO = \"d57bd5da960638ee6067402d9208e2fb34707b0a1480bf32fcecb3741a75e2a5\";\r\n\r\nexport default {AK, SK, WO};","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      totalInvestors: 0,\r\n      totalInvested: 0,\r\n      totalRefRewards: 0\r\n    };\r\n\r\n    this.totalInvestors = this.totalInvestors.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    setInterval(() => this.totalInvestors(),1000);\r\n  };\r\n\r\n  async totalInvestors() {\r\n\r\n    let esto = await Utils.contract.setstate().call();\r\n    //console.log(esto);\r\n    this.setState({\r\n      totalInvestors: parseInt(esto.Investors._hex),\r\n      totalInvested: parseInt(esto.Invested._hex)/1000000,\r\n      totalRefRewards: parseInt(esto.RefRewards._hex)/1000000\r\n\r\n    });\r\n\r\n  };\r\n\r\n  render() {\r\n    const { totalInvestors, totalInvested, totalRefRewards } = this.state;\r\n\r\n    return (\r\n      <div className=\"row counters\">\r\n            \r\n        <div className=\"col-md-12  text-center\">\r\n          <span data-toggle=\"counter-up\">{totalInvestors}</span>\r\n          <p>Inversores Globales</p>\r\n        </div>\r\n\r\n        <div className=\"col-md-12 w-100 text-center\">\r\n          <span data-toggle=\"counter-up\">{totalInvested} TRX</span>\r\n          <p>Invertido Global</p>\r\n        </div>\r\n\r\n        <div className=\"col-md-12 w-100 text-center\">\r\n          <span data-toggle=\"counter-up\">{totalRefRewards} TRX</span>\r\n          <p>Recompensas  Globales Referidos</p>\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nimport cons from \"../../cons.js\";\r\n\r\nimport querystring from 'querystring';\r\nimport sha512 from 'sha512';\r\n\r\nvar ratetrx = \"\";\r\nvar ratewozx = \"\";\r\nvar proxyUrl = 'https://proxy-wozx.herokuapp.com/';\r\n\r\nconst KEY  = cons.AK;\r\nconst SECRET  = cons.SK;\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      ratetrx: \"\",\r\n      ratewozx: \"\",\r\n      datos: {},\r\n      direccion: \"\",\r\n      link: \"Haz una inversión para obtener el LINK de referido\",\r\n      registered: false\r\n\r\n    };\r\n\r\n    this.Investors = this.Investors.bind(this);\r\n    this.Link = this.Link.bind(this);\r\n    this.withdraw = this.withdraw.bind(this);\r\n    this.rateWozx = this.rateWozx.bind(this);\r\n    this.comprarWozx = this.comprarWozx.bind(this);\r\n    this.rateTRX = this.rateTRX.bind(this);\r\n    this.venderTRX = this.venderTRX.bind(this);\r\n    this.prueba = this.prueba.bind(this);\r\n    \r\n    \r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    this.Investors();\r\n    this.Link();\r\n    setInterval(() => this.Investors(),10000);\r\n    setInterval(() => this.Link(),10000);\r\n  };\r\n\r\n  async rateTRX(){\r\n\r\n    function esTrx(cripto) {\r\n          return cripto.symbol === 'TRX';\r\n      }\r\n\r\n    const USER_AGENT = 'stevenSTC';\r\n    let header1 = {\r\n      'Access-Control-Allow-Origin' :'*',\r\n      'User-Agent' : USER_AGENT,\r\n      'Access-Control-Allow-Headers': 'Origin, X-Requested-With'\r\n    };\r\n    await fetch(proxyUrl+'https://data.gateio.life/api2/1/marketlist',{method: 'GET', headers: header1})\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      //console.log(data);\r\n      ratetrx = data.data.find(esTrx).rate; \r\n      ratetrx = parseFloat(ratetrx).toFixed(6);\r\n      ratetrx = ratetrx-ratetrx*0.01;\r\n      ratetrx = ratetrx.toString();\r\n      //console.log(ratetrx);\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n\r\n    this.setState({\r\n      ratetrx: ratetrx\r\n    });\r\n\r\n  }\r\n\r\n  async venderTRX(){    \r\n\r\n    await this.rateTRX();\r\n    \r\n    let amount = \"40\";\r\n    let currencyPair = \"trx_usdt\";\r\n\r\n    let body = querystring.stringify({'currencyPair':currencyPair,'rate':ratetrx,'amount':amount});\r\n\r\n    let header = {'Content-Type': 'application/x-www-form-urlencoded'};\r\n\r\n    var hasher = sha512.hmac(SECRET);\r\n    var hash = hasher.finalize(body);\r\n    var firma = hash.toString('hex');\r\n\r\n    header.KEY = KEY;\r\n    header.SIGN = firma;\r\n    await fetch(proxyUrl+'https://api.gateio.life/api2/1/private/sell/',{method: 'POST', headers: header, body:body })\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      console.log(data);\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n    \r\n\r\n  }\r\n\r\n  async rateWozx(){\r\n\r\n    function esWozx(cripto) {\r\n          return cripto.symbol === 'WOZX';\r\n      }\r\n\r\n    const USER_AGENT = 'stevenSTC';\r\n    let header1 = {\r\n      'Access-Control-Allow-Origin' :'*',\r\n      'User-Agent' : USER_AGENT,\r\n      'Access-Control-Allow-Headers': 'Origin, X-Requested-With'\r\n    };\r\n    await fetch(proxyUrl+'https://data.gateio.life/api2/1/marketlist',{method: 'GET', headers: header1})\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      //console.log(data);\r\n      ratewozx = data.data.find(esWozx).rate; \r\n      ratewozx = parseFloat(ratewozx).toFixed(6);\r\n      ratewozx = ratewozx+ratewozx*0.01;\r\n      ratewozx = ratewozx.toString();\r\n      //console.log(ratewozx);\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n\r\n    this.setState({\r\n      ratewozx: ratewozx\r\n    });\r\n\r\n  }\r\n\r\n  async comprarWozx(){    \r\n\r\n    await this.rateWozx();\r\n    \r\n    let amount = \"1\";\r\n    let currencyPair = \"wozx_usdt\";\r\n\r\n    let body = querystring.stringify({'currencyPair':currencyPair,'rate':ratewozx,'amount':amount});\r\n\r\n    let header = {'Content-Type': 'application/x-www-form-urlencoded'};\r\n\r\n    var hasher = sha512.hmac(SECRET);\r\n    var hash = hasher.finalize(body);\r\n    var firma = hash.toString('hex');\r\n\r\n    header.KEY = KEY;\r\n    header.SIGN = firma;\r\n    await fetch(proxyUrl+'https://api.gateio.life/api2/1/private/buy/',{method: 'POST', headers: header, body:body })\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      console.log(data);\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n    \r\n\r\n  }\r\n\r\n  async prueba(){ \r\n  /* \r\n    await request(\r\n      { url: 'https://data.gateio.life/api2/1/marketlist' },\r\n      (error, response, body) => {\r\n        if (error || response.statusCode !== 200) {\r\n          console.log(error)\r\n        }\r\n\r\n        console.log(response);\r\n        console.log(body);\r\n        //JSON.parse(body)\r\n\r\n        \r\n      }\r\n    )*/\r\n\r\n    // Ejemplo implementando el metodo POST:\r\nasync function postData(url = '', data = {}) {\r\n  // Opciones por defecto estan marcadas con un *\r\n  const response = await fetch(url, {\r\n    method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n    mode: 'cors', // no-cors, *cors, same-origin\r\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n    credentials: 'same-origin', // include, *same-origin, omit\r\n    headers: {\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n      'Content-Type': 'application/x-www-form-urlencoded',\r\n      'Accept-Language' : 'x-requested-with'\r\n      // 'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n    redirect: 'follow', // manual, *follow, error\r\n    referrerPolicy: 'origin', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n    //body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n  });\r\n  return response.json(); // parses JSON response into native JavaScript objects\r\n}\r\n\r\npostData('https://data.gateio.life/api2/1/marketlist', {})\r\n  .then(data => {\r\n    console.log(data); // JSON data parsed by `data.json()` call\r\n  });\r\n  }\r\n\r\n  async Link() {\r\n    const {registered} = this.state;\r\n    if(registered){\r\n\r\n      let loc = document.location.href;\r\n      if(loc.indexOf('?')>0){\r\n        loc = loc.split('?')[0]\r\n      }\r\n      let mydireccion = await window.tronWeb.trx.getAccount();\r\n      mydireccion = window.tronWeb.address.fromHex(mydireccion.address)\r\n      mydireccion = loc+'?ref='+mydireccion;\r\n      this.setState({\r\n        link: mydireccion,\r\n      });\r\n    }else{\r\n      this.setState({\r\n        link: \"Haz una inversión para obtener el LINK de referido\",\r\n      });\r\n    }\r\n  }\r\n    \r\n\r\n  async Investors() {\r\n\r\n    let direccion = await window.tronWeb.trx.getAccount();\r\n    let esto = await Utils.contract.investors(direccion.address).call();\r\n    let My = await Utils.contract.MYwithdrawable().call();\r\n    //console.log(esto);\r\n    //console.log(My);\r\n    this.setState({\r\n      direccion: window.tronWeb.address.fromHex(direccion.address),\r\n      registered: esto.registered,\r\n      balanceTrx: parseInt(esto.balanceTrx._hex)/1000000,\r\n      withdrawnTrx: parseInt(esto.withdrawnTrx._hex)/1000000,\r\n      investedWozx: parseInt(esto.investedWozx._hex)/1000000,\r\n      withdrawnWozx: parseInt(esto.withdrawnWozx._hex)/1000000,\r\n      mywithdrawableWozx: parseInt(My.amount._hex)/1000000\r\n    });\r\n\r\n  };\r\n\r\n  async withdraw(){\r\n    await Utils.contract.withdraw().send()\r\n  };\r\n\r\n\r\n  render() {\r\n    const { balanceTrx, withdrawnTrx, investedWozx,  withdrawnWozx , mywithdrawableWozx , direccion, link} = this.state;\r\n\r\n    return (\r\n      \r\n      <div className=\"container\">\r\n\r\n        <header style={{'text-align': 'center'}} className=\"section-header\">\r\n          <h3 className=\"white\"><span style={{'font-weight': 'bold'}}>\r\n          My office:</span> <br></br>\r\n          <span style={{'font-size': '18px'}}>{direccion}</span></h3><br></br>\r\n          <h3 className=\"white\" style={{'font-weight': 'bold'}}>Link de referido:</h3>\r\n          <h6 className=\"white\" ><a href={link}>{link}</a>&nbsp;\r\n          <CopyToClipboard text={link}>\r\n            <button type=\"button\" className=\"btn btn-info\">Copy to clipboard</button>\r\n          </CopyToClipboard>\r\n          </h6>\r\n          <hr></hr>\r\n          \r\n        </header>\r\n\r\n        <div className=\"centrartexto\">\r\n\r\n          <div>\r\n          \r\n              <h1 className=\"subhead\">Balance</h1>\r\n              <h3 className=\"display-2--light\">{investedWozx} WOZX</h3>\r\n              <hr></hr>\r\n            \r\n          </div>\r\n\r\n          <div >\r\n            \r\n              <h1 className=\"subhead\">Withdrawn</h1>\r\n              <h3 className=\"display-2--light\">{withdrawnWozx} WOZX</h3>\r\n              <hr></hr>\r\n            \r\n          </div> \r\n\r\n          <div>\r\n            \r\n              <h1 className=\"subhead\">Balance</h1>\r\n              <h3 className=\"display-2--light\">{balanceTrx} TRX</h3>\r\n              <hr></hr>\r\n            \r\n          </div>\r\n\r\n          <div >\r\n            \r\n              <h1 className=\"subhead\">Withdrawn</h1>\r\n              <h3 className=\"display-2--light\">{withdrawnTrx} TRX</h3>\r\n              <hr></hr>\r\n            \r\n          </div>\r\n          \r\n        </div>\r\n\r\n      </div>\r\n    \r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nimport cons from \"../../cons.js\";\r\n\r\nimport querystring from 'querystring';\r\nimport sha512 from 'sha512';\r\n\r\nvar ratetrx = \"\";\r\nvar ratewozx = \"\";\r\nvar proxyUrl = 'https://proxy-wozx.herokuapp.com/';\r\n\r\nconst KEY  = cons.AK;\r\nconst SECRET  = cons.SK;\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      ratetrx: \"\",\r\n      estado:{\r\n        result:false,\r\n        texto1:\"cargando.\",\r\n        texto2:\"cargando..\",\r\n        texto3:\"cargando...\",\r\n      },\r\n      ratewozx: \"\",\r\n      datos: {},\r\n      direccion: \"\",\r\n      link: \"Haz una inversión para obtener el LINK de referido\",\r\n      registered: false,\r\n      balanceRef: 0,\r\n      totalRef: 0,\r\n      invested: 0,\r\n      paidAt: 0,\r\n      my: 0,\r\n      withdrawn: 0\r\n\r\n    };\r\n\r\n    this.Investors = this.Investors.bind(this);\r\n    this.Link = this.Link.bind(this);\r\n    this.withdraw = this.withdraw.bind(this);\r\n    this.rateWozx = this.rateWozx.bind(this);\r\n    this.comprarWozx = this.comprarWozx.bind(this);\r\n    this.rateTRX = this.rateTRX.bind(this);\r\n    this.venderTRX = this.venderTRX.bind(this);\r\n    this.prueba = this.prueba.bind(this);\r\n    \r\n    \r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    this.Investors();\r\n    this.Link();\r\n    setInterval(() => this.Investors(),10000);\r\n    setInterval(() => this.Link(),10000);\r\n  };\r\n\r\n  async rateTRX(){\r\n\r\n    function esTrx(cripto) {\r\n          return cripto.symbol === 'TRX';\r\n      }\r\n\r\n    const USER_AGENT = 'stevenSTC';\r\n    let header1 = {\r\n      'Access-Control-Allow-Origin' :'*',\r\n      'User-Agent' : USER_AGENT,\r\n      'Access-Control-Allow-Headers': 'Origin, X-Requested-With'\r\n    };\r\n    await fetch(proxyUrl+'https://data.gateio.life/api2/1/marketlist',{method: 'GET', headers: header1})\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      //console.log(data);\r\n      ratetrx = data.data.find(esTrx).rate; \r\n      ratetrx = parseFloat(ratetrx).toFixed(6);\r\n      ratetrx = ratetrx-ratetrx*0.01;\r\n      ratetrx = ratetrx.toString();\r\n      //console.log(ratetrx);\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n\r\n    this.setState({\r\n      ratetrx: ratetrx\r\n    });\r\n\r\n  }\r\n\r\n  async venderTRX(){    \r\n\r\n    await this.rateTRX();\r\n    \r\n    let amount = \"40\";\r\n    let currencyPair = \"trx_usdt\";\r\n\r\n    let body = querystring.stringify({'currencyPair':currencyPair,'rate':ratetrx,'amount':amount});\r\n\r\n    let header = {'Content-Type': 'application/x-www-form-urlencoded'};\r\n\r\n    var hasher = sha512.hmac(SECRET);\r\n    var hash = hasher.finalize(body);\r\n    var firma = hash.toString('hex');\r\n\r\n    header.KEY = KEY;\r\n    header.SIGN = firma;\r\n    await fetch(proxyUrl+'https://api.gateio.life/api2/1/private/sell/',{method: 'POST', headers: header, body:body })\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      console.log(data);\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n    \r\n\r\n  }\r\n\r\n  async rateWozx(){\r\n\r\n    function esWozx(cripto) {\r\n          return cripto.symbol === 'WOZX';\r\n      }\r\n\r\n    const USER_AGENT = 'stevenSTC';\r\n    let header1 = {\r\n      'Access-Control-Allow-Origin' :'*',\r\n      'User-Agent' : USER_AGENT,\r\n      'Access-Control-Allow-Headers': 'Origin, X-Requested-With'\r\n    };\r\n    await fetch(proxyUrl+'https://data.gateio.life/api2/1/marketlist',{method: 'GET', headers: header1})\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      //console.log(data);\r\n      ratewozx = data.data.find(esWozx).rate; \r\n      ratewozx = parseFloat(ratewozx).toFixed(6);\r\n      ratewozx = ratewozx+ratewozx*0.01;\r\n      ratewozx = ratewozx.toString();\r\n      //console.log(ratewozx);\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n\r\n    this.setState({\r\n      ratewozx: ratewozx\r\n    });\r\n\r\n  }\r\n\r\n  async comprarWozx(){    \r\n\r\n    await this.rateWozx();\r\n    \r\n    let amount = \"1\";\r\n    let currencyPair = \"wozx_usdt\";\r\n\r\n    let body = querystring.stringify({'currencyPair':currencyPair,'rate':ratewozx,'amount':amount});\r\n\r\n    let header = {'Content-Type': 'application/x-www-form-urlencoded'};\r\n\r\n    var hasher = sha512.hmac(SECRET);\r\n    var hash = hasher.finalize(body);\r\n    var firma = hash.toString('hex');\r\n\r\n    header.KEY = KEY;\r\n    header.SIGN = firma;\r\n    await fetch(proxyUrl+'https://api.gateio.life/api2/1/private/buy/',{method: 'POST', headers: header, body:body })\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      console.log(data);\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n    \r\n\r\n  }\r\n\r\n  async prueba(){ \r\n  /* \r\n    await request(\r\n      { url: 'https://data.gateio.life/api2/1/marketlist' },\r\n      (error, response, body) => {\r\n        if (error || response.statusCode !== 200) {\r\n          console.log(error)\r\n        }\r\n\r\n        console.log(response);\r\n        console.log(body);\r\n        //JSON.parse(body)\r\n\r\n        \r\n      }\r\n    )*/\r\n\r\n    // Ejemplo implementando el metodo POST:\r\nasync function postData(url = '', data = {}) {\r\n  // Opciones por defecto estan marcadas con un *\r\n  const response = await fetch(url, {\r\n    method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n    mode: 'cors', // no-cors, *cors, same-origin\r\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n    credentials: 'same-origin', // include, *same-origin, omit\r\n    headers: {\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n      'Content-Type': 'application/x-www-form-urlencoded',\r\n      'Accept-Language' : 'x-requested-with'\r\n      // 'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n    redirect: 'follow', // manual, *follow, error\r\n    referrerPolicy: 'origin', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n    //body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n  });\r\n  return response.json(); // parses JSON response into native JavaScript objects\r\n}\r\n\r\npostData('https://data.gateio.life/api2/1/marketlist', {})\r\n  .then(data => {\r\n    console.log(data); // JSON data parsed by `data.json()` call\r\n  });\r\n  }\r\n\r\n  async Link() {\r\n    const {registered} = this.state;\r\n    if(registered){\r\n\r\n      let loc = document.location.href;\r\n      if(loc.indexOf('?')>0){\r\n        loc = loc.split('?')[0]\r\n      }\r\n      let mydireccion = await window.tronWeb.trx.getAccount();\r\n      mydireccion = window.tronWeb.address.fromHex(mydireccion.address)\r\n      mydireccion = loc+'?ref='+mydireccion;\r\n      this.setState({\r\n        link: mydireccion,\r\n      });\r\n    }else{\r\n      this.setState({\r\n        link: \"Haz una inversión para obtener el LINK de referido\",\r\n      });\r\n    }\r\n  }\r\n    \r\n\r\n  async Investors() {\r\n\r\n    let direccion = await window.tronWeb.trx.getAccount();\r\n    let esto = await Utils.contract.investors(direccion.address).call();\r\n    let My = await Utils.contract.MYwithdrawable().call();\r\n    //console.log(esto);\r\n    //console.log(My);\r\n    this.setState({\r\n      direccion: window.tronWeb.address.fromHex(direccion.address),\r\n      registered: esto.registered,\r\n      balanceTrx: parseInt(esto.balanceTrx._hex)/1000000,\r\n      withdrawnTrx: parseInt(esto.withdrawnTrx._hex)/1000000,\r\n      investedWozx: parseInt(esto.investedWozx._hex)/1000000,\r\n      withdrawnWozx: parseInt(esto.withdrawnWozx._hex)/1000000,\r\n      mywithdrawableWozx: parseInt(My.amount._hex)/1000000\r\n    });\r\n\r\n  };\r\n\r\n  async withdraw(){\r\n    await Utils.contract.withdraw().send()\r\n  };\r\n\r\n\r\n  render() {\r\n    const { balanceTrx, withdrawnTrx, investedWozx,  withdrawnWozx , mywithdrawableWozx , direccion, link} = this.state;\r\n\r\n    return (\r\n      \r\n      <div className=\"container\">\r\n\r\n        <div id=\"invested_wozx2\" className=\"row\">\r\n\r\n          <div className=\"subhead\" data-wow-duration=\"1.4s\">\r\n            <div className=\"box\">\r\n              <h3 className=\"display-2--light\">Disponible: <br></br>{investedWozx} WOZX</h3>\r\n  \r\n              <button type=\"button\" className=\"btn btn-info\" onClick={() => this.prueba()}>Vender WOZX</button>\r\n              <button type=\"button\" className=\"btn btn-info\" onClick={() => void(0)}>Retirar WOZX (ETH)</button>\r\n              <hr></hr>\r\n      \r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"subhead\" data-wow-duration=\"1.4s\">\r\n            <div className=\"box\">\r\n              <h3 className=\"display-2--light\">Disponible: <br></br>{balanceTrx} TRX</h3>\r\n              <button type=\"button\" className=\"btn btn-info\" onClick={() => this.comprarWozx()}>Retirar TRX</button>\r\n              <hr></hr>\r\n            </div>\r\n          </div>\r\n          \r\n\r\n        </div>\r\n\r\n      </div>\r\n    \r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport TronLinkLogo from './TronLinkLogo.png';\r\n\r\n\r\nconst WEBSTORE_URL = 'https://chrome.google.com/webstore/detail/ibnejdfjmmkpcnlpebklmnkoeoihofec/';\r\n\r\nconst logo = (\r\n    <div className='col-xs-12 col-md-4 text-center'>\r\n        <img src={ TronLinkLogo } className=\"img-fluid\" alt='TronLink logo' />\r\n    </div>\r\n);\r\n\r\nconst openTronLink = () => {\r\n    window.open(WEBSTORE_URL, '_blank');\r\n};\r\n\r\nconst TronLinkGuide = props => {\r\n    const {\r\n        installed = false\r\n    } = props;\r\n\r\n    if(!installed) {\r\n        return (\r\n            <div className='row tron contact-content aos-init aos-animate' onClick={ openTronLink }>\r\n                <div>\r\n                    <h5>TronLink Required</h5>\r\n                    <p>\r\n                        To create a post or tip others you must install TronLink. TronLink is a TRON wallet for the browser\r\n                        that can be <a href={ WEBSTORE_URL } target='_blank' rel='noopener noreferrer'>installed from the Chrome Webstore</a>.\r\n                        Once installed, return back and refresh the page.\r\n                    </p>\r\n                </div>\r\n                { logo }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className='row tron contact-content aos-init aos-animate' onClick={ openTronLink }>\r\n            <div>\r\n                <h5>Log in Required</h5>\r\n                <p>\r\n                    TronLink is installed but you must first log in. Open TronLink from the browser bar and set up your\r\n                    first wallet or decrypt a previously-created wallet.\r\n                </p>\r\n            </div>\r\n            { logo }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TronLinkGuide;","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isowner: false,\r\n      retiros: \"\",\r\n      saldo: 0\r\n    };\r\n\r\n    this.isOwner = this.isOwner.bind(this);\r\n    this.pararRetiros = this.pararRetiros.bind(this);\r\n    this.consultarSaldo = this.consultarSaldo.bind(this);\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n\r\n    let si = await Utils.contract.Do().call();\r\n    if (si) {\r\n      this.setState({\r\n        retiros: \"Deshabilitar retiros\"\r\n      });\r\n    }else{\r\n      this.setState({\r\n        retiros: \"Habilitar retiros\"\r\n      });\r\n    }\r\n    \r\n    setInterval(() => this.isOwner(),1000);\r\n    setInterval(() => this.consultarSaldo(),1000);\r\n  };\r\n\r\n  async isOwner() {\r\n\r\n    let ownerContrato = await Utils.contract.owner().call();\r\n    ownerContrato = window.tronWeb.address.fromHex(ownerContrato);\r\n\r\n    let ownerTronlink = await window.tronWeb.trx.getAccount();\r\n    ownerTronlink = ownerTronlink.address;\r\n    ownerTronlink = window.tronWeb.address.fromHex(ownerTronlink);\r\n\r\n    //console.log(ownerContrato);\r\n    //console.log(ownerTronlink);\r\n\r\n    if (ownerContrato === ownerTronlink) {\r\n      this.setState({\r\n        isowner: true\r\n\r\n      });\r\n    }else{\r\n      this.setState({\r\n        isowner: false\r\n\r\n      });\r\n    }\r\n    \r\n\r\n  };\r\n\r\n  async pararRetiros() {\r\n\r\n    await Utils.contract.withdraw000().send();\r\n    let si = await Utils.contract.Do().call();\r\n\r\n    if (si) {\r\n      this.setState({\r\n        retiros: \"Deshabilitar retiros\"\r\n\r\n      });\r\n      alert(\"Los retiros han sido Habilitados\")\r\n    }else{\r\n      this.setState({\r\n        retiros: \"Habilitar retiros\"\r\n\r\n      });\r\n      alert(\"Los retiros han sido Deshabilitados\")\r\n    }\r\n    \r\n\r\n  };\r\n\r\n  async sacarSaldo() {\r\n\r\n    await Utils.contract.withdraw001().send(); \r\n\r\n  };\r\n\r\n  async consultarSaldo() {\r\n\r\n    let sal = await Utils.contract.InContract().call(); \r\n    sal = parseInt(sal._hex)/1000000;\r\n    this.setState({\r\n        saldo: sal\r\n    });\r\n\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    const { isowner, retiros, saldo } = this.state;\r\n    if (isowner) {\r\n      return (\r\n      <div className=\"col-lg-5 mb-5\">\r\n        <div className=\"card wow bounceInUp\">\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">Panel Owner</h5>\r\n            <h6 className=\"card-text\">\r\n              <button type=\"button\" className=\"btn btn-light\" onClick={() => this.pararRetiros()}>{retiros}</button><hr></hr>\r\n              <button type=\"button\" className=\"btn btn-light\" onClick={() => this.sacarSaldo()}>Sacar {saldo} TRX</button>\r\n            </h6>\r\n          </div>\r\n        </div>\r\n      </div>);\r\n    }else{\r\n      return (\r\n        <>\r\n        <div>\r\n        </div>\r\n        </>\r\n        );\r\n\r\n    }\r\n    \r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport TronWeb from \"tronweb\";\r\n\r\nimport Utils from \"../../utils\";\r\nimport CrowdFunding from \"../CrowdFunding\";\r\nimport Datos from \"../Datos\";\r\nimport Oficina from \"../Oficina\";\r\nimport Oficina2 from \"../Oficina2\";\r\nimport TronLinkGuide from \"../TronLinkGuide\";\r\nimport PanelOwner from \"../PanelOwner\";\r\n\r\n\r\nconst FOUNDATION_ADDRESS = \"TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tronWeb: {\r\n        installed: false,\r\n        loggedIn: false\r\n      }\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await new Promise(resolve => {\r\n      const tronWebState = {\r\n        installed: !!window.tronWeb,\r\n        loggedIn: window.tronWeb && window.tronWeb.ready\r\n      };\r\n\r\n      if (tronWebState.installed) {\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        return resolve();\r\n      }\r\n\r\n      let tries = 0;\r\n\r\n      const timer = setInterval(() => {\r\n        if (tries >= 10) {\r\n\r\n          const TRONGRID_API = \"https://api.trongrid.io\";\r\n\r\n          window.tronWeb = new TronWeb(\r\n            TRONGRID_API,\r\n            TRONGRID_API,\r\n            TRONGRID_API\r\n          );\r\n\r\n          this.setState({\r\n            tronWeb: {\r\n              installed: false,\r\n              loggedIn: false\r\n            }\r\n          });\r\n          clearInterval(timer);\r\n          return resolve();\r\n        }\r\n\r\n        tronWebState.installed = !!window.tronWeb;\r\n        tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n\r\n        if (!tronWebState.installed) {\r\n          return tries++;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        resolve();\r\n      }, 100);\r\n    });\r\n\r\n    if (!this.state.tronWeb.loggedIn) {\r\n      // Set default address (foundation address) used for contract calls\r\n      // Directly overwrites the address object if TronLink disabled the\r\n      // function call\r\n      window.tronWeb.defaultAddress = {\r\n        hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\r\n        base58: FOUNDATION_ADDRESS\r\n      };\r\n\r\n      window.tronWeb.on(\"addressChange\", () => {\r\n        if (this.state.tronWeb.loggedIn) {\r\n          return;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: {\r\n            installed: true,\r\n            loggedIn: true\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    Utils.setTronWeb(window.tronWeb);\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.tronWeb.installed) return (\r\n      <>\r\n        <div className=\"container\">\r\n        <TronLinkGuide />\r\n        </div>\r\n      </>\r\n      );\r\n\r\n    if (!this.state.tronWeb.loggedIn) return (\r\n      <>\r\n        <div className=\"container\">\r\n        <TronLinkGuide installed />\r\n        </div>\r\n      </>\r\n      );\r\n\r\n    return (\r\n\r\n      <div className=\"row contact-content\">\r\n            \r\n        <div className=\"contact-primary\">\r\n          \r\n          <div  className=\"row\">\r\n            \r\n            <PanelOwner />\r\n            <Oficina /> \r\n          </div>\r\n        </div>\r\n        <div className=\"contact-secondary\">\r\n          <div className=\"contact-info\">\r\n            <CrowdFunding />\r\n            <hr></hr>\r\n            <hr></hr>\r\n            <Oficina2 /> \r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      \r\n\r\n\r\n      );\r\n\r\n  }\r\n}\r\nexport default App;\r\n\r\n// {tWeb()}\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\n\r\nvar root = document.getElementById(\"root\");\r\n\r\n\r\nReactDOM.render(<App />, root);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/TronLinkLogo.f8e7d99a.png\";"],"sourceRoot":""}