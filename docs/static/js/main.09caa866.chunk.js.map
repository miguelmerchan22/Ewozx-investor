{"version":3,"sources":["components/TronLinkGuide/TronLinkLogo.png","utils/index.js","cons.js","components/Contract/index.js","components/CrowdFunding/index.js","components/Historial/index.js","components/Oficina/index.js","components/Oficina2/index.js","components/TronLinkGuide/index.js","components/PanelOwner/index.js","components/App/index.js","index.js"],"names":["module","exports","utils","tronWeb","contract","setTronWeb","this","setContract","contractAddress","at","amountTrx","ratetrx","ratetrx_usd","ratewozx","cantidadusd","descuento","cons","tantoTrx","tantoWozx","walletSponsor","proxyUrl","KEY","SECRET","pry","pru","TRONGRID_API","console","log","tronApp","TronWeb2","WozxInvestor","Component","constructor","props","super","state","usdtrx","min","texto","tronEnApp","deposit","bind","deposit2","rateWozx","comprarWozx","rateTRX","venderTRX","postComprarWozx","postVenderTRX","reatizarTodoPost","ordenEjecutada","minDepo","saldoApp","componentDidMount","Utils","window","setInterval","esTrx","cripto","symbol","header1","fetch","method","headers","then","res","json","data","find","rate","parseFloat","toFixed","catch","error","MIN_DEPOSIT","call","mindepo","rateTRON","rateApp","parseInt","_hex","setState","minimo_usd","nuevoMinDeposit","send","nuevoRatetron","trx","getAccount","account","accountAddress","address","fromHex","investors","registered","document","getElementById","value","verTransfersPendientes","transPe","valor","transfers","header","hasher","sha512","hmac","hash","finalize","firma","toString","SIGN","form","available","TRX","depomin","getBalance","balanceInSun","balanceInTRX","fromSun","montoTrx","haytron","body","querystring","stringify","cantidadTrx","filledAmount","leftAmount","precioTrx","filledRate","feeValue","result","loc","location","href","indexOf","getString","split","GET","get","i","l","length","tmp","unescape","decodeURI","sponsor","esponsor","verispo","miRegistro","esWozx","usd","amount","cantidadWozx","orden","depositpendiente","pending","cancelDepo","firmarTx","shouldPollResponse","callValue","sidep","depositPost","am","ordenPost","verOrdenPost","nOrden","tron","tWozx","acc","numeroDeOrden","_amountTrx","fillPost","render","className","type","id","placeholder","onClick","historial","verHistorial","contadorHistorial","cont","splice","o","cantidad","miHistorial","ver","tiempo","Date","evento","key","style","fontSize","title","moneda","operacion","width","height","overflow","rango","ganancia","refe","direccion","link","balanceTrx","withdrawnTrx","investedWozx","withdrawnWozx","WozxPe","miPrecioWozx","Investors","enviarWozx","Link","mydireccion","esto","myFunction","a","myRango","r","range","prof","wozxP","wozxPe","text","aria-describedby","tipo","auth","texto3","fee","feetrx","funcion","alerta","balanceRef","totalRef","invested","paidAt","my","withdrawn","withdraw","venderWozx","comprarTRX","enviarTron","vereth","withdrawETH","enviarEth","Wozx","Tron","confirm","redeposit","redepositPost","c","w","wozx","wallet","wozxToTron","currency","owner","ownerContrato","MYwithdrawable","My","mywithdrawableWozx","hay","COMISION_RETIRO","minre","balanceContract","InContract","alert","sacarwozx","retirarWozx","miETH","ethdireccion","escribireth","setETH","boton","cosa","atuh","dirETH","web3","isAddress","eth","habilitado","walleteth","texto2","dirwozx","data-wow-duration","cursor","rel","target","action","name","WEBSTORE_URL","logo","src","TronLinkLogo","alt","openTronLink","open","TronLinkGuide","installed","isowner","retiros","saldo","isOwner","pararRetiros","ownerTronlink","sal","Do","stopWithdrawl","sacarSaldo","withdrawAll","habilitarETH","App","loggedIn","Promise","resolve","tronWebState","ready","tries","timer","TronWeb","clearInterval","defaultAddress","hex","toHex","base58","on","root","ReactDOM"],"mappings":"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","file":"static/js/main.09caa866.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/TronLinkLogo.f8e7d99a.png\";","const utils = {\r\n  tronWeb: false,\r\n  contract: false,\r\n\r\n  setTronWeb(tronWeb) {\r\n    this.tronWeb = tronWeb;\r\n  },\r\n\r\n  async setContract(tronWeb, contractAddress) {\r\n    this.contract = await tronWeb.contract().at(contractAddress);\r\n  }\r\n};\r\n\r\nexport default utils;\r\n","const AK = \"2E37A3CE-63DF-4BA1-8C4F-13A82E27AC59\";\r\nconst SK = \"624620b9b7c29ee6704288f27c3e60b41e9fa0e5415cf1dbae296951e091fc48\";\r\nconst WO = \"d57bd5da960638ee6067402d9208e2fb34707b0a1480bf32fcecb3741a75e2a5\";\r\nconst proxy = \"https://proxy-ewozx.herokuapp.com/\";\r\nconst PRU = \"shasta.\";\r\nconst WS = \"T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb\";\r\nconst descuento = 0.002;\r\nconst WOZX = 0.06;\r\nconst TRX = 0.02;\r\nconst SC = \"TRpg2HA76DCzNyEtfV4rVuHVsxkhzA9TuA\";\r\n\r\nexport default {AK, SK, WO, proxy, PRU, WS, descuento, WOZX, TRX, SC};","\r\nimport cons from \"../../cons.js\";\r\n\r\nconst contractAddress = cons.SC;\r\n\r\nexport default contractAddress;","import React, { Component } from \"react\";\r\n\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nimport cons from \"../../cons.js\";\r\n\r\nimport querystring from 'querystring';\r\nimport sha512 from 'sha512';\r\nimport TronWeb2 from 'tronweb';\r\n\r\nvar amountTrx = 0;\r\nvar ratetrx = 0;\r\nvar ratetrx_usd = 0;\r\nvar ratewozx = 0;\r\nvar cantidadusd = 0;\r\n\r\nvar descuento = cons.descuento; //+ 0.23;// <- se resta para comprar el 77% en wozx para los usuarios\r\nvar tantoTrx = cons.TRX;// para que el TRX se Venda de inmediato\r\nvar tantoWozx = cons.WOZX;// para que el WOZX se Compre de inmediato\r\nvar minimo_usd = 1;// (100) para dolares (100 USD)\r\nvar rango_minimo = 0.1; // 10% de sensibilidad para modificar el precio minimo de inversion\r\nvar walletSponsor = cons.WS;//T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb\r\nvar proxyUrl = cons.proxy;\r\n\r\n//console.log(contractAddress);\r\n\r\nvar AccessOrigin = '*';\r\n\r\nconst KEY  = cons.AK;\r\nconst SECRET  = cons.SK;\r\nconst pry = cons.WO;\r\n\r\nvar pru = \"\";\r\nif (cons.PRU) {\r\n  pru = cons.PRU;\r\n}\r\n\r\nconst TRONGRID_API = \"https://api.\"+pru+\"trongrid.io\";\r\nconsole.log(TRONGRID_API);\r\n\r\nconst tronApp = new TronWeb2(\r\n  TRONGRID_API,\r\n  TRONGRID_API,\r\n  TRONGRID_API,\r\n  pry\r\n);\r\n\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      amountTrx: \"\",\r\n      usdtrx: \"\",\r\n      min: 3000,\r\n      texto: \"Buy WOZX\",\r\n      tronEnApp: 0\r\n\r\n    }\r\n\r\n    this.deposit = this.deposit.bind(this);\r\n    this.deposit2 = this.deposit2.bind(this);\r\n    this.rateWozx = this.rateWozx.bind(this);\r\n    this.comprarWozx = this.comprarWozx.bind(this);\r\n    this.rateTRX = this.rateTRX.bind(this);\r\n    this.venderTRX = this.venderTRX.bind(this);\r\n    this.postComprarWozx = this.postComprarWozx.bind(this);\r\n    this.postVenderTRX = this.postVenderTRX.bind(this);\r\n    this.reatizarTodoPost = this.reatizarTodoPost.bind(this);\r\n    this.ordenEjecutada = this.ordenEjecutada.bind(this);\r\n    this.minDepo = this.minDepo.bind(this);\r\n    this.saldoApp = this.saldoApp.bind(this);\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    await this.reatizarTodoPost();\r\n    setInterval(() => this.reatizarTodoPost(),120*1000);\r\n    await this.minDepo();\r\n    setInterval(() => this.minDepo(),30*1000);\r\n    \r\n  };\r\n\r\n  async minDepo(){\r\n\r\n    function esTrx(cripto) {\r\n          return cripto.symbol === 'TRX';\r\n      }\r\n\r\n    const USER_AGENT = 'stevenSTC';\r\n    let header1 = {\r\n      'Access-Control-Allow-Origin' :AccessOrigin,\r\n      'User-Agent' : USER_AGENT,\r\n      'Access-Control-Allow-Headers': 'Origin, X-Requested-With',\r\n      'mode':'no-cors'\r\n    };\r\n    await fetch(proxyUrl+'https://data.gateio.life/api2/1/marketlist',{method: 'GET', headers: header1})\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      //console.log(data);\r\n      ratetrx_usd = data.data.find(esTrx).rate; \r\n      ratetrx_usd = parseFloat(ratetrx_usd).toFixed(6);\r\n      //console.log(ratetrx);\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n\r\n\r\n    var mindepo = await Utils.contract.MIN_DEPOSIT().call();\r\n    var rateApp = await Utils.contract.rateTRON().call();\r\n    mindepo = parseInt(mindepo._hex)/1000000;\r\n    rateApp = parseInt(rateApp._hex)/1000000;\r\n\r\n    this.setState({\r\n      min: mindepo+1,\r\n      rateApp: rateApp\r\n    });\r\n    //console.log(mindepo);\r\n\r\n    if (mindepo*ratetrx_usd >= minimo_usd+minimo_usd*rango_minimo || mindepo*ratetrx_usd <= minimo_usd-minimo_usd*rango_minimo) {\r\n\r\n      let contract = await tronApp.contract().at(contractAddress);//direccion del contrato para la W app\r\n      await contract.nuevoMinDeposit(parseInt(minimo_usd/ratetrx_usd)).send();\r\n      console.log(\"EVENTO: nuevo minimo de deposito \"+parseInt(minimo_usd/ratetrx_usd)+\" TRX\")\r\n\r\n    }\r\n\r\n    if (rateApp >= ratetrx_usd+ratetrx_usd*rango_minimo || rateApp <= ratetrx_usd-ratetrx_usd*rango_minimo) {\r\n\r\n      let contract = await tronApp.contract().at(contractAddress);//direccion del contrato para la W app\r\n      await contract.nuevoRatetron(parseInt(ratetrx_usd*1000000)).send();\r\n      console.log(\"EVENTO: nuevo rate de TRX \"+ratetrx_usd+\" // \"+rateApp);\r\n\r\n    }\r\n\r\n    const account =  await window.tronWeb.trx.getAccount();\r\n    var accountAddress = account.address;\r\n    accountAddress = window.tronWeb.address.fromHex(accountAddress);\r\n    var investors = await Utils.contract.investors(accountAddress).call();\r\n\r\n    if (!investors.registered) {\r\n      document.getElementById(\"amount\").value = \"\";\r\n      this.setState({\r\n        texto:\"Click to register\"\r\n      });\r\n    }else{\r\n      this.setState({\r\n        texto:\"Buy WOZX\"\r\n      });\r\n    }\r\n    const contract = await tronApp.contract().at(contractAddress);\r\n    var transPe = await contract.verTransfersPendientes().call();\r\n    transPe.valor = parseInt(transPe.valor._hex);\r\n    //console.log(transPe.valor_hex)\r\n    if (transPe.valor > 0) {\r\n      await contract.transfers().send();\r\n    }\r\n    \r\n\r\n  };\r\n\r\n  async saldoApp(){\r\n\r\n    let body = \"\";\r\n    let header = {};\r\n\r\n    var hasher = sha512.hmac(SECRET);\r\n    var hash = hasher.finalize(body);\r\n    var firma = hash.toString('hex');\r\n\r\n    header.KEY = KEY;\r\n    header.SIGN = firma;\r\n\r\n    await fetch(proxyUrl+'https://api.gateio.life/api2/1/private/balances',{method: 'POST', headers: header, form:body})\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      //console.log(data);\r\n      //console.log(data.available.TRX);\r\n      this.setState({\r\n        tronEnApp: data.available.TRX\r\n      });\r\n\r\n\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n  };\r\n\r\n\r\n  async rateTRX(){\r\n\r\n    function esTrx(cripto) {\r\n          return cripto.symbol === 'TRX';\r\n      }\r\n\r\n    const USER_AGENT = 'stevenSTC';\r\n    let header1 = {\r\n      'Access-Control-Allow-Origin' :AccessOrigin,\r\n      'User-Agent' : USER_AGENT,\r\n      'Access-Control-Allow-Headers': 'Origin, X-Requested-With',\r\n      'mode':'no-cors'\r\n    };\r\n    await fetch(proxyUrl+'https://data.gateio.life/api2/1/marketlist',{method: 'GET', headers: header1})\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      //console.log(data);\r\n      ratetrx = data.data.find(esTrx).rate; \r\n      ratetrx = parseFloat(ratetrx).toFixed(6);\r\n      ratetrx = ratetrx-ratetrx*tantoTrx;\r\n      ratetrx = ratetrx.toString();\r\n      //console.log(ratetrx);\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n\r\n\r\n  };\r\n\r\n  async venderTRX(){  \r\n\r\n    await this.saldoApp();\r\n    await this.rateTRX();\r\n\r\n    const {tronEnApp} = this.state;\r\n\r\n    this.setState({\r\n      texto:\"Please wait\"\r\n    });\r\n    \r\n    // verifica el monto sea mayor a minimo\r\n    amountTrx = document.getElementById(\"amount\").value;\r\n\r\n    let depomin = await Utils.contract.MIN_DEPOSIT().call();\r\n\r\n    \r\n\r\n      // verifica si ya esta registrado\r\n      const account =  await window.tronWeb.trx.getAccount();\r\n      var accountAddress = account.address;\r\n      accountAddress = window.tronWeb.address.fromHex(accountAddress);\r\n\r\n      var investors = await Utils.contract.investors(accountAddress).call();\r\n      //console.log(investors);\r\n\r\n      const balanceInSun = await window.tronWeb.trx.getBalance(); //number\r\n      var balanceInTRX = window.tronWeb.fromSun(balanceInSun); //string\r\n      balanceInTRX = parseInt(balanceInTRX);//number\r\n\r\n      var montoTrx = parseInt(amountTrx);\r\n      var haytron = parseInt(tronEnApp);\r\n\r\n      if (investors.registered) {\r\n        if (amountTrx >= depomin && amountTrx <= balanceInTRX-40) {\r\n          if ( montoTrx < haytron ) {\r\n            console.log(\"Entro directo\");\r\n          amountTrx = amountTrx - amountTrx*descuento;\r\n          amountTrx = amountTrx.toString();\r\n\r\n          let currencyPair = \"trx_usdt\";\r\n\r\n          let body = querystring.stringify({'currencyPair':currencyPair,'rate':ratetrx,'amount':amountTrx});\r\n\r\n          let header = {\r\n            'Content-Type': 'application/x-www-form-urlencoded'\r\n          };\r\n\r\n          var hasher = sha512.hmac(SECRET);\r\n          var hash = hasher.finalize(body);\r\n          var firma = hash.toString('hex');\r\n\r\n          header.KEY = KEY;\r\n          header.SIGN = firma;\r\n\r\n          await fetch(proxyUrl+'https://api.gateio.life/api2/1/private/sell/',{method: 'POST', headers: header, body:body})\r\n          .then(res => res.json())\r\n          .then(data => {\r\n            //console.log(data);\r\n            var cantidadTrx=parseFloat(data.filledAmount);\r\n            var cantidadTrx2=parseFloat(data.leftAmount);\r\n            cantidadTrx = cantidadTrx+cantidadTrx2;\r\n\r\n            var precioTrx=parseFloat(data.filledRate);\r\n            cantidadusd = precioTrx*cantidadTrx;\r\n            cantidadusd = cantidadusd-cantidadusd*parseFloat(data.feeValue);\r\n            \r\n            console.log(cantidadusd);\r\n\r\n            if (data.result === \"true\") {\r\n              this.setState({\r\n                texto:\"Buying WOZX\"\r\n              });\r\n              this.comprarWozx(cantidadusd);\r\n            }else{\r\n              this.setState({\r\n                texto:\"Error: T-Cf-285\"\r\n              });\r\n              //No hay suficiente TRON en Gate.io\r\n            }\r\n\r\n          })\r\n          .catch(error => console.log('Error:', error));\r\n\r\n          }else{\r\n            console.log(\"Entro POST\");\r\n            // cantidad muy alta de TRX pendiente se ejecuta post recepcion de fondos\r\n            this.deposit2();\r\n          }\r\n\r\n        }else{\r\n          if ( depomin >= amountTrx ){\r\n            this.setState({\r\n              texto:\"Enter a higher amount\"\r\n            });\r\n          }\r\n\r\n          if (balanceInTRX-40 <= amountTrx ){\r\n            this.setState({\r\n              texto:\"Not enough TRON\"\r\n            });\r\n          }\r\n          \r\n        }\r\n\r\n      }else{\r\n\r\n        if ( balanceInTRX >= 40) {\r\n          //registra a la persona con los referidos\r\n          var loc = document.location.href;\r\n          if(loc.indexOf('?')>0){\r\n              var getString = loc.split('?')[1];\r\n              var GET = getString.split('&');\r\n              var get = {};\r\n              for(var i = 0, l = GET.length; i < l; i++){\r\n                  var tmp = GET[i].split('=');\r\n                  get[tmp[0]] = unescape(decodeURI(tmp[1]));\r\n              }\r\n              \r\n              if (get['ref']) {\r\n                tmp = get['ref'].split('#')\r\n                document.getElementById('sponsor').value = tmp[0];            \r\n              }else{\r\n\r\n                 document.getElementById('sponsor').value = walletSponsor;\r\n              }\r\n                 \r\n          }else{\r\n            \r\n              document.getElementById('sponsor').value = walletSponsor; \r\n          }\r\n\r\n          let sponsor = document.getElementById(\"sponsor\").value;\r\n\r\n          document.getElementById(\"amount\").value = \"\";\r\n          \r\n\r\n          var verispo = await Utils.contract.esponsor().call();\r\n          //console.log(verispo);\r\n\r\n          if (verispo.res) {\r\n            sponsor = window.tronWeb.address.fromHex(verispo.sponsor);\r\n          }\r\n\r\n          await Utils.contract.miRegistro(sponsor).send();\r\n\r\n        }else{\r\n          document.getElementById(\"amount\").value = \"\";\r\n          this.setState({\r\n            texto:\"Not enough TRON\"\r\n          });\r\n          \r\n        }\r\n\r\n      }\r\n\r\n\r\n  };\r\n\r\n  async rateWozx(){\r\n\r\n    function esWozx(cripto) {\r\n      return cripto.symbol === 'WOZX';\r\n    }\r\n\r\n    const USER_AGENT = 'stevenSTC';\r\n    let header1 = {\r\n      'Access-Control-Allow-Origin' :AccessOrigin,\r\n      'User-Agent' : USER_AGENT,\r\n      'Access-Control-Allow-Headers': 'Origin, X-Requested-With'\r\n    };\r\n    await fetch(proxyUrl+'https://data.gateio.life/api2/1/marketlist',{method: 'GET', headers: header1})\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      //console.log(data);\r\n      ratewozx = data.data.find(esWozx).rate; \r\n      ratewozx = parseFloat(ratewozx);\r\n      ratewozx = ratewozx+ratewozx*tantoWozx;\r\n      ratewozx = ratewozx.toString();\r\n      //console.log(ratewozx);\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n\r\n\r\n  }\r\n\r\n  async comprarWozx(usd){    \r\n    \r\n    await this.rateWozx();\r\n\r\n    this.setState({\r\n      texto:\"Processing...\"\r\n    });\r\n    \r\n    let amount = usd/parseFloat(ratewozx).toFixed(6);\r\n    console.log(parseFloat(amount.toFixed(6)));\r\n\r\n    amount = amount.toString();\r\n    let currencyPair = \"wozx_usdt\";\r\n\r\n    let body = querystring.stringify({'currencyPair':currencyPair,'rate':ratewozx,'amount':amount});\r\n\r\n    let header = {'Content-Type': 'application/x-www-form-urlencoded'};\r\n\r\n    var hasher = sha512.hmac(SECRET);\r\n    var hash = hasher.finalize(body);\r\n    var firma = hash.toString('hex');\r\n\r\n    header.KEY = KEY;\r\n    header.SIGN = firma;\r\n    await fetch(proxyUrl+'https://api.gateio.life/api2/1/private/buy/',{method: 'POST', headers: header, body:body })\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      console.log(data);\r\n\r\n      var cantidadWozx = parseFloat(data.filledAmount);\r\n      var cantidadWozx2 = parseFloat(data.leftAmount);\r\n      cantidadWozx = cantidadWozx+cantidadWozx2;\r\n      cantidadWozx = cantidadWozx-cantidadWozx*parseFloat(data.feeValue);\r\n\r\n      console.log(cantidadWozx)\r\n      if (data.result === \"true\") {\r\n        this.deposit(cantidadWozx);\r\n      }else{\r\n        this.setState({\r\n          texto:\"Error: U-Cf-408\"\r\n        });\r\n        //No hay suficiente saldo de USD en Gate.io\r\n      }\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n    \r\n    \r\n    \r\n  }\r\n\r\n\r\n  async deposit(orden) {\r\n\r\n    let amount = document.getElementById(\"amount\").value;\r\n    document.getElementById(\"amount\").value = \"\";\r\n\r\n      orden = orden * 1000000;\r\n      orden = parseInt(orden);\r\n      console.log(orden);\r\n\r\n      const account =  await window.tronWeb.trx.getAccount();\r\n      var accountAddress = account.address;\r\n      accountAddress = window.tronWeb.address.fromHex(accountAddress);\r\n\r\n      this.setState({\r\n        texto:\"Sign order\"\r\n      });\r\n\r\n      let contract = await tronApp.contract().at(contractAddress);//direccion del contrato\r\n\r\n      var pending = await contract.depositpendiente(accountAddress).call();\r\n\r\n      console.log(pending);\r\n      //cancela cualquier deposito inconcluso para hacer uno nuevo\r\n      if (pending.res) {\r\n        console.log(pending);\r\n        await contract.cancelDepo(accountAddress).send();\r\n      }\r\n      \r\n\r\n      //crea una nueva orden directa\r\n      await contract.firmarTx(accountAddress, orden).send();\r\n\r\n      this.setState({\r\n        texto:\"Reciving TRON\"\r\n      });\r\n    \r\n      var sidep = await Utils.contract.deposit().send({\r\n        shouldPollResponse: true,\r\n        callValue: amount * 1000000 // converted to SUN\r\n      });\r\n\r\n      console.log(sidep);\r\n\r\n      if (sidep.res) {\r\n        await contract.transfers().send();\r\n        this.setState({\r\n          texto:\"Buy WOZX\"\r\n        });\r\n      }else{\r\n        await contract.cancelDepo(accountAddress).send();\r\n        this.setState({\r\n          texto:\"Canceled for User\"\r\n        });\r\n      }\r\n\r\n    \r\n  };\r\n\r\n  async deposit2() {\r\n\r\n    await this.rateWozx();\r\n    await this.rateTRX();\r\n\r\n    let amount = document.getElementById(\"amount\").value;\r\n    document.getElementById(\"amount\").value = \"\";\r\n\r\n    this.setState({\r\n      texto:\"Don't close the window\"\r\n    });\r\n\r\n    await Utils.contract.depositPost().send({\r\n      callValue: amount * 1000000 // converted to SUN\r\n    });\r\n\r\n    var orden = amount*ratetrx-ratetrx*tantoTrx;\r\n    orden = orden-orden*descuento;\r\n    orden = orden / ratewozx+ratewozx*tantoWozx;\r\n    orden = parseInt(orden*1000000);\r\n    console.log(orden);\r\n    console.log(amount);\r\n    const account =  await window.tronWeb.trx.getAccount();\r\n    var accountAddress = account.address;\r\n    accountAddress = window.tronWeb.address.fromHex(accountAddress);\r\n    console.log(accountAddress);\r\n\r\n    var am = parseInt(amount*1000000);\r\n    console.log(am);\r\n\r\n    this.setState({\r\n      texto:\"Saving order\"\r\n    });\r\n    let contract = await tronApp.contract().at(contractAddress);//direccion del contrato para la W app\r\n    await contract.ordenPost(accountAddress, am, orden).send();\r\n\r\n    this.setState({\r\n      texto:\"Buy WOZX\"\r\n    });\r\n    \r\n  };\r\n\r\n  async reatizarTodoPost(){\r\n\r\n    let contract = await tronApp.contract().at(contractAddress);//direccion del contrato para la W app\r\n    var orden = await contract.verOrdenPost().call();\r\n    //console.log(orden);\r\n\r\n    orden = {nOrden:parseInt(orden[0]._hex), tron:parseInt(orden[1]._hex)/1000000, tWozx:parseInt(orden[2]._hex)/1000000, acc: orden[3] }\r\n    console.log(orden);\r\n\r\n    if (orden.acc){\r\n      await this.postVenderTRX(orden.nOrden, orden.tron);\r\n    }\r\n    \r\n     \r\n  }\r\n\r\n  async postVenderTRX(numeroDeOrden, _amountTrx){    \r\n\r\n    await this.rateTRX();\r\n\r\n    ratetrx = ratetrx-ratetrx*tantoTrx;\r\n\r\n    amountTrx = _amountTrx*ratetrx;\r\n    amountTrx = amountTrx-amountTrx*descuento;\r\n\r\n    ratetrx = ratetrx.toString();\r\n    amountTrx = amountTrx.toString();\r\n\r\n    let currencyPair = \"trx_usdt\";\r\n\r\n    let body = querystring.stringify({'currencyPair':currencyPair,'rate':ratetrx,'amount':amountTrx});\r\n\r\n    let header = {\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    };\r\n\r\n    var hasher = sha512.hmac(SECRET);\r\n    var hash = hasher.finalize(body);\r\n    var firma = hash.toString('hex');\r\n\r\n    header.KEY = KEY;\r\n    header.SIGN = firma;\r\n    await fetch(proxyUrl+'https://api.gateio.life/api2/1/private/sell/',{method: 'POST', headers: header, body:body})\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      console.log(data);\r\n      var cantidadTrx=parseFloat(data.filledAmount);\r\n      var cantidadTrx2=parseFloat(data.leftAmount);\r\n      cantidadTrx=cantidadTrx+cantidadTrx2;\r\n      var precioTrx=parseFloat(data.filledRate);\r\n      cantidadusd = precioTrx*cantidadTrx;\r\n      cantidadusd = cantidadusd-cantidadusd*parseFloat(data.feeValue);\r\n      console.log(cantidadusd);\r\n\r\n      if (data.result === \"true\") {\r\n        this.postComprarWozx(cantidadusd, numeroDeOrden);\r\n      }else{\r\n        console.log(\"Ingrese más TRON a Gate.io\");\r\n      }\r\n\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n\r\n  };\r\n\r\n  async postComprarWozx(usd, numeroDeOrden){    \r\n    \r\n    await this.rateWozx();\r\n\r\n    ratewozx = ratewozx+ratewozx*tantoWozx\r\n    var amount = usd/parseFloat(ratewozx).toFixed(6);\r\n\r\n    console.log(amount);\r\n\r\n    amount = amount.toString();\r\n    ratewozx = ratewozx.toString();\r\n\r\n    let currencyPair = \"wozx_usdt\";\r\n\r\n    let body = querystring.stringify({'currencyPair':currencyPair,'rate':ratewozx,'amount':amount});\r\n\r\n    let header = {'Content-Type': 'application/x-www-form-urlencoded'};\r\n\r\n    var hasher = sha512.hmac(SECRET);\r\n    var hash = hasher.finalize(body);\r\n    var firma = hash.toString('hex');\r\n\r\n    header.KEY = KEY;\r\n    header.SIGN = firma;\r\n    await fetch(proxyUrl+'https://api.gateio.life/api2/1/private/buy/',{method: 'POST', headers: header, body:body })\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      console.log(data);\r\n\r\n      var cantidadWozx = parseFloat(data.filledAmount);\r\n      var cantidadWozx2 = parseFloat(data.leftAmount);\r\n      cantidadWozx = cantidadWozx+cantidadWozx2;\r\n      cantidadWozx = cantidadWozx-cantidadWozx*parseFloat(data.feeValue);\r\n\r\n      console.log(cantidadWozx);\r\n\r\n      if (data.result === \"true\") {\r\n        //la app actualiza en blockchain la orden POST se completo\r\n        this.ordenEjecutada(numeroDeOrden, parseInt(cantidadWozx*1000000));\r\n      }else{\r\n        console.log(\"Ingrese más USD a Gate.io\");\r\n      }\r\n      \r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n    \r\n    \r\n    \r\n  };\r\n\r\n  async ordenEjecutada(numeroDeOrden, cantidadWozx){\r\n\r\n    // se emite que la orden POST ya fue ejecutada\r\n\r\n    let contract = await tronApp.contract().at(contractAddress);\r\n    await contract.fillPost(numeroDeOrden, cantidadWozx).send();\r\n\r\n    console.log(\"Orden POST N°: \"+numeroDeOrden+\" se ejecutó exitosamente por: \"+cantidadWozx/1000000+\"WOZX\");\r\n  \r\n  }\r\n\r\n  render() {\r\n    var { min, texto} = this.state;\r\n\r\n    min = \"Min. deposit \"+min+\" TRX\";\r\n    \r\n    return (\r\n      \r\n      <div className=\"card wow bounceInUp\">\r\n        <div className=\"card-body\">\r\n        <header className=\"section-header\">\r\n              <h3>Make your investment</h3>\r\n          </header>\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <input type=\"number\" className=\"form-control amount\" id=\"amount\" placeholder={min}></input>\r\n                <p className=\"card-text\">You must have ~ 40 TRX to make the transaction</p>\r\n              </div>\r\n            </form>\r\n          <button type=\"button\" className=\"btn btn-light\" onClick={() => this.venderTRX()}>{texto}</button>\r\n        </div>\r\n        \r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\r\n\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      historial: []\r\n\r\n    }\r\n\r\n    this.verHistorial = this.verHistorial.bind(this);\r\n    \r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    this.verHistorial();\r\n    setInterval(() => this.verHistorial(),360*1000);\r\n  };\r\n\r\n\r\n  async verHistorial(){\r\n\r\n    var {historial} = this.state;\r\n    \r\n    var cont = await Utils.contract.contadorHistorial().call();\r\n    //console.log(cont);\r\n    //console.log(parseInt(cont.cantidad._hex));\r\n    if (cont.res) {\r\n      historial.splice(0);\r\n      var o = 0\r\n      if (parseInt(cont.cantidad._hex) > 10) {\r\n        o = parseInt(cont.cantidad._hex)-10;\r\n      }\r\n      for (var i = o; i < parseInt(cont.cantidad._hex); i++) {\r\n\r\n        var ver = await Utils.contract.miHistorial(i).call();\r\n        //console.log(ver);\r\n        ver.valor = parseInt(ver.valor._hex)/1000000;\r\n        ver.tiempo = Date(parseInt(ver.tiempo._hex));\r\n        //console.log(ver);\r\n\r\n        let evento = (\r\n          <div className=\"col-full\" key={i.toString()}>\r\n            <span style={{fontSize: '18px'}} title={ver.tiempo}> {ver.valor} | {ver.moneda} | {ver.operacion} </span>\r\n          </div>\r\n        );\r\n        historial.splice(0,0,evento);\r\n        this.setState({\r\n          historial: historial\r\n        });\r\n        \r\n      }\r\n\r\n    }\r\n    \r\n    \r\n\r\n    \r\n\r\n  }\r\n\r\n  render() {\r\n    var { historial } = this.state;\r\n\r\n    const divStyle = {\r\n      width: '100%',\r\n      height:'115px',\r\n      overflow: 'scroll'\r\n    };\r\n    \r\n    return (\r\n\r\n      <div>\r\n        <h3>Transactions <button type=\"button\" className=\"btn btn-light\" onClick={() => this.verHistorial()}>Reload</button></h3>\r\n      \r\n        <div style={divStyle}>\r\n          \r\n          {historial}\r\n        \r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nimport cons from \"../../cons.js\";\r\n\r\nvar proxyUrl = cons.proxy;\r\n\r\nvar AccessOrigin = '*';\r\n\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      rango: \"N/A\",\r\n      ganancia: 0,\r\n      refe: [],\r\n      direccion: \"\",\r\n      link: \"Make an investment to get the referral LINK\",\r\n      registered: false,\r\n      balanceTrx: \"0\",\r\n      withdrawnTrx: \"0\",\r\n      investedWozx: \"0\",\r\n      withdrawnWozx: \"0\",\r\n      WozxPe: \"\",\r\n      ratewozx: 0,\r\n      miPrecioWozx: 0,\r\n\r\n    };\r\n\r\n    this.Investors = this.Investors.bind(this);\r\n    this.enviarWozx = this.enviarWozx.bind(this);\r\n    this.Link = this.Link.bind(this);\r\n    this.rateWozx = this.rateWozx.bind(this);    \r\n    \r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    this.Link();\r\n    setInterval(() => this.Link(),10000);\r\n    this.rateWozx();\r\n    this.Investors();\r\n    setInterval(() => this.Investors(),10000);\r\n  };\r\n\r\n  async rateWozx(){\r\n\r\n    function esWozx(cripto) {\r\n      return cripto.symbol === 'WOZX';\r\n    }\r\n\r\n    const USER_AGENT = 'stevenSTC';\r\n    let header1 = {\r\n      'Access-Control-Allow-Origin' : AccessOrigin,\r\n      'User-Agent' : USER_AGENT,\r\n      'Access-Control-Allow-Headers': 'Origin, X-Requested-With'\r\n    };\r\n    await fetch(proxyUrl+'https://data.gateio.life/api2/1/marketlist',{method: 'GET', headers: header1})\r\n    .then(res => res.json())\r\n    .then(data => {\r\n\r\n      var ratewozx = data.data.find(esWozx).rate; \r\n      ratewozx = parseFloat(ratewozx);\r\n      this.setState({\r\n        ratewozx: ratewozx\r\n      });\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n\r\n\r\n  }\r\n\r\n  async Link() {\r\n    const {registered} = this.state;\r\n    if(registered){\r\n\r\n      let loc = document.location.href;\r\n      if(loc.indexOf('?')>0){\r\n        loc = loc.split('?')[0]\r\n      }\r\n      let mydireccion = await window.tronWeb.trx.getAccount();\r\n      mydireccion = window.tronWeb.address.fromHex(mydireccion.address)\r\n      mydireccion = loc+'?ref='+mydireccion;\r\n      this.setState({\r\n        link: mydireccion,\r\n      });\r\n    }else{\r\n      this.setState({\r\n        link: \"Haz una inversión para obtener el LINK de referido\",\r\n      });\r\n    }\r\n  }\r\n\r\n  async Investors() {\r\n\r\n    const {investedWozx, ratewozx} = this.state;\r\n\r\n    let direccion = await window.tronWeb.trx.getAccount();\r\n    let esto = await Utils.contract.investors(direccion.address).call();\r\n    var refe = [];\r\n    for (var i = 0; i < 10; i++) {\r\n      var a = await Utils.contract.myFunction(i).call();\r\n      if(parseInt(a.cantidad._hex) === 0){\r\n        refe[i] = \"N/A\";\r\n      }else{\r\n        refe[i] = parseInt(a.cantidad._hex);\r\n      }\r\n      \r\n    }\r\n    //console.log(refe);\r\n    //console.log(a);\r\n    var r = await Utils.contract.myRango().call();\r\n    var range = \"N/A\";\r\n    var prof = parseInt(r.cantidad._hex)/1000000000000\r\n    if (prof > 0 && prof < 1000  ) {\r\n      range = \"PIONEER\"\r\n    }\r\n    if (prof >= 1000 && prof < 5000  ) {\r\n      range = \"ZAPHIRE\"\r\n    }\r\n    if (prof >= 5000 && prof < 20000  ) {\r\n      range = \"RUBY\"\r\n    }\r\n    if (prof >= 20000 && prof < 50000  ) {\r\n      range = \"ESMERALDA\"\r\n    }\r\n    if (prof >= 50000 && prof < 140000  ) {\r\n      range = \"DIAMANTE\"\r\n    }\r\n    if (prof >= 140000 && prof < 400000  ) {\r\n      range = \"DIAMANTE AZUL\"\r\n    }\r\n    if (prof >= 400000 && prof < 1000000  ) {\r\n      range = \"DIAMANTE NEGRO\"\r\n    }\r\n    if (prof >= 1000000) {\r\n      range = \"DIAMANTE CORONA\"\r\n    }\r\n    //console.log(prof);\r\n    var wozxPe = await Utils.contract.wozxP().call();\r\n\r\n    //console.log(wozxPe.res);\r\n    //console.log(\"(~ \"+parseInt(wozxPe.cantidad._hex)/1000000+\" WOZX)\")\r\n\r\n    if (wozxPe.res) {\r\n      wozxPe =\"(~ \"+parseInt(wozxPe.cantidad._hex)/1000000+\" WOZX)\";\r\n    }else{\r\n      wozxPe =\"\";\r\n    }\r\n\r\n    \r\n    \r\n    this.setState({\r\n      direccion: window.tronWeb.address.fromHex(direccion.address),\r\n      registered: esto.registered,\r\n      balanceTrx: parseInt(esto.balanceTrx._hex)/1000000,\r\n      withdrawnTrx: parseInt(esto.withdrawnTrx._hex)/1000000,\r\n      investedWozx: parseInt(esto.investedWozx._hex)/1000000,\r\n      withdrawnWozx: parseInt(esto.withdrawnWozx._hex)/1000000,\r\n      WozxPe: wozxPe,\r\n      refe: refe,\r\n      rango: range,\r\n      ganancia: prof,\r\n      miPrecioWozx: investedWozx*ratewozx\r\n    });\r\n\r\n  };\r\n\r\n  async enviarWozx(){\r\n    let direccion = document.getElementById(\"enviartronwozx\").value;\r\n    var cantidad = document.getElementById(\"cantidadwozx\").value;\r\n\r\n    cantidad = parseInt(cantidad*1000000);\r\n\r\n    await Utils.contract.enviarWozx(direccion, cantidad).send();\r\n\r\n    document.getElementById(\"cantidadwozx\").value = \"\";\r\n  }\r\n\r\n\r\n  render() {\r\n    const {miPrecioWozx, WozxPe, refe, balanceTrx, withdrawnTrx, investedWozx,  withdrawnWozx , direccion, link, rango, ganancia} = this.state;\r\n\r\n    return (\r\n      \r\n      <div id=\"officer\" className=\"container\">\r\n\r\n        <header style={{'textAlign': 'center'}} className=\"section-header\">\r\n          <h3 className=\"white\"><span style={{'fontWeight': 'bold'}}>\r\n          My office:</span> <br></br>\r\n          <span style={{'fontSize': '18px'}}>\r\n\r\n            {direccion} <br />\r\n            <span className=\"subhead\">{investedWozx} WOZX =</span> $ {miPrecioWozx.toFixed(2)} USD <br />\r\n            <span className=\"subhead\">Career range:</span><a href=\"/range.html\"> {rango} </a> <br />\r\n            <span className=\"subhead\">Profits:</span> $ {ganancia} USD\r\n\r\n          </span></h3><br />\r\n          <ul className=\"stats-tabs\">\r\n            <li><a href=\"#officer\">{refe[0]} <em>Level 1</em></a></li>\r\n            <li><a href=\"#officer\">{refe[1]} <em>Level 2</em></a></li>\r\n            <li><a href=\"#officer\">{refe[2]} <em>Level 3</em></a></li>\r\n            <li><a href=\"#officer\">{refe[3]} <em>Level 4</em></a></li>\r\n            <li><a href=\"#officer\">{refe[4]} <em>Level 5</em></a></li>\r\n            <li><a href=\"#officer\">{refe[5]} <em>Level 6</em></a></li>\r\n            <li><a href=\"#officer\">{refe[6]} <em>Level 7</em></a></li>\r\n            <li><a href=\"#officer\">{refe[7]} <em>Level 8</em></a></li>\r\n            <li><a href=\"#officer\">{refe[8]} <em>Level 9</em></a></li>\r\n            <li><a href=\"#officer\">{refe[9]} <em>Level 10</em></a></li>\r\n          </ul>\r\n\r\n          <h3 className=\"white\" style={{'fontWeight': 'bold'}}>Referral link:</h3>\r\n          <h6 className=\"white\" ><a href={link}>{link}</a>&nbsp;<br /><br />\r\n          <CopyToClipboard text={link}>\r\n            <button type=\"button\" className=\"btn btn-info\">Copy to clipboard</button>\r\n          </CopyToClipboard>\r\n          </h6>\r\n          <hr></hr>\r\n          \r\n        </header>\r\n\r\n        <div className=\"row centrartexto\">\r\n\r\n          <div className=\"col-five\">\r\n          \r\n              <h1 className=\"subhead\">Balance</h1>\r\n              <h3 className=\"display-2--light\">{investedWozx} WOZX</h3>\r\n              <h3 className=\"display-2--light\">{WozxPe}</h3>\r\n              <hr></hr>\r\n            \r\n          </div>\r\n\r\n          <div className=\"col-seven\">\r\n            \r\n              <h1 className=\"subhead\">Withdrawn</h1>\r\n              <h3 className=\"display-2--light\">{withdrawnWozx} WOZX</h3>\r\n              <hr></hr>\r\n            \r\n          </div> \r\n        </div>\r\n        <div className=\"row centrartexto\">\r\n\r\n          <div className=\"col-five\">\r\n            \r\n              <h1 className=\"subhead\">Balance</h1>\r\n              <h3 className=\"display-2--light\">{balanceTrx} TRX</h3>\r\n              <hr></hr>\r\n            \r\n          </div>\r\n\r\n          <div className=\"col-seven\">\r\n            \r\n              <h1 className=\"subhead\">Withdrawn</h1>\r\n              <h3 className=\"display-2--light\">{withdrawnTrx} TRX</h3>\r\n              <hr></hr>\r\n            \r\n          </div>\r\n          \r\n        </div>\r\n        <div className=\"row centrartexto\">\r\n\r\n          <div className=\"col-eight\">\r\n            \r\n              <h3 className=\"display-2--light\"> Send WOZX to:</h3>\r\n              <input type=\"text\" className=\"form-control\" id=\"enviartronwozx\" aria-describedby=\"emailHelp\" placeholder=\"TBEhx2CjKcr62Zg4PnEm5FQMr2EVrUfXoM\" />\r\n              <small id=\"emailHelp\" className=\"form-text text-muted\">make sure the address is well written, once sent, this action cannot be reversed</small>\r\n\r\n            \r\n          </div>\r\n\r\n          <div className=\"col-four\">\r\n\r\n              <h3 className=\"display-2--light\"> Available {investedWozx} </h3>\r\n              <input type=\"number\" className=\"form-control\" id=\"cantidadwozx\" aria-describedby=\"emailHelp\" placeholder=\"how much WOZX\" />\r\n              <a className=\"btn btn-light\"  href=\"#enviartronwozx\" onClick={() => this.enviarWozx()}>send WOZX</a>\r\n            \r\n          </div>\r\n\r\n          <hr />\r\n          \r\n        </div>\r\n\r\n      </div>\r\n    \r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\nimport cons from \"../../cons.js\";\r\n\r\nimport querystring from 'querystring';\r\nimport sha512 from 'sha512';\r\nimport TronWeb2 from 'tronweb';\r\n\r\nimport web3 from 'web3';\r\n\r\nvar tantoTrx = cons.TRX;// para que el TRX se Venda de inmediato\r\nvar tantoWozx = cons.WOZX;// para que el WOZX se venda de inmediato\r\n\r\nvar amountTrx = 0;\r\nvar cantidadusd = 0;\r\nvar ratetrx = 0;\r\nvar ratewozx = 0;\r\n\r\nvar descuento = cons.descuento; \r\nvar walletSponsor = cons.WS;\r\n\r\n\r\nvar AccessOrigin = '*';\r\n\r\nvar proxyUrl = cons.proxy;\r\nconst KEY  = cons.AK;\r\nconst SECRET  = cons.SK;\r\nconst pry = cons.WO;\r\n\r\nvar pru = \"\";\r\nif (cons.PRU) {\r\n  pru = cons.PRU;\r\n}\r\n\r\nconst TRONGRID_API = \"https://api.\"+pru+\"trongrid.io\";\r\nconsole.log(TRONGRID_API);\r\n\r\nconst tronApp = new TronWeb2(\r\n  TRONGRID_API,\r\n  TRONGRID_API,\r\n  TRONGRID_API,\r\n  pry\r\n);\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      ratetrx: \"\",\r\n      ratewozx: \"\",\r\n      tipo: \"button\",\r\n      auth: \"/auth.html\",\r\n      texto: \"Loading...\",\r\n      texto3: \"Buy WOZX -> TRX\",\r\n      value: \"\",\r\n      fee: 4,\r\n      feetrx: 10,\r\n      funcion: false,\r\n      alerta: \"alerta0\",\r\n      direccion: \"\",\r\n      registered: false,\r\n      balanceRef: 0,\r\n      totalRef: 0,\r\n      invested: 0,\r\n      paidAt: 0,\r\n      my: 0,\r\n      withdrawn: 0\r\n\r\n    };\r\n\r\n    this.Investors = this.Investors.bind(this);\r\n    this.withdraw = this.withdraw.bind(this);\r\n    this.rateWozx = this.rateWozx.bind(this);\r\n    this.venderWozx = this.venderWozx.bind(this);\r\n    this.rateTRX = this.rateTRX.bind(this);\r\n    this.comprarTRX = this.comprarTRX.bind(this);\r\n    this.enviarTron = this.enviarTron.bind(this);\r\n    this.vereth = this.vereth.bind(this);\r\n    this.withdrawETH = this.withdrawETH.bind(this);\r\n    this.enviarEth = this.enviarEth.bind(this);\r\n    this.saldoApp = this.saldoApp.bind(this);\r\n    this.Wozx = this.Wozx.bind(this);\r\n    this.Tron = this.Tron.bind(this);\r\n    this.venderTRX = this.venderTRX.bind(this);\r\n    this.comprarWozx = this.comprarWozx.bind(this);\r\n    this.deposit = this.deposit.bind(this);\r\n    this.deposit2 = this.deposit2.bind(this);\r\n\r\n    \r\n  }\r\n\r\n  async Wozx (){\r\n\r\n    const { investedWozx } = this.state;\r\n\r\n    document.getElementById(\"amountWOZX\").value = investedWozx;\r\n\r\n  };\r\n\r\n  async Tron (){\r\n\r\n    const { balanceTrx } = this.state;\r\n\r\n    document.getElementById(\"amountTRX\").value = balanceTrx;\r\n\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    this.Investors();\r\n    \r\n    this.vereth();\r\n    this.enviarEth();\r\n    setInterval(() => this.Investors(),10*1000);\r\n    setInterval(() => this.vereth(),10*1000);\r\n    setInterval(() => this.enviarEth(),3*1000);\r\n  };\r\n\r\n  async saldoApp(){\r\n\r\n    let body = \"\";\r\n    let header = {};\r\n\r\n    var hasher = sha512.hmac(SECRET);\r\n    var hash = hasher.finalize(body);\r\n    var firma = hash.toString('hex');\r\n\r\n    header.KEY = KEY;\r\n    header.SIGN = firma;\r\n\r\n    await fetch(proxyUrl+'https://api.gateio.life/api2/1/private/balances',{method: 'POST', headers: header, form:body})\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      //console.log(data);\r\n      //console.log(data.available.TRX);\r\n      this.setState({\r\n        tronEnApp: data.available.TRX\r\n      });\r\n\r\n\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n  };\r\n\r\n\r\n  async rateTRX(){\r\n\r\n    function esTrx(cripto) {\r\n          return cripto.symbol === 'TRX';\r\n      }\r\n\r\n    const USER_AGENT = 'stevenSTC';\r\n    let header1 = {\r\n      'Access-Control-Allow-Origin' :AccessOrigin,\r\n      'User-Agent' : USER_AGENT,\r\n      'Access-Control-Allow-Headers': 'Origin, X-Requested-With',\r\n      'mode':'no-cors'\r\n    };\r\n    await fetch(proxyUrl+'https://data.gateio.life/api2/1/marketlist',{method: 'GET', headers: header1})\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      //console.log(data);\r\n      ratetrx = data.data.find(esTrx).rate; \r\n      ratetrx = parseFloat(ratetrx);\r\n      ratetrx = ratetrx-ratetrx*tantoTrx;\r\n      ratetrx = ratetrx.toString();\r\n      //console.log(ratetrx);\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n\r\n\r\n  };\r\n\r\n  async venderTRX(){  \r\n\r\n    await this.saldoApp();\r\n    await this.rateTRX();\r\n\r\n    const {tronEnApp} = this.state;\r\n\r\n    this.setState({\r\n      texto3:\"Please wait\"\r\n    });\r\n    \r\n    // verifica el monto sea mayor a minimo\r\n    amountTrx = document.getElementById(\"amountTRX\").value;\r\n\r\n    var result = window.confirm(\"You are sure you want to reinvest \"+amountTrx+\" TRX?\")\r\n\r\n    if (result && amountTrx > 0) {\r\n\r\n      let depomin = await Utils.contract.MIN_DEPOSIT().call();\r\n\r\n      // verifica si ya esta registrado\r\n      const account =  await window.tronWeb.trx.getAccount();\r\n      var accountAddress = account.address;\r\n      accountAddress = window.tronWeb.address.fromHex(accountAddress);\r\n\r\n      var investors = await Utils.contract.investors(accountAddress).call();\r\n      //console.log(investors);\r\n\r\n      const balanceInSun = await window.tronWeb.trx.getBalance(); //number\r\n      var balanceInTRX = window.tronWeb.fromSun(balanceInSun); //string\r\n      balanceInTRX = parseInt(balanceInTRX);//number\r\n\r\n      var montoTrx = parseInt(amountTrx);\r\n      var haytron = parseInt(tronEnApp);\r\n\r\n      if (investors.registered) {\r\n        if (amountTrx >= depomin && amountTrx <= balanceInTRX-40) {\r\n          if ( montoTrx < haytron ) {\r\n            console.log(\"Entro directo\");\r\n          amountTrx = amountTrx - amountTrx*descuento;\r\n          amountTrx = amountTrx.toString();\r\n\r\n          let currencyPair = \"trx_usdt\";\r\n\r\n          let body = querystring.stringify({'currencyPair':currencyPair,'rate':ratetrx,'amount':amountTrx});\r\n\r\n          let header = {\r\n            'Content-Type': 'application/x-www-form-urlencoded'\r\n          };\r\n\r\n          var hasher = sha512.hmac(SECRET);\r\n          var hash = hasher.finalize(body);\r\n          var firma = hash.toString('hex');\r\n\r\n          header.KEY = KEY;\r\n          header.SIGN = firma;\r\n\r\n          await fetch(proxyUrl+'https://api.gateio.life/api2/1/private/sell/',{method: 'POST', headers: header, body:body})\r\n          .then(res => res.json())\r\n          .then(data => {\r\n            //console.log(data);\r\n            var cantidadTrx=parseFloat(data.filledAmount);\r\n            var cantidadTrx2=parseFloat(data.leftAmount);\r\n            cantidadTrx = cantidadTrx+cantidadTrx2;\r\n\r\n            var precioTrx=parseFloat(data.filledRate);\r\n            cantidadusd = precioTrx*cantidadTrx;\r\n            cantidadusd = cantidadusd-cantidadusd*parseFloat(data.feeValue);\r\n            \r\n            console.log(cantidadusd);\r\n\r\n            if (data.result === \"true\") {\r\n              this.setState({\r\n                texto3:\"Buying WOZX\"\r\n              });\r\n              this.comprarWozx(cantidadusd);\r\n            }else{\r\n              this.setState({\r\n                texto3:\"Error: T-Cf-285\"\r\n              });\r\n              //No hay suficiente TRON en Gate.io\r\n            }\r\n\r\n          })\r\n          .catch(error => console.log('Error:', error));\r\n\r\n          }else{\r\n            console.log(\"Entro POST\");\r\n            // cantidad muy alta de TRX pendiente se ejecuta post recepcion de fondos\r\n            this.deposit2();\r\n          }\r\n\r\n        }else{\r\n          if ( depomin >= amountTrx ){\r\n            this.setState({\r\n              texto3:\"Enter a higher amount\"\r\n            });\r\n          }\r\n\r\n          if (balanceInTRX-40 <= amountTrx ){\r\n            this.setState({\r\n              texto3:\"Not enough TRON\"\r\n            });\r\n          }\r\n          \r\n        }\r\n\r\n      }else{\r\n\r\n        if ( balanceInTRX >= 40) {\r\n          //registra a la persona con los referidos\r\n          var loc = document.location.href;\r\n          if(loc.indexOf('?')>0){\r\n              var getString = loc.split('?')[1];\r\n              var GET = getString.split('&');\r\n              var get = {};\r\n              for(var i = 0, l = GET.length; i < l; i++){\r\n                  var tmp = GET[i].split('=');\r\n                  get[tmp[0]] = unescape(decodeURI(tmp[1]));\r\n              }\r\n              \r\n              if (get['ref']) {\r\n                tmp = get['ref'].split('#')\r\n                document.getElementById('sponsor').value = tmp[0];            \r\n              }else{\r\n\r\n                 document.getElementById('sponsor').value = walletSponsor;\r\n              }\r\n                 \r\n          }else{\r\n            \r\n              document.getElementById('sponsor').value = walletSponsor; \r\n          }\r\n\r\n          let sponsor = document.getElementById(\"sponsor\").value;\r\n\r\n          document.getElementById(\"amount\").value = \"\";\r\n          \r\n\r\n          var verispo = await Utils.contract.esponsor().call();\r\n          //console.log(verispo);\r\n\r\n          if (verispo.res) {\r\n            sponsor = window.tronWeb.address.fromHex(verispo.sponsor);\r\n          }\r\n\r\n          await Utils.contract.miRegistro(sponsor).send();\r\n\r\n        }else{\r\n          document.getElementById(\"amount\").value = \"\";\r\n          this.setState({\r\n            texto3:\"Not enough TRON\"\r\n          });\r\n          \r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n\r\n  };\r\n\r\n  async rateWozx(){\r\n\r\n    function esWozx(cripto) {\r\n      return cripto.symbol === 'WOZX';\r\n    }\r\n\r\n    const USER_AGENT = 'stevenSTC';\r\n    let header1 = {\r\n      'Access-Control-Allow-Origin' :AccessOrigin,\r\n      'User-Agent' : USER_AGENT,\r\n      'Access-Control-Allow-Headers': 'Origin, X-Requested-With'\r\n    };\r\n    await fetch(proxyUrl+'https://data.gateio.life/api2/1/marketlist',{method: 'GET', headers: header1})\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      //console.log(data);\r\n      ratewozx = data.data.find(esWozx).rate; \r\n      ratewozx = parseFloat(ratewozx);\r\n      ratewozx = ratewozx+ratewozx*tantoWozx;\r\n      ratewozx = ratewozx.toString();\r\n      //console.log(ratewozx);\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n\r\n\r\n  }\r\n\r\n  async comprarWozx(usd){    \r\n    \r\n    await this.rateWozx();\r\n\r\n    this.setState({\r\n      texto3:\"Processing...\"\r\n    });\r\n    \r\n    let amount = usd/parseFloat(ratewozx);\r\n    console.log(parseFloat(amount));\r\n\r\n    amount = amount.toString();\r\n    let currencyPair = \"wozx_usdt\";\r\n\r\n    let body = querystring.stringify({'currencyPair':currencyPair,'rate':ratewozx,'amount':amount});\r\n\r\n    let header = {'Content-Type': 'application/x-www-form-urlencoded'};\r\n\r\n    var hasher = sha512.hmac(SECRET);\r\n    var hash = hasher.finalize(body);\r\n    var firma = hash.toString('hex');\r\n\r\n    header.KEY = KEY;\r\n    header.SIGN = firma;\r\n    await fetch(proxyUrl+'https://api.gateio.life/api2/1/private/buy/',{method: 'POST', headers: header, body:body })\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      console.log(data);\r\n\r\n      var cantidadWozx = parseFloat(data.filledAmount);\r\n      var cantidadWozx2 = parseFloat(data.leftAmount);\r\n      cantidadWozx = cantidadWozx+cantidadWozx2;\r\n      cantidadWozx = cantidadWozx-cantidadWozx*parseFloat(data.feeValue);\r\n\r\n      console.log(cantidadWozx)\r\n      if (data.result === \"true\") {\r\n        this.deposit(cantidadWozx);\r\n      }else{\r\n        this.setState({\r\n          texto3:\"Error: U-Of2-406\"\r\n        });\r\n        //No hay suficiente saldo de USD en Gate.io\r\n      }\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n    \r\n    \r\n    \r\n  }\r\n\r\n\r\n  async deposit(orden) {\r\n\r\n    let amount = document.getElementById(\"amountTRX\").value;\r\n\r\n      orden = orden * 1000000;\r\n      orden = parseInt(orden);\r\n      console.log(orden);\r\n\r\n      const account =  await window.tronWeb.trx.getAccount();\r\n      var accountAddress = account.address;\r\n      accountAddress = window.tronWeb.address.fromHex(accountAddress);\r\n\r\n      this.setState({\r\n        texto3:\"Sign order\"\r\n      });\r\n\r\n      let contract = await tronApp.contract().at(contractAddress);//direccion del contrato\r\n\r\n      var pending = await contract.depositpendiente(accountAddress).call();\r\n\r\n      console.log(pending);\r\n      //cancela cualquier deposito inconcluso para hacer uno nuevo\r\n      if (pending.res) {\r\n        console.log(pending);\r\n        await contract.cancelDepo(accountAddress).send();\r\n      }\r\n      \r\n\r\n      //crea una nueva orden directa\r\n      await contract.firmarTx(accountAddress, orden).send();\r\n\r\n      this.setState({\r\n        texto3:\"Reciving TRON\"\r\n      });\r\n      \r\n      await Utils.contract.redeposit(amount * 1000000).send();\r\n\r\n      this.setState({\r\n        texto3:\"Handing out rewards\"\r\n      });\r\n\r\n      await contract.transfers().send();\r\n      this.setState({\r\n        texto3:\"Buy WOZX -> TRX\"\r\n      });\r\n      \r\n\r\n    document.getElementById(\"amountTRX\").value = \"\";\r\n\r\n    \r\n  };\r\n\r\n  async deposit2() {\r\n\r\n    await this.rateWozx();\r\n    await this.rateTRX();\r\n\r\n    let amount = document.getElementById(\"amountTRX\").value;\r\n    \r\n\r\n    this.setState({\r\n      texto3:\"Don't close the window\"\r\n    });\r\n\r\n    await Utils.contract.redepositPost(amount * 1000000).send();\r\n\r\n    var orden = amount*ratetrx-ratetrx*tantoTrx;\r\n    orden = orden-orden*descuento;\r\n    orden = orden / ratewozx+ratewozx*tantoWozx;\r\n    orden = parseInt(orden*1000000);\r\n    console.log(orden);\r\n    console.log(amount);\r\n    const account =  await window.tronWeb.trx.getAccount();\r\n    var accountAddress = account.address;\r\n    accountAddress = window.tronWeb.address.fromHex(accountAddress);\r\n    console.log(accountAddress);\r\n\r\n    var am = parseInt(amount*1000000);\r\n    console.log(am);\r\n\r\n    this.setState({\r\n      texto3:\"Saving order\"\r\n    });\r\n    let contract = await tronApp.contract().at(contractAddress);//direccion del contrato para la W app\r\n    await contract.ordenPost(accountAddress, am, orden).send();\r\n\r\n    this.setState({\r\n      texto3:\"Buy WOZX\"\r\n    });\r\n\r\n    document.getElementById(\"amountTRX\").value = \"\";\r\n    \r\n  };\r\n\r\n  async venderWozx(){   \r\n    await this.rateWozx();\r\n\r\n    ratewozx = parseFloat(ratewozx);\r\n    console.log(ratewozx);\r\n    ratewozx = ratewozx-ratewozx*tantoWozx*4;\r\n    console.log(ratewozx);\r\n\r\n    ratewozx = ratewozx.toString();\r\n\r\n    const {investedWozx} = this.state;\r\n    \r\n    var amount = document.getElementById(\"amountWOZX\").value;\r\n\r\n    const result = window.confirm(\"You are sure you want to SELL \"+amount+\" Wozx?, remember that this action cannot be reversed\");\r\n\r\n    if (result && amount > 0 && investedWozx > 0 && amount <= investedWozx){\r\n\r\n      amount = amount.toString();\r\n      let currencyPair = \"wozx_usdt\";\r\n\r\n      let body = querystring.stringify({'currencyPair':currencyPair,'rate':ratewozx,'amount':amount});\r\n\r\n      let header = {'Content-Type': 'application/x-www-form-urlencoded'};\r\n\r\n      var hasher = sha512.hmac(SECRET);\r\n      var hash = hasher.finalize(body);\r\n      var firma = hash.toString('hex');\r\n\r\n      header.KEY = KEY;\r\n      header.SIGN = firma;\r\n\r\n      await fetch(proxyUrl+'https://api.gateio.life/api2/1/private/sell/',{method: 'POST', headers: header, body:body })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        var cantidadWozx=parseFloat(data.filledAmount);\r\n        var cantidadWozx2=parseFloat(data.leftAmount);\r\n        cantidadWozx=cantidadWozx+cantidadWozx2;\r\n        var precioWozx=parseFloat(data.filledRate);\r\n        var cantidadusd = precioWozx*cantidadWozx;\r\n        cantidadusd = cantidadusd-parseFloat(data.feeValue);\r\n        if (data.result === \"true\") {\r\n          console.log(cantidadusd)\r\n          this.comprarTRX(cantidadusd, cantidadWozx);\r\n        }\r\n      })\r\n      .catch(error => console.log('Error:', error));\r\n\r\n    }\r\n    \r\n    document.getElementById(\"amountWOZX\").value = \"\";\r\n\r\n  };\r\n\r\n\r\n  async comprarTRX(c, w){    \r\n\r\n    await this.rateTRX();\r\n\r\n    ratetrx = parseFloat(ratetrx);\r\n    console.log(ratetrx);\r\n    ratetrx = ratetrx+ratetrx*tantoTrx*2;\r\n    console.log(ratetrx);\r\n    \r\n    let amount = c/ratetrx;\r\n\r\n    amount = amount.toString();\r\n    ratetrx = ratetrx.toString();\r\n\r\n    console.log(amount);\r\n\r\n    let currencyPair = \"trx_usdt\";\r\n\r\n    let body = querystring.stringify({'currencyPair':currencyPair,'rate':ratetrx,'amount':amount});\r\n\r\n    let header = {'Content-Type': 'application/x-www-form-urlencoded'};\r\n\r\n    var hasher = sha512.hmac(SECRET);\r\n    var hash = hasher.finalize(body);\r\n    var firma = hash.toString('hex');\r\n\r\n    header.KEY = KEY;\r\n    header.SIGN = firma;\r\n    await fetch(proxyUrl+'https://api.gateio.life/api2/1/private/buy/',{method: 'POST', headers: header, body:body })\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      console.log(data);\r\n      var cantidadTrx = parseFloat(data.filledAmount);\r\n      var cantidadTrx2 = parseFloat(data.leftAmount);\r\n      cantidadTrx = cantidadTrx+cantidadTrx2;\r\n      cantidadTrx = cantidadTrx-parseFloat(data.feeValue);\r\n      \r\n      console.log(cantidadTrx);\r\n\r\n      if (data.result === \"true\") {\r\n        this.enviarTron(cantidadTrx, w);\r\n      }\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n    \r\n\r\n  }\r\n\r\n  async enviarTron(trx, wozx){\r\n\r\n    await this.rateTRX();\r\n    await this.rateWozx();\r\n\r\n    //enviar el tron a la direccion del contrato\r\n    let wallet = await window.tronWeb.trx.getAccount();\r\n    wallet = window.tronWeb.address.fromHex(wallet.address)\r\n\r\n    let contract = await tronApp.contract().at(contractAddress);//direccion del contrato para la W app\r\n    await contract.wozxToTron(wallet, parseInt(ratetrx*1000000), parseInt(ratewozx*1000000), parseInt(wozx*1000000)).send();\r\n    console.log(\"se envio \"+trx+\" TRX a \"+wallet+\" exitosamente\")\r\n\r\n    let amount = trx;\r\n\r\n    amount = amount.toString();\r\n    let currency = \"trx\";\r\n\r\n    // envia el saldo necesario a la direccion del contrato // si está en pruebas se lo envia al owner\r\n    var address;\r\n    if (cons.PRU) {\r\n      let ownerContrato = await Utils.contract.owner().call();\r\n      ownerContrato = window.tronWeb.address.fromHex(ownerContrato);\r\n      address = ownerContrato;\r\n    }else{\r\n      address = contractAddress;\r\n    }    \r\n\r\n    console.log(address);\r\n\r\n    let body = querystring.stringify({'currency':currency,'amount':amount, 'address':address});\r\n\r\n    let header = {'Content-Type': 'application/x-www-form-urlencoded'};\r\n\r\n    var hasher = sha512.hmac(SECRET);\r\n    var hash = hasher.finalize(body);\r\n    var firma = hash.toString('hex');\r\n\r\n    header.KEY = KEY;\r\n    header.SIGN = firma;\r\n    await fetch(proxyUrl+'https://api.gateio.life/api2/1/private/withdraw',{method: 'POST', headers: header, body:body })\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      console.log(data);\r\n    })\r\n    .catch(error => console.log('Error:', error));\r\n  }   \r\n\r\n  async Investors() {\r\n\r\n    let direccion = await window.tronWeb.trx.getAccount();\r\n    let esto = await Utils.contract.investors(direccion.address).call();\r\n    let My = await Utils.contract.MYwithdrawable().call();\r\n    //console.log(esto);\r\n    //console.log(My);\r\n    this.setState({\r\n      direccion: window.tronWeb.address.fromHex(direccion.address),\r\n      registered: esto.registered,\r\n      balanceTrx: parseInt(esto.balanceTrx._hex)/1000000,\r\n      investedWozx: parseInt(esto.investedWozx._hex)/1000000,\r\n      mywithdrawableWozx: parseInt(My.amount._hex)/1000000\r\n    });\r\n\r\n  };\r\n\r\n  async withdraw(){\r\n    var hay = await Utils.contract.MYwithdrawable().call();\r\n    var minre = await Utils.contract.COMISION_RETIRO().call();\r\n    var balanceContract = Utils.contract.InContract().call();\r\n\r\n    var amount = document.getElementById(\"amountTRX\").value;\r\n\r\n    balanceContract = parseInt(balanceContract._hex)/1000000;\r\n    hay = parseInt(hay.amount._hex)/1000000;\r\n    minre = parseInt(minre._hex)/1000000;\r\n\r\n    console.log(hay);\r\n    console.log(minre);\r\n\r\n    var result = false;\r\n\r\n    result = window.confirm(\"You are sure that you want to WITHDRAW \"+amount+\" TRX?, remember that this action cost \"+minre+\" TRX\");\r\n\r\n    if (result && amount > 0){\r\n\r\n      if (hay > minre && amount <= hay && balanceContract >= amount) {\r\n\r\n        amount = parseInt(amount*1000000);\r\n        \r\n        await Utils.contract.withdraw(amount).send();\r\n      }else{\r\n        window.alert(\"Try again Later\");\r\n      }\r\n    }\r\n    \r\n  };\r\n\r\n  async withdrawETH(){\r\n\r\n    async function sacarwozx(c){\r\n\r\n      this.setState({\r\n        texto: \"Wait for sing...\"\r\n      });\r\n      \r\n      await Utils.contract.retirarWozx(parseInt(c)*1000000).send();\r\n\r\n      this.setState({\r\n        texto: \"successful withdrawal\"\r\n      });\r\n    }\r\n    \r\n    const { funcion, investedWozx, fee } = this.state;\r\n\r\n    var amount = document.getElementById(\"amountWOZX\").value;\r\n\r\n    const result = window.confirm(\"You are sure that you want to WITHDRAW \"+amount+\" Wozx?, remember that this action cannot be reversed\");\r\n\r\n    if (result && amount > 0 && investedWozx > 0){\r\n\r\n    if (funcion) {\r\n      if (amount <= investedWozx && investedWozx > fee) {\r\n        amount = amount-fee+3.6;\r\n        amount = amount.toString();\r\n        let currency = \"wozx\";\r\n\r\n        let direccion = await window.tronWeb.trx.getAccount();\r\n        var address = await Utils.contract.miETH(window.tronWeb.address.fromHex(direccion.address)).call()\r\n        address = address.ethdireccion;\r\n        //address =\"0x11134Bd1dd0219eb9B4Ab931c508834EA29C0F8d\";\r\n\r\n        let body = querystring.stringify({'currency':currency,'amount':amount, 'address':address});\r\n\r\n        let header = {'Content-Type': 'application/x-www-form-urlencoded'};\r\n\r\n        var hasher = sha512.hmac(SECRET);\r\n        var hash = hasher.finalize(body);\r\n        var firma = hash.toString('hex');\r\n\r\n        header.KEY = KEY;\r\n        header.SIGN = firma;\r\n        await fetch(proxyUrl+'https://api.gateio.life/api2/1/private/withdraw',{method: 'POST', headers: header, body:body })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          console.log(data);\r\n          \r\n          if (data.result === \"true\") {\r\n            this.setState({\r\n              texto: \"Sendig WOZX\"\r\n            });\r\n            sacarwozx(amount);\r\n          }else{\r\n            this.setState({\r\n              texto: \"Error: SW-Of2-347\"\r\n            });\r\n            //no hay saldo de WOZX en gate.io\r\n          }\r\n        })\r\n        .catch(error => console.log('Error:', error));\r\n\r\n\r\n        \r\n      }\r\n      \r\n\r\n      \r\n    }else{\r\n      this.setState({\r\n          texto:\"Error: ETH-Of2-361\"\r\n        });\r\n      //No tienes billetera de Ethereum registrada\r\n    }\r\n  }\r\n\r\n  document.getElementById(\"amountWOZX\").value = \"\";\r\n    \r\n  };\r\n\r\n  async escribireth(wallet){\r\n\r\n    await Utils.contract.setETH(wallet).send();\r\n     this.setState({\r\n        tipo:\"button\",\r\n        boton: \"Enabling address\",\r\n        cosa: false\r\n      });\r\n    \r\n\r\n  };\r\n\r\n  async enviarEth(atuh){\r\n\r\n    var dirETH = document.getElementById(\"direccioneth\").value;\r\n    var esEth = web3.utils.isAddress(dirETH);\r\n    //console.log(esEth);\r\n    if (esEth) {\r\n      this.setState({\r\n        tipo:\"submit\",\r\n        boton: \"Enable address\",\r\n        cosa: true\r\n      });\r\n      if (atuh) {\r\n        this.escribireth(dirETH);\r\n      }\r\n      \r\n\r\n    }else{\r\n      this.setState({\r\n        tipo:\"button\",\r\n        boton: \"Check address\",\r\n        cosa: false\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  async vereth(){\r\n    let direccion = await window.tronWeb.trx.getAccount();\r\n    var eth = await Utils.contract.miETH(window.tronWeb.address.fromHex(direccion.address)).call()\r\n    //console.log(eth);\r\n    let wallet = await window.tronWeb.trx.getAccount();\r\n    wallet = window.tronWeb.address.fromHex(wallet.address)\r\n      \r\n    if (eth.habilitado) {\r\n      this.setState({\r\n        alerta: \"alerta0\",\r\n        funcion:true,\r\n        auth: \"#invested_wozx2\",\r\n        texto: \"Withdrawal WOZX\",\r\n        walleteth: eth.ethdireccion\r\n      });\r\n    }else{      \r\n      this.setState({\r\n        alerta: \"alerta1\",\r\n        funcion:false,\r\n        auth: \"#alert\",\r\n        texto:\"Enable WOZX\",\r\n        texto2:'Enter your address to receive WOZX',\r\n        value: wallet,\r\n        boton: \"Check address\",\r\n        walleteth: \"Undefined address\"\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const { cosa, walleteth, balanceTrx, investedWozx, auth, texto, texto2, texto3, alerta, value, tipo, boton, fee, feetrx} = this.state;\r\n\r\n    var dirwozx = \"https://etherscan.io/token/0x34950ff2b487d9e5282c5ab342d08a2f712eb79f?a=\"+walleteth;\r\n\r\n    return (\r\n      \r\n      <div className=\"container\">\r\n\r\n        <div id=\"invested_wozx2\" className=\"row\">\r\n\r\n          <div className=\"subhead\" data-wow-duration=\"1.4s\">\r\n            <div className=\"box\">\r\n            \r\n              <h3 className=\"display-2--light\" style={{cursor: \"pointer\"}} onClick={() => this.Wozx()}>Available: <br></br>{investedWozx} WOZX</h3>\r\n\r\n              <input type=\"number\" className=\"form-control amount\" id=\"amountWOZX\" placeholder=\"How much WOZX\"></input>\r\n              <button type=\"button\" className=\"btn btn-info\" onClick={() => this.venderWozx()}>Sell WOZX -> TRX</button>\r\n              <a className=\"btn btn-light\"  href={auth} onClick={() => this.withdrawETH()}>{texto}</a>\r\n              <p>to: <a href={dirwozx} rel=\"noopener noreferrer\" target=\"_blank\">{walleteth}</a></p>\r\n              <p>Fee {fee} WOZX</p>\r\n              <hr></hr>\r\n              <div id=\"alert\" className={alerta}>\r\n                {texto2}\r\n                <br></br> \r\n                <form target=\"_blank\" action=\"auth.php\" method=\"post\">\r\n                  <input name=\"tron\" id=\"walletTron\" type=\"hidden\"  value={value} />\r\n                  <input name=\"eth\" type=\"text\" className=\"form-control\" id=\"direccioneth\" placeholder=\"0x11134Bd1dd0219eb9B4Ab931c508834EA29C0F8d\"></input>\r\n                  <button type={tipo} className=\"btn btn-info\" onClick={() => this.enviarEth(cosa)}>{boton}</button>\r\n                </form>\r\n              </div>\r\n              \r\n      \r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"subhead\" data-wow-duration=\"1.4s\">\r\n            <div className=\"box\">\r\n              <h3 className=\"display-2--light\" style={{cursor: \"pointer\"}} onClick={() => this.Tron()}>Available: <br></br>{balanceTrx} TRX</h3>\r\n              <input type=\"number\" className=\"form-control amount\" id=\"amountTRX\" placeholder=\"How much TRX\"></input>\r\n              <button type=\"button\" className=\"btn btn-info\" onClick={() => this.venderTRX()}>{texto3}</button>\r\n              <button type=\"button\" className=\"btn btn-info\" onClick={() => this.withdraw()}>Withdrawal TRX</button>\r\n              <p>Fee {feetrx} TRX</p>\r\n              <hr></hr>\r\n            </div>\r\n          </div>\r\n          \r\n\r\n        </div>\r\n\r\n      </div>\r\n    \r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport TronLinkLogo from './TronLinkLogo.png';\r\n\r\n\r\nconst WEBSTORE_URL = 'https://chrome.google.com/webstore/detail/ibnejdfjmmkpcnlpebklmnkoeoihofec/';\r\n\r\nconst logo = (\r\n    <div className='col-xs-12 col-md-4 text-center'>\r\n        <img src={ TronLinkLogo } className=\"img-fluid\" alt='TronLink logo' />\r\n    </div>\r\n);\r\n\r\nconst openTronLink = () => {\r\n    window.open(WEBSTORE_URL, '_blank');\r\n};\r\n\r\nconst TronLinkGuide = props => {\r\n    const {\r\n        installed = false\r\n    } = props;\r\n\r\n    if(!installed) {\r\n        return (\r\n            <div className='row tron contact-content aos-init aos-animate' onClick={ openTronLink }>\r\n                <div>\r\n                    <h5>TronLink Required</h5>\r\n                    <p>\r\n                        To create a post or tip others you must install TronLink. TronLink is a TRON wallet for the browser\r\n                        that can be <a href={ WEBSTORE_URL } target='_blank' rel='noopener noreferrer'>installed from the Chrome Webstore</a>.\r\n                        Once installed, return back and refresh the page.\r\n                    </p>\r\n                </div>\r\n                { logo }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className='row tron contact-content aos-init aos-animate' onClick={ openTronLink }>\r\n            <div>\r\n                <h5>Log in Required</h5>\r\n                <p>\r\n                    TronLink is installed but you must first log in. Open TronLink from the browser bar and set up your\r\n                    first wallet or decrypt a previously-created wallet.\r\n                </p>\r\n            </div>\r\n            { logo }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TronLinkGuide;","import React, { Component } from \"react\";\r\nimport Utils from \"../../utils\";\r\nimport contractAddress from \"../Contract\";\r\n\r\n\r\nexport default class WozxInvestor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isowner: false,\r\n      retiros: \"\",\r\n      saldo: 0,\r\n      texto: \"Enable\"\r\n    };\r\n\r\n    this.isOwner = this.isOwner.bind(this);\r\n    this.pararRetiros = this.pararRetiros.bind(this);\r\n\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await Utils.setContract(window.tronWeb, contractAddress);\r\n    setInterval(() => this.isOwner(),10*1000);\r\n  };\r\n\r\n  async isOwner() {\r\n\r\n    let ownerContrato = await Utils.contract.owner().call();\r\n    ownerContrato = window.tronWeb.address.fromHex(ownerContrato);\r\n\r\n    let ownerTronlink = await window.tronWeb.trx.getAccount();\r\n    ownerTronlink = ownerTronlink.address;\r\n    ownerTronlink = window.tronWeb.address.fromHex(ownerTronlink);\r\n\r\n    //console.log(ownerContrato);\r\n    //console.log(ownerTronlink);\r\n\r\n    if (ownerContrato === ownerTronlink) {\r\n      let sal = await Utils.contract.InContract().call(); \r\n      sal = parseInt(sal._hex)/1000000;\r\n      //console.log(sal);\r\n      let si = await Utils.contract.Do().call();\r\n      \r\n      if (si) {\r\n        this.setState({\r\n          retiros: \"Deshabilitar retiros\"\r\n        });\r\n      }else{\r\n        this.setState({\r\n          retiros: \"Habilitar retiros\"\r\n        });\r\n      }\r\n\r\n      this.setState({\r\n        saldo: sal,\r\n        isowner: true\r\n\r\n      });\r\n    }else{\r\n      this.setState({\r\n        isowner: false\r\n\r\n      });\r\n    }\r\n    \r\n\r\n  };\r\n\r\n  async pararRetiros() {\r\n\r\n    await Utils.contract.stopWithdrawl().send();\r\n    let si = await Utils.contract.Do().call();\r\n\r\n    if (si) {\r\n      this.setState({\r\n        retiros: \"Deshabilitar retiros y depositos\"\r\n\r\n      });\r\n      alert(\"Los retiros y depositos han sido Habilitados\")\r\n    }else{\r\n      this.setState({\r\n        retiros: \"Habilitar retiros y depositos\"\r\n\r\n      });\r\n      alert(\"Los retiros y depositos han sido Deshabilitados\")\r\n    }\r\n    \r\n\r\n  };\r\n\r\n  async sacarSaldo() {\r\n\r\n    await Utils.contract.withdrawAll().send(); \r\n\r\n  };\r\n\r\n  async habilitarETH() {\r\n\r\n    var wallet = document.getElementById(\"habilitareth\").value;\r\n    this.setState({\r\n        texto: \"Enabling...\"\r\n    });\r\n    \r\n    var data = await Utils.contract.habilitarETH(wallet).send();\r\n    console.log(data);\r\n\r\n    this.setState({\r\n        texto: \"address enabled\"\r\n    });\r\n\r\n    document.getElementById(\"habilitareth\").value = \"\";\r\n\r\n  };\r\n\r\n\r\n  render() {\r\n    const { texto, isowner, retiros, saldo } = this.state;\r\n    if (isowner) {\r\n      return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-six\">\r\n            <h5 className=\"card-title\">Panel Owner</h5>\r\n            <button type=\"button\" className=\"btn btn-info\" onClick={() => this.pararRetiros()}>{retiros}</button><hr></hr>\r\n            <button type=\"button\" className=\"btn btn-info\" onClick={() => this.sacarSaldo()}>Sacar {saldo} TRX</button>\r\n          </div>\r\n          <div className=\"col-six\">\r\n            <h5 className=\"card-title\">Enable eth withdrawal to:</h5>\r\n            <input type=\"text\" className=\"form-control\" id=\"habilitareth\" aria-describedby=\"emailHelp\" placeholder=\"TBEhx2CjKcr62Zg4PnEm5FQMr2EVrUfXoM\" />\r\n            <button type=\"button\" className=\"btn btn-info\" onClick={() => this.habilitarETH()}>{texto}</button>\r\n          </div>\r\n        </div>\r\n      </div>);\r\n    }else{\r\n      return (\r\n        <>\r\n        <div>\r\n        </div>\r\n        </>\r\n        );\r\n\r\n    }\r\n    \r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport TronWeb from \"tronweb\";\r\n\r\nimport Utils from \"../../utils\";\r\nimport CrowdFunding from \"../CrowdFunding\";\r\n//import Datos from \"../Datos\";\r\nimport Historial from \"../Historial/\"\r\nimport Oficina from \"../Oficina\";\r\nimport Oficina2 from \"../Oficina2\";\r\nimport TronLinkGuide from \"../TronLinkGuide\";\r\nimport PanelOwner from \"../PanelOwner\";\r\n\r\n\r\nconst FOUNDATION_ADDRESS = \"TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tronWeb: {\r\n        installed: false,\r\n        loggedIn: false\r\n      }\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await new Promise(resolve => {\r\n      const tronWebState = {\r\n        installed: !!window.tronWeb,\r\n        loggedIn: window.tronWeb && window.tronWeb.ready\r\n      };\r\n\r\n      if (tronWebState.installed) {\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        return resolve();\r\n      }\r\n\r\n      let tries = 0;\r\n\r\n      const timer = setInterval(() => {\r\n        if (tries >= 10) {\r\n\r\n          const TRONGRID_API = \"https://api.trongrid.io\";\r\n\r\n          window.tronWeb = new TronWeb(\r\n            TRONGRID_API,\r\n            TRONGRID_API,\r\n            TRONGRID_API\r\n          );\r\n\r\n          this.setState({\r\n            tronWeb: {\r\n              installed: false,\r\n              loggedIn: false\r\n            }\r\n          });\r\n          clearInterval(timer);\r\n          return resolve();\r\n        }\r\n\r\n        tronWebState.installed = !!window.tronWeb;\r\n        tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\r\n\r\n        if (!tronWebState.installed) {\r\n          return tries++;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: tronWebState\r\n        });\r\n\r\n        resolve();\r\n      }, 100);\r\n    });\r\n\r\n    if (!this.state.tronWeb.loggedIn) {\r\n      // Set default address (foundation address) used for contract calls\r\n      // Directly overwrites the address object if TronLink disabled the\r\n      // function call\r\n      window.tronWeb.defaultAddress = {\r\n        hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\r\n        base58: FOUNDATION_ADDRESS\r\n      };\r\n\r\n      window.tronWeb.on(\"addressChange\", () => {\r\n        if (this.state.tronWeb.loggedIn) {\r\n          return;\r\n        }\r\n\r\n        this.setState({\r\n          tronWeb: {\r\n            installed: true,\r\n            loggedIn: true\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    Utils.setTronWeb(window.tronWeb);\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.tronWeb.installed) return (\r\n      <>\r\n        <div className=\"container\">\r\n        <TronLinkGuide />\r\n        </div>\r\n      </>\r\n      );\r\n\r\n    if (!this.state.tronWeb.loggedIn) return (\r\n      <>\r\n        <div className=\"container\">\r\n        <TronLinkGuide installed />\r\n        </div>\r\n      </>\r\n      );\r\n\r\n    return (\r\n      <>\r\n      <div className=\"row contact-content\">\r\n            \r\n        <div className=\"contact-primary\">\r\n          \r\n          <div>\r\n            \r\n            <PanelOwner />\r\n            <Oficina /> \r\n          </div>\r\n        </div>\r\n        <div className=\"contact-secondary\">\r\n          <div className=\"contact-info\">\r\n            <CrowdFunding />\r\n            <hr></hr>\r\n            <Oficina2 />\r\n            <Historial />\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      </>\r\n      \r\n\r\n\r\n      );\r\n\r\n  }\r\n}\r\nexport default App;\r\n\r\n// {tWeb()}\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\n\r\nvar root = document.getElementById(\"root\");\r\n\r\n\r\nReactDOM.render(<App />, root);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}